/*
 * Safeguard Core API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace OneIdentitySafeguard.Mock.Server.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class PlatformTaskLoadStatus : IEquatable<PlatformTaskLoadStatus>
    { 
        /// <summary>
        /// Gets or Sets ApplianceLoadData
        /// </summary>

        [DataMember(Name="ApplianceLoadData")]
        public List<ApplianceLoadData> ApplianceLoadData { get; set; }

        /// <summary>
        /// Gets or Sets PendingPasswordChecks
        /// </summary>

        [DataMember(Name="PendingPasswordChecks")]
        public int? PendingPasswordChecks { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledPasswordChecks
        /// </summary>

        [DataMember(Name="ScheduledPasswordChecks")]
        public int? ScheduledPasswordChecks { get; set; }

        /// <summary>
        /// Gets or Sets PendingPasswordChanges
        /// </summary>

        [DataMember(Name="PendingPasswordChanges")]
        public int? PendingPasswordChanges { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledPasswordChanges
        /// </summary>

        [DataMember(Name="ScheduledPasswordChanges")]
        public int? ScheduledPasswordChanges { get; set; }

        /// <summary>
        /// Gets or Sets PendingSshKeyChecks
        /// </summary>

        [DataMember(Name="PendingSshKeyChecks")]
        public int? PendingSshKeyChecks { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledSshKeyChecks
        /// </summary>

        [DataMember(Name="ScheduledSshKeyChecks")]
        public int? ScheduledSshKeyChecks { get; set; }

        /// <summary>
        /// Gets or Sets PendingSshKeyChanges
        /// </summary>

        [DataMember(Name="PendingSshKeyChanges")]
        public int? PendingSshKeyChanges { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledSshKeyChanges
        /// </summary>

        [DataMember(Name="ScheduledSshKeyChanges")]
        public int? ScheduledSshKeyChanges { get; set; }

        /// <summary>
        /// Gets or Sets PendingSshKeyDiscoveries
        /// </summary>

        [DataMember(Name="PendingSshKeyDiscoveries")]
        public int? PendingSshKeyDiscoveries { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledSshKeyDiscoveries
        /// </summary>

        [DataMember(Name="ScheduledSshKeyDiscoveries")]
        public int? ScheduledSshKeyDiscoveries { get; set; }

        /// <summary>
        /// Gets or Sets PendingDependentAssetUpdates
        /// </summary>

        [DataMember(Name="PendingDependentAssetUpdates")]
        public int? PendingDependentAssetUpdates { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledDependentAssetUpdates
        /// </summary>

        [DataMember(Name="ScheduledDependentAssetUpdates")]
        public int? ScheduledDependentAssetUpdates { get; set; }

        /// <summary>
        /// Gets or Sets PendingAccountDiscoveries
        /// </summary>

        [DataMember(Name="PendingAccountDiscoveries")]
        public int? PendingAccountDiscoveries { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledAccountDiscoveries
        /// </summary>

        [DataMember(Name="ScheduledAccountDiscoveries")]
        public int? ScheduledAccountDiscoveries { get; set; }

        /// <summary>
        /// Gets or Sets PendingServiceDiscoveries
        /// </summary>

        [DataMember(Name="PendingServiceDiscoveries")]
        public int? PendingServiceDiscoveries { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledServiceDiscoveries
        /// </summary>

        [DataMember(Name="ScheduledServiceDiscoveries")]
        public int? ScheduledServiceDiscoveries { get; set; }

        /// <summary>
        /// Gets or Sets PendingAssetDiscoveries
        /// </summary>

        [DataMember(Name="PendingAssetDiscoveries")]
        public int? PendingAssetDiscoveries { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledAssetDiscoveries
        /// </summary>

        [DataMember(Name="ScheduledAssetDiscoveries")]
        public int? ScheduledAssetDiscoveries { get; set; }

        /// <summary>
        /// Gets or Sets PendingSuspendAccounts
        /// </summary>

        [DataMember(Name="PendingSuspendAccounts")]
        public int? PendingSuspendAccounts { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledSuspendAccounts
        /// </summary>

        [DataMember(Name="ScheduledSuspendAccounts")]
        public int? ScheduledSuspendAccounts { get; set; }

        /// <summary>
        /// Gets or Sets PendingRestoreAccounts
        /// </summary>

        [DataMember(Name="PendingRestoreAccounts")]
        public int? PendingRestoreAccounts { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledRestoreAccounts
        /// </summary>

        [DataMember(Name="ScheduledRestoreAccounts")]
        public int? ScheduledRestoreAccounts { get; set; }

        /// <summary>
        /// Gets or Sets PendingSyncAccounts
        /// </summary>

        [DataMember(Name="PendingSyncAccounts")]
        public int? PendingSyncAccounts { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledSyncAccounts
        /// </summary>

        [DataMember(Name="ScheduledSyncAccounts")]
        public int? ScheduledSyncAccounts { get; set; }

        /// <summary>
        /// Gets or Sets PendingTestConnections
        /// </summary>

        [DataMember(Name="PendingTestConnections")]
        public int? PendingTestConnections { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledTestConnections
        /// </summary>

        [DataMember(Name="ScheduledTestConnections")]
        public int? ScheduledTestConnections { get; set; }

        /// <summary>
        /// Gets or Sets PendingSshKeySyncAccounts
        /// </summary>

        [DataMember(Name="PendingSshKeySyncAccounts")]
        public int? PendingSshKeySyncAccounts { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledSshKeySyncAccounts
        /// </summary>

        [DataMember(Name="ScheduledSshKeySyncAccounts")]
        public int? ScheduledSshKeySyncAccounts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PlatformTaskLoadStatus {\n");
            sb.Append("  ApplianceLoadData: ").Append(ApplianceLoadData).Append("\n");
            sb.Append("  PendingPasswordChecks: ").Append(PendingPasswordChecks).Append("\n");
            sb.Append("  ScheduledPasswordChecks: ").Append(ScheduledPasswordChecks).Append("\n");
            sb.Append("  PendingPasswordChanges: ").Append(PendingPasswordChanges).Append("\n");
            sb.Append("  ScheduledPasswordChanges: ").Append(ScheduledPasswordChanges).Append("\n");
            sb.Append("  PendingSshKeyChecks: ").Append(PendingSshKeyChecks).Append("\n");
            sb.Append("  ScheduledSshKeyChecks: ").Append(ScheduledSshKeyChecks).Append("\n");
            sb.Append("  PendingSshKeyChanges: ").Append(PendingSshKeyChanges).Append("\n");
            sb.Append("  ScheduledSshKeyChanges: ").Append(ScheduledSshKeyChanges).Append("\n");
            sb.Append("  PendingSshKeyDiscoveries: ").Append(PendingSshKeyDiscoveries).Append("\n");
            sb.Append("  ScheduledSshKeyDiscoveries: ").Append(ScheduledSshKeyDiscoveries).Append("\n");
            sb.Append("  PendingDependentAssetUpdates: ").Append(PendingDependentAssetUpdates).Append("\n");
            sb.Append("  ScheduledDependentAssetUpdates: ").Append(ScheduledDependentAssetUpdates).Append("\n");
            sb.Append("  PendingAccountDiscoveries: ").Append(PendingAccountDiscoveries).Append("\n");
            sb.Append("  ScheduledAccountDiscoveries: ").Append(ScheduledAccountDiscoveries).Append("\n");
            sb.Append("  PendingServiceDiscoveries: ").Append(PendingServiceDiscoveries).Append("\n");
            sb.Append("  ScheduledServiceDiscoveries: ").Append(ScheduledServiceDiscoveries).Append("\n");
            sb.Append("  PendingAssetDiscoveries: ").Append(PendingAssetDiscoveries).Append("\n");
            sb.Append("  ScheduledAssetDiscoveries: ").Append(ScheduledAssetDiscoveries).Append("\n");
            sb.Append("  PendingSuspendAccounts: ").Append(PendingSuspendAccounts).Append("\n");
            sb.Append("  ScheduledSuspendAccounts: ").Append(ScheduledSuspendAccounts).Append("\n");
            sb.Append("  PendingRestoreAccounts: ").Append(PendingRestoreAccounts).Append("\n");
            sb.Append("  ScheduledRestoreAccounts: ").Append(ScheduledRestoreAccounts).Append("\n");
            sb.Append("  PendingSyncAccounts: ").Append(PendingSyncAccounts).Append("\n");
            sb.Append("  ScheduledSyncAccounts: ").Append(ScheduledSyncAccounts).Append("\n");
            sb.Append("  PendingTestConnections: ").Append(PendingTestConnections).Append("\n");
            sb.Append("  ScheduledTestConnections: ").Append(ScheduledTestConnections).Append("\n");
            sb.Append("  PendingSshKeySyncAccounts: ").Append(PendingSshKeySyncAccounts).Append("\n");
            sb.Append("  ScheduledSshKeySyncAccounts: ").Append(ScheduledSshKeySyncAccounts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((PlatformTaskLoadStatus)obj);
        }

        /// <summary>
        /// Returns true if PlatformTaskLoadStatus instances are equal
        /// </summary>
        /// <param name="other">Instance of PlatformTaskLoadStatus to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PlatformTaskLoadStatus other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    ApplianceLoadData == other.ApplianceLoadData ||
                    ApplianceLoadData != null &&
                    ApplianceLoadData.SequenceEqual(other.ApplianceLoadData)
                ) && 
                (
                    PendingPasswordChecks == other.PendingPasswordChecks ||
                    PendingPasswordChecks != null &&
                    PendingPasswordChecks.Equals(other.PendingPasswordChecks)
                ) && 
                (
                    ScheduledPasswordChecks == other.ScheduledPasswordChecks ||
                    ScheduledPasswordChecks != null &&
                    ScheduledPasswordChecks.Equals(other.ScheduledPasswordChecks)
                ) && 
                (
                    PendingPasswordChanges == other.PendingPasswordChanges ||
                    PendingPasswordChanges != null &&
                    PendingPasswordChanges.Equals(other.PendingPasswordChanges)
                ) && 
                (
                    ScheduledPasswordChanges == other.ScheduledPasswordChanges ||
                    ScheduledPasswordChanges != null &&
                    ScheduledPasswordChanges.Equals(other.ScheduledPasswordChanges)
                ) && 
                (
                    PendingSshKeyChecks == other.PendingSshKeyChecks ||
                    PendingSshKeyChecks != null &&
                    PendingSshKeyChecks.Equals(other.PendingSshKeyChecks)
                ) && 
                (
                    ScheduledSshKeyChecks == other.ScheduledSshKeyChecks ||
                    ScheduledSshKeyChecks != null &&
                    ScheduledSshKeyChecks.Equals(other.ScheduledSshKeyChecks)
                ) && 
                (
                    PendingSshKeyChanges == other.PendingSshKeyChanges ||
                    PendingSshKeyChanges != null &&
                    PendingSshKeyChanges.Equals(other.PendingSshKeyChanges)
                ) && 
                (
                    ScheduledSshKeyChanges == other.ScheduledSshKeyChanges ||
                    ScheduledSshKeyChanges != null &&
                    ScheduledSshKeyChanges.Equals(other.ScheduledSshKeyChanges)
                ) && 
                (
                    PendingSshKeyDiscoveries == other.PendingSshKeyDiscoveries ||
                    PendingSshKeyDiscoveries != null &&
                    PendingSshKeyDiscoveries.Equals(other.PendingSshKeyDiscoveries)
                ) && 
                (
                    ScheduledSshKeyDiscoveries == other.ScheduledSshKeyDiscoveries ||
                    ScheduledSshKeyDiscoveries != null &&
                    ScheduledSshKeyDiscoveries.Equals(other.ScheduledSshKeyDiscoveries)
                ) && 
                (
                    PendingDependentAssetUpdates == other.PendingDependentAssetUpdates ||
                    PendingDependentAssetUpdates != null &&
                    PendingDependentAssetUpdates.Equals(other.PendingDependentAssetUpdates)
                ) && 
                (
                    ScheduledDependentAssetUpdates == other.ScheduledDependentAssetUpdates ||
                    ScheduledDependentAssetUpdates != null &&
                    ScheduledDependentAssetUpdates.Equals(other.ScheduledDependentAssetUpdates)
                ) && 
                (
                    PendingAccountDiscoveries == other.PendingAccountDiscoveries ||
                    PendingAccountDiscoveries != null &&
                    PendingAccountDiscoveries.Equals(other.PendingAccountDiscoveries)
                ) && 
                (
                    ScheduledAccountDiscoveries == other.ScheduledAccountDiscoveries ||
                    ScheduledAccountDiscoveries != null &&
                    ScheduledAccountDiscoveries.Equals(other.ScheduledAccountDiscoveries)
                ) && 
                (
                    PendingServiceDiscoveries == other.PendingServiceDiscoveries ||
                    PendingServiceDiscoveries != null &&
                    PendingServiceDiscoveries.Equals(other.PendingServiceDiscoveries)
                ) && 
                (
                    ScheduledServiceDiscoveries == other.ScheduledServiceDiscoveries ||
                    ScheduledServiceDiscoveries != null &&
                    ScheduledServiceDiscoveries.Equals(other.ScheduledServiceDiscoveries)
                ) && 
                (
                    PendingAssetDiscoveries == other.PendingAssetDiscoveries ||
                    PendingAssetDiscoveries != null &&
                    PendingAssetDiscoveries.Equals(other.PendingAssetDiscoveries)
                ) && 
                (
                    ScheduledAssetDiscoveries == other.ScheduledAssetDiscoveries ||
                    ScheduledAssetDiscoveries != null &&
                    ScheduledAssetDiscoveries.Equals(other.ScheduledAssetDiscoveries)
                ) && 
                (
                    PendingSuspendAccounts == other.PendingSuspendAccounts ||
                    PendingSuspendAccounts != null &&
                    PendingSuspendAccounts.Equals(other.PendingSuspendAccounts)
                ) && 
                (
                    ScheduledSuspendAccounts == other.ScheduledSuspendAccounts ||
                    ScheduledSuspendAccounts != null &&
                    ScheduledSuspendAccounts.Equals(other.ScheduledSuspendAccounts)
                ) && 
                (
                    PendingRestoreAccounts == other.PendingRestoreAccounts ||
                    PendingRestoreAccounts != null &&
                    PendingRestoreAccounts.Equals(other.PendingRestoreAccounts)
                ) && 
                (
                    ScheduledRestoreAccounts == other.ScheduledRestoreAccounts ||
                    ScheduledRestoreAccounts != null &&
                    ScheduledRestoreAccounts.Equals(other.ScheduledRestoreAccounts)
                ) && 
                (
                    PendingSyncAccounts == other.PendingSyncAccounts ||
                    PendingSyncAccounts != null &&
                    PendingSyncAccounts.Equals(other.PendingSyncAccounts)
                ) && 
                (
                    ScheduledSyncAccounts == other.ScheduledSyncAccounts ||
                    ScheduledSyncAccounts != null &&
                    ScheduledSyncAccounts.Equals(other.ScheduledSyncAccounts)
                ) && 
                (
                    PendingTestConnections == other.PendingTestConnections ||
                    PendingTestConnections != null &&
                    PendingTestConnections.Equals(other.PendingTestConnections)
                ) && 
                (
                    ScheduledTestConnections == other.ScheduledTestConnections ||
                    ScheduledTestConnections != null &&
                    ScheduledTestConnections.Equals(other.ScheduledTestConnections)
                ) && 
                (
                    PendingSshKeySyncAccounts == other.PendingSshKeySyncAccounts ||
                    PendingSshKeySyncAccounts != null &&
                    PendingSshKeySyncAccounts.Equals(other.PendingSshKeySyncAccounts)
                ) && 
                (
                    ScheduledSshKeySyncAccounts == other.ScheduledSshKeySyncAccounts ||
                    ScheduledSshKeySyncAccounts != null &&
                    ScheduledSshKeySyncAccounts.Equals(other.ScheduledSshKeySyncAccounts)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (ApplianceLoadData != null)
                    hashCode = hashCode * 59 + ApplianceLoadData.GetHashCode();
                    if (PendingPasswordChecks != null)
                    hashCode = hashCode * 59 + PendingPasswordChecks.GetHashCode();
                    if (ScheduledPasswordChecks != null)
                    hashCode = hashCode * 59 + ScheduledPasswordChecks.GetHashCode();
                    if (PendingPasswordChanges != null)
                    hashCode = hashCode * 59 + PendingPasswordChanges.GetHashCode();
                    if (ScheduledPasswordChanges != null)
                    hashCode = hashCode * 59 + ScheduledPasswordChanges.GetHashCode();
                    if (PendingSshKeyChecks != null)
                    hashCode = hashCode * 59 + PendingSshKeyChecks.GetHashCode();
                    if (ScheduledSshKeyChecks != null)
                    hashCode = hashCode * 59 + ScheduledSshKeyChecks.GetHashCode();
                    if (PendingSshKeyChanges != null)
                    hashCode = hashCode * 59 + PendingSshKeyChanges.GetHashCode();
                    if (ScheduledSshKeyChanges != null)
                    hashCode = hashCode * 59 + ScheduledSshKeyChanges.GetHashCode();
                    if (PendingSshKeyDiscoveries != null)
                    hashCode = hashCode * 59 + PendingSshKeyDiscoveries.GetHashCode();
                    if (ScheduledSshKeyDiscoveries != null)
                    hashCode = hashCode * 59 + ScheduledSshKeyDiscoveries.GetHashCode();
                    if (PendingDependentAssetUpdates != null)
                    hashCode = hashCode * 59 + PendingDependentAssetUpdates.GetHashCode();
                    if (ScheduledDependentAssetUpdates != null)
                    hashCode = hashCode * 59 + ScheduledDependentAssetUpdates.GetHashCode();
                    if (PendingAccountDiscoveries != null)
                    hashCode = hashCode * 59 + PendingAccountDiscoveries.GetHashCode();
                    if (ScheduledAccountDiscoveries != null)
                    hashCode = hashCode * 59 + ScheduledAccountDiscoveries.GetHashCode();
                    if (PendingServiceDiscoveries != null)
                    hashCode = hashCode * 59 + PendingServiceDiscoveries.GetHashCode();
                    if (ScheduledServiceDiscoveries != null)
                    hashCode = hashCode * 59 + ScheduledServiceDiscoveries.GetHashCode();
                    if (PendingAssetDiscoveries != null)
                    hashCode = hashCode * 59 + PendingAssetDiscoveries.GetHashCode();
                    if (ScheduledAssetDiscoveries != null)
                    hashCode = hashCode * 59 + ScheduledAssetDiscoveries.GetHashCode();
                    if (PendingSuspendAccounts != null)
                    hashCode = hashCode * 59 + PendingSuspendAccounts.GetHashCode();
                    if (ScheduledSuspendAccounts != null)
                    hashCode = hashCode * 59 + ScheduledSuspendAccounts.GetHashCode();
                    if (PendingRestoreAccounts != null)
                    hashCode = hashCode * 59 + PendingRestoreAccounts.GetHashCode();
                    if (ScheduledRestoreAccounts != null)
                    hashCode = hashCode * 59 + ScheduledRestoreAccounts.GetHashCode();
                    if (PendingSyncAccounts != null)
                    hashCode = hashCode * 59 + PendingSyncAccounts.GetHashCode();
                    if (ScheduledSyncAccounts != null)
                    hashCode = hashCode * 59 + ScheduledSyncAccounts.GetHashCode();
                    if (PendingTestConnections != null)
                    hashCode = hashCode * 59 + PendingTestConnections.GetHashCode();
                    if (ScheduledTestConnections != null)
                    hashCode = hashCode * 59 + ScheduledTestConnections.GetHashCode();
                    if (PendingSshKeySyncAccounts != null)
                    hashCode = hashCode * 59 + PendingSshKeySyncAccounts.GetHashCode();
                    if (ScheduledSshKeySyncAccounts != null)
                    hashCode = hashCode * 59 + ScheduledSshKeySyncAccounts.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(PlatformTaskLoadStatus left, PlatformTaskLoadStatus right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(PlatformTaskLoadStatus left, PlatformTaskLoadStatus right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
