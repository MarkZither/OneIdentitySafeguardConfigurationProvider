/*
 * Safeguard Core API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace OneIdentitySafeguard.Mock.Server.Models
{ 
        /// <summary>
        /// Gets or Sets TaskStatus
        /// </summary>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum TaskStatus
        {
            /// <summary>
            /// Enum UnknownEnum for Unknown
            /// </summary>
            [EnumMember(Value = "Unknown")]
            UnknownEnum = 0,
            /// <summary>
            /// Enum SuccessEnum for Success
            /// </summary>
            [EnumMember(Value = "Success")]
            SuccessEnum = 1,
            /// <summary>
            /// Enum FailureEnum for Failure
            /// </summary>
            [EnumMember(Value = "Failure")]
            FailureEnum = 2,
            /// <summary>
            /// Enum ConnectingEnum for Connecting
            /// </summary>
            [EnumMember(Value = "Connecting")]
            ConnectingEnum = 3,
            /// <summary>
            /// Enum CheckingEnum for Checking
            /// </summary>
            [EnumMember(Value = "Checking")]
            CheckingEnum = 4,
            /// <summary>
            /// Enum ChangingEnum for Changing
            /// </summary>
            [EnumMember(Value = "Changing")]
            ChangingEnum = 5,
            /// <summary>
            /// Enum PasswordMismatchEnum for PasswordMismatch
            /// </summary>
            [EnumMember(Value = "PasswordMismatch")]
            PasswordMismatchEnum = 6,
            /// <summary>
            /// Enum SshHostKeyMismatchEnum for SshHostKeyMismatch
            /// </summary>
            [EnumMember(Value = "SshHostKeyMismatch")]
            SshHostKeyMismatchEnum = 7,
            /// <summary>
            /// Enum ServiceChangePasswordSuccessEnum for ServiceChangePasswordSuccess
            /// </summary>
            [EnumMember(Value = "ServiceChangePasswordSuccess")]
            ServiceChangePasswordSuccessEnum = 8,
            /// <summary>
            /// Enum ServiceChangePasswordFailureEnum for ServiceChangePasswordFailure
            /// </summary>
            [EnumMember(Value = "ServiceChangePasswordFailure")]
            ServiceChangePasswordFailureEnum = 9,
            /// <summary>
            /// Enum ServiceRestartSuccessEnum for ServiceRestartSuccess
            /// </summary>
            [EnumMember(Value = "ServiceRestartSuccess")]
            ServiceRestartSuccessEnum = 10,
            /// <summary>
            /// Enum ServiceRestartFailureEnum for ServiceRestartFailure
            /// </summary>
            [EnumMember(Value = "ServiceRestartFailure")]
            ServiceRestartFailureEnum = 11,
            /// <summary>
            /// Enum TaskChangePasswordSuccessEnum for TaskChangePasswordSuccess
            /// </summary>
            [EnumMember(Value = "TaskChangePasswordSuccess")]
            TaskChangePasswordSuccessEnum = 12,
            /// <summary>
            /// Enum TaskChangePasswordFailureEnum for TaskChangePasswordFailure
            /// </summary>
            [EnumMember(Value = "TaskChangePasswordFailure")]
            TaskChangePasswordFailureEnum = 13,
            /// <summary>
            /// Enum RunningEnum for Running
            /// </summary>
            [EnumMember(Value = "Running")]
            RunningEnum = 14,
            /// <summary>
            /// Enum QueuedEnum for Queued
            /// </summary>
            [EnumMember(Value = "Queued")]
            QueuedEnum = 15,
            /// <summary>
            /// Enum FinalizingEnum for Finalizing
            /// </summary>
            [EnumMember(Value = "Finalizing")]
            FinalizingEnum = 16,
            /// <summary>
            /// Enum SavingEnum for Saving
            /// </summary>
            [EnumMember(Value = "Saving")]
            SavingEnum = 17,
            /// <summary>
            /// Enum SshKeyMismatchEnum for SshKeyMismatch
            /// </summary>
            [EnumMember(Value = "SshKeyMismatch")]
            SshKeyMismatchEnum = 18,
            /// <summary>
            /// Enum DiscoveringEnum for Discovering
            /// </summary>
            [EnumMember(Value = "Discovering")]
            DiscoveringEnum = 19        }
}
