/*
 * Safeguard Core API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace OneIdentitySafeguard.Mock.Server.Models
{ 
        /// <summary>
        /// Categories of information provided by events
        /// </summary>
        /// <value>Categories of information provided by events</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum EventCategory
        {
            /// <summary>
            /// Enum UnknownEnum for Unknown
            /// </summary>
            [EnumMember(Value = "Unknown")]
            UnknownEnum = 0,
            /// <summary>
            /// Enum ApplianceHistoryEnum for ApplianceHistory
            /// </summary>
            [EnumMember(Value = "ApplianceHistory")]
            ApplianceHistoryEnum = 1,
            /// <summary>
            /// Enum AccessRequestEnum for AccessRequest
            /// </summary>
            [EnumMember(Value = "AccessRequest")]
            AccessRequestEnum = 2,
            /// <summary>
            /// Enum UserAuthenticationEnum for UserAuthentication
            /// </summary>
            [EnumMember(Value = "UserAuthentication")]
            UserAuthenticationEnum = 3,
            /// <summary>
            /// Enum ObjectHistoryEnum for ObjectHistory
            /// </summary>
            [EnumMember(Value = "ObjectHistory")]
            ObjectHistoryEnum = 4,
            /// <summary>
            /// Enum PasswordManagementEnum for PasswordManagement
            /// </summary>
            [EnumMember(Value = "PasswordManagement")]
            PasswordManagementEnum = 5,
            /// <summary>
            /// Enum BackupRestoreEnum for BackupRestore
            /// </summary>
            [EnumMember(Value = "BackupRestore")]
            BackupRestoreEnum = 6,
            /// <summary>
            /// Enum PatchingEnum for Patching
            /// </summary>
            [EnumMember(Value = "Patching")]
            PatchingEnum = 7,
            /// <summary>
            /// Enum MaintenanceEnum for Maintenance
            /// </summary>
            [EnumMember(Value = "Maintenance")]
            MaintenanceEnum = 8,
            /// <summary>
            /// Enum LicenseEnum for License
            /// </summary>
            [EnumMember(Value = "License")]
            LicenseEnum = 9,
            /// <summary>
            /// Enum AssetDiscoveryEnum for AssetDiscovery
            /// </summary>
            [EnumMember(Value = "AssetDiscovery")]
            AssetDiscoveryEnum = 10,
            /// <summary>
            /// Enum ClusteringEnum for Clustering
            /// </summary>
            [EnumMember(Value = "Clustering")]
            ClusteringEnum = 11,
            /// <summary>
            /// Enum FileReplicationEnum for FileReplication
            /// </summary>
            [EnumMember(Value = "FileReplication")]
            FileReplicationEnum = 12,
            /// <summary>
            /// Enum DirectorySyncEnum for DirectorySync
            /// </summary>
            [EnumMember(Value = "DirectorySync")]
            DirectorySyncEnum = 13,
            /// <summary>
            /// Enum ServiceDiscoveryEnum for ServiceDiscovery
            /// </summary>
            [EnumMember(Value = "ServiceDiscovery")]
            ServiceDiscoveryEnum = 14,
            /// <summary>
            /// Enum AccountDiscoveryEnum for AccountDiscovery
            /// </summary>
            [EnumMember(Value = "AccountDiscovery")]
            AccountDiscoveryEnum = 15,
            /// <summary>
            /// Enum SshKeyDiscoveryEnum for SshKeyDiscovery
            /// </summary>
            [EnumMember(Value = "SshKeyDiscovery")]
            SshKeyDiscoveryEnum = 16,
            /// <summary>
            /// Enum ArchiveEnum for Archive
            /// </summary>
            [EnumMember(Value = "Archive")]
            ArchiveEnum = 17        }
}
