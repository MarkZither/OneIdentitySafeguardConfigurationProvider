/*
 * Safeguard Core API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace OneIdentitySafeguard.Mock.Server.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class HardwareSecurityModuleConfiguration : IEquatable<HardwareSecurityModuleConfiguration>
    { 
        /// <summary>
        /// The hardware security module configuration file (crystoki.ini).
        /// </summary>
        /// <value>The hardware security module configuration file (crystoki.ini).</value>

        [MaxLength(15000)]
        [DataMember(Name="IniFile")]
        public string IniFile { get; set; }

        /// <summary>
        /// The crypo officer password to be used when integrating with a hardware security module.
        /// </summary>
        /// <value>The crypo officer password to be used when integrating with a hardware security module.</value>

        [MaxLength(255)]
        [DataMember(Name="CryptoOfficerPassword")]
        public string CryptoOfficerPassword { get; set; }

        /// <summary>
        /// The partition label to be used when integrating with a hardware security module.
        /// </summary>
        /// <value>The partition label to be used when integrating with a hardware security module.</value>

        [MaxLength(32)]
        [DataMember(Name="PartitionLabel")]
        public string PartitionLabel { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class HardwareSecurityModuleConfiguration {\n");
            sb.Append("  IniFile: ").Append(IniFile).Append("\n");
            sb.Append("  CryptoOfficerPassword: ").Append(CryptoOfficerPassword).Append("\n");
            sb.Append("  PartitionLabel: ").Append(PartitionLabel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((HardwareSecurityModuleConfiguration)obj);
        }

        /// <summary>
        /// Returns true if HardwareSecurityModuleConfiguration instances are equal
        /// </summary>
        /// <param name="other">Instance of HardwareSecurityModuleConfiguration to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(HardwareSecurityModuleConfiguration other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    IniFile == other.IniFile ||
                    IniFile != null &&
                    IniFile.Equals(other.IniFile)
                ) && 
                (
                    CryptoOfficerPassword == other.CryptoOfficerPassword ||
                    CryptoOfficerPassword != null &&
                    CryptoOfficerPassword.Equals(other.CryptoOfficerPassword)
                ) && 
                (
                    PartitionLabel == other.PartitionLabel ||
                    PartitionLabel != null &&
                    PartitionLabel.Equals(other.PartitionLabel)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (IniFile != null)
                    hashCode = hashCode * 59 + IniFile.GetHashCode();
                    if (CryptoOfficerPassword != null)
                    hashCode = hashCode * 59 + CryptoOfficerPassword.GetHashCode();
                    if (PartitionLabel != null)
                    hashCode = hashCode * 59 + PartitionLabel.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(HardwareSecurityModuleConfiguration left, HardwareSecurityModuleConfiguration right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(HardwareSecurityModuleConfiguration left, HardwareSecurityModuleConfiguration right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
