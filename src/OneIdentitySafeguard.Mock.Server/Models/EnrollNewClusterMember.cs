/*
 * Safeguard Core API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace OneIdentitySafeguard.Mock.Server.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class EnrollNewClusterMember : IEquatable<EnrollNewClusterMember>
    { 
        /// <summary>
        /// The hostname of the target appliance to enroll
        /// </summary>
        /// <value>The hostname of the target appliance to enroll</value>
        [Required]

        [DataMember(Name="Hostname")]
        public string Hostname { get; set; }

        /// <summary>
        /// OAuth Token representing the user that is performing enrollment
        /// </summary>
        /// <value>OAuth Token representing the user that is performing enrollment</value>
        [Required]

        [DataMember(Name="AuthenticationToken")]
        public string AuthenticationToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EnrollNewClusterMember {\n");
            sb.Append("  Hostname: ").Append(Hostname).Append("\n");
            sb.Append("  AuthenticationToken: ").Append(AuthenticationToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((EnrollNewClusterMember)obj);
        }

        /// <summary>
        /// Returns true if EnrollNewClusterMember instances are equal
        /// </summary>
        /// <param name="other">Instance of EnrollNewClusterMember to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EnrollNewClusterMember other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Hostname == other.Hostname ||
                    Hostname != null &&
                    Hostname.Equals(other.Hostname)
                ) && 
                (
                    AuthenticationToken == other.AuthenticationToken ||
                    AuthenticationToken != null &&
                    AuthenticationToken.Equals(other.AuthenticationToken)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Hostname != null)
                    hashCode = hashCode * 59 + Hostname.GetHashCode();
                    if (AuthenticationToken != null)
                    hashCode = hashCode * 59 + AuthenticationToken.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(EnrollNewClusterMember left, EnrollNewClusterMember right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(EnrollNewClusterMember left, EnrollNewClusterMember right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
