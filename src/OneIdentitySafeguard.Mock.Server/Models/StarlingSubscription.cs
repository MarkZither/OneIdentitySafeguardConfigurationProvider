/*
 * Safeguard Core API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace OneIdentitySafeguard.Mock.Server.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class StarlingSubscription : IEquatable<StarlingSubscription>
    { 
        /// <summary>
        /// Unique Id of the Starling subscription information. Read-only.
        /// </summary>
        /// <value>Unique Id of the Starling subscription information. Read-only.</value>

        [DataMember(Name="Id")]
        public int? Id { get; set; }

        /// <summary>
        /// User supplied friendly name for the Starling subscription.
        /// </summary>
        /// <value>User supplied friendly name for the Starling subscription.</value>
        [Required]

        [MaxLength(255)]
        [DataMember(Name="Name")]
        public string Name { get; set; }

        /// <summary>
        /// Value returned from the Starling join process to be used when authenticating against the Starling API.              It is a colon delimited string of the client_id and client_secret to be used as the client credentials in an              OAuth2 Client Credentials Flow authentication request.
        /// </summary>
        /// <value>Value returned from the Starling join process to be used when authenticating against the Starling API.              It is a colon delimited string of the client_id and client_secret to be used as the client credentials in an              OAuth2 Client Credentials Flow authentication request.</value>
        [Required]

        [MaxLength(1024)]
        [DataMember(Name="ClientCredentials")]
        public string ClientCredentials { get; set; }

        /// <summary>
        /// Value returned from the Starling join process indicating the Url to use when authenticating.
        /// </summary>
        /// <value>Value returned from the Starling join process indicating the Url to use when authenticating.</value>
        [Required]

        [MaxLength(2048)]
        [DataMember(Name="TokenEndpoint")]
        public string TokenEndpoint { get; set; }

        /// <summary>
        /// A copy of the Url that was used to initiate the Starling join process.  Parts will be used to unjoin              if necessary.
        /// </summary>
        /// <value>A copy of the Url that was used to initiate the Starling join process.  Parts will be used to unjoin              if necessary.</value>
        [Required]

        [MaxLength(2048)]
        [DataMember(Name="JoinUrl")]
        public string JoinUrl { get; set; }

        /// <summary>
        /// Available when the customer has subscribed to Starling Cloud Assistant.
        /// </summary>
        /// <value>Available when the customer has subscribed to Starling Cloud Assistant.</value>

        [DataMember(Name="CloudAssistantSenderId")]
        public string CloudAssistantSenderId { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StarlingSubscription {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ClientCredentials: ").Append(ClientCredentials).Append("\n");
            sb.Append("  TokenEndpoint: ").Append(TokenEndpoint).Append("\n");
            sb.Append("  JoinUrl: ").Append(JoinUrl).Append("\n");
            sb.Append("  CloudAssistantSenderId: ").Append(CloudAssistantSenderId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((StarlingSubscription)obj);
        }

        /// <summary>
        /// Returns true if StarlingSubscription instances are equal
        /// </summary>
        /// <param name="other">Instance of StarlingSubscription to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StarlingSubscription other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    ClientCredentials == other.ClientCredentials ||
                    ClientCredentials != null &&
                    ClientCredentials.Equals(other.ClientCredentials)
                ) && 
                (
                    TokenEndpoint == other.TokenEndpoint ||
                    TokenEndpoint != null &&
                    TokenEndpoint.Equals(other.TokenEndpoint)
                ) && 
                (
                    JoinUrl == other.JoinUrl ||
                    JoinUrl != null &&
                    JoinUrl.Equals(other.JoinUrl)
                ) && 
                (
                    CloudAssistantSenderId == other.CloudAssistantSenderId ||
                    CloudAssistantSenderId != null &&
                    CloudAssistantSenderId.Equals(other.CloudAssistantSenderId)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (ClientCredentials != null)
                    hashCode = hashCode * 59 + ClientCredentials.GetHashCode();
                    if (TokenEndpoint != null)
                    hashCode = hashCode * 59 + TokenEndpoint.GetHashCode();
                    if (JoinUrl != null)
                    hashCode = hashCode * 59 + JoinUrl.GetHashCode();
                    if (CloudAssistantSenderId != null)
                    hashCode = hashCode * 59 + CloudAssistantSenderId.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(StarlingSubscription left, StarlingSubscription right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(StarlingSubscription left, StarlingSubscription right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
