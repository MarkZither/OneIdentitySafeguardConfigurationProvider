/*
 * Safeguard Core API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace OneIdentitySafeguard.Mock.Server.Models
{ 
        /// <summary>
        /// Represents the state of the access request
        /// </summary>
        /// <value>Represents the state of the access request</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum AccessRequestState
        {
            /// <summary>
            /// Enum NewEnum for New
            /// </summary>
            [EnumMember(Value = "New")]
            NewEnum = 0,
            /// <summary>
            /// Enum PendingApprovalEnum for PendingApproval
            /// </summary>
            [EnumMember(Value = "PendingApproval")]
            PendingApprovalEnum = 1,
            /// <summary>
            /// Enum ApprovedEnum for Approved
            /// </summary>
            [EnumMember(Value = "Approved")]
            ApprovedEnum = 2,
            /// <summary>
            /// Enum PendingTimeRequestedEnum for PendingTimeRequested
            /// </summary>
            [EnumMember(Value = "PendingTimeRequested")]
            PendingTimeRequestedEnum = 3,
            /// <summary>
            /// Enum RequestAvailableEnum for RequestAvailable
            /// </summary>
            [EnumMember(Value = "RequestAvailable")]
            RequestAvailableEnum = 4,
            /// <summary>
            /// Enum PasswordCheckedOutEnum for PasswordCheckedOut
            /// </summary>
            [EnumMember(Value = "PasswordCheckedOut")]
            PasswordCheckedOutEnum = 5,
            /// <summary>
            /// Enum ReclaimedEnum for Reclaimed
            /// </summary>
            [EnumMember(Value = "Reclaimed")]
            ReclaimedEnum = 6,
            /// <summary>
            /// Enum RequestCheckedInEnum for RequestCheckedIn
            /// </summary>
            [EnumMember(Value = "RequestCheckedIn")]
            RequestCheckedInEnum = 7,
            /// <summary>
            /// Enum ExpiredEnum for Expired
            /// </summary>
            [EnumMember(Value = "Expired")]
            ExpiredEnum = 8,
            /// <summary>
            /// Enum TerminatedEnum for Terminated
            /// </summary>
            [EnumMember(Value = "Terminated")]
            TerminatedEnum = 9,
            /// <summary>
            /// Enum PendingReviewEnum for PendingReview
            /// </summary>
            [EnumMember(Value = "PendingReview")]
            PendingReviewEnum = 10,
            /// <summary>
            /// Enum ClosedEnum for Closed
            /// </summary>
            [EnumMember(Value = "Closed")]
            ClosedEnum = 11,
            /// <summary>
            /// Enum PendingAcknowledgmentEnum for PendingAcknowledgment
            /// </summary>
            [EnumMember(Value = "PendingAcknowledgment")]
            PendingAcknowledgmentEnum = 12,
            /// <summary>
            /// Enum CompleteEnum for Complete
            /// </summary>
            [EnumMember(Value = "Complete")]
            CompleteEnum = 13,
            /// <summary>
            /// Enum PendingPasswordResetEnum for PendingPasswordReset
            /// </summary>
            [EnumMember(Value = "PendingPasswordReset")]
            PendingPasswordResetEnum = 14,
            /// <summary>
            /// Enum SessionInitializedEnum for SessionInitialized
            /// </summary>
            [EnumMember(Value = "SessionInitialized")]
            SessionInitializedEnum = 15,
            /// <summary>
            /// Enum PendingAccountSuspendedEnum for PendingAccountSuspended
            /// </summary>
            [EnumMember(Value = "PendingAccountSuspended")]
            PendingAccountSuspendedEnum = 16,
            /// <summary>
            /// Enum PendingAccountRestoredEnum for PendingAccountRestored
            /// </summary>
            [EnumMember(Value = "PendingAccountRestored")]
            PendingAccountRestoredEnum = 17,
            /// <summary>
            /// Enum SshKeyCheckedOutEnum for SshKeyCheckedOut
            /// </summary>
            [EnumMember(Value = "SshKeyCheckedOut")]
            SshKeyCheckedOutEnum = 18,
            /// <summary>
            /// Enum PendingSshKeyResetEnum for PendingSshKeyReset
            /// </summary>
            [EnumMember(Value = "PendingSshKeyReset")]
            PendingSshKeyResetEnum = 19        }
}
