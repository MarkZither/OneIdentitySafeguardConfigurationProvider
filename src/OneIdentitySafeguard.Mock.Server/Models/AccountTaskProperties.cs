/*
 * Safeguard Core API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace OneIdentitySafeguard.Mock.Server.Models
{ 
    /// <summary>
    /// Task information for accounts
    /// </summary>
    [DataContract]
    public partial class AccountTaskProperties : IEquatable<AccountTaskProperties>
    { 
        /// <summary>
        /// Whether this account has any platform task failures (Read-only)
        /// </summary>
        /// <value>Whether this account has any platform task failures (Read-only)</value>

        [DataMember(Name="HasAccountTaskFailure")]
        public bool? HasAccountTaskFailure { get; set; }

        /// <summary>
        /// The date/time of the last password check (Read-only)
        /// </summary>
        /// <value>The date/time of the last password check (Read-only)</value>

        [DataMember(Name="LastPasswordCheckDate")]
        public DateTime? LastPasswordCheckDate { get; set; }

        /// <summary>
        /// The date/time of the last successful password check (Read-only)
        /// </summary>
        /// <value>The date/time of the last successful password check (Read-only)</value>

        [DataMember(Name="LastSuccessPasswordCheckDate")]
        public DateTime? LastSuccessPasswordCheckDate { get; set; }

        /// <summary>
        /// The date/time of the last failed password check (Read-only)
        /// </summary>
        /// <value>The date/time of the last failed password check (Read-only)</value>

        [DataMember(Name="LastFailurePasswordCheckDate")]
        public DateTime? LastFailurePasswordCheckDate { get; set; }

        /// <summary>
        /// The task audit log ID of the last password check (Read-only)
        /// </summary>
        /// <value>The task audit log ID of the last password check (Read-only)</value>

        [DataMember(Name="LastPasswordCheckTaskId")]
        public string LastPasswordCheckTaskId { get; set; }

        /// <summary>
        /// Number of subsequent failed password check attempts since last success (Read-only)
        /// </summary>
        /// <value>Number of subsequent failed password check attempts since last success (Read-only)</value>

        [DataMember(Name="FailedPasswordCheckAttempts")]
        public int? FailedPasswordCheckAttempts { get; set; }

        /// <summary>
        /// The date/time of the next password check, if this account is enabled for automatic password management (Read-only)
        /// </summary>
        /// <value>The date/time of the next password check, if this account is enabled for automatic password management (Read-only)</value>

        [DataMember(Name="NextPasswordCheckDate")]
        public DateTime? NextPasswordCheckDate { get; set; }

        /// <summary>
        /// The date/time of the last password change (Read-only)
        /// </summary>
        /// <value>The date/time of the last password change (Read-only)</value>

        [DataMember(Name="LastPasswordChangeDate")]
        public DateTime? LastPasswordChangeDate { get; set; }

        /// <summary>
        /// The date/time of the last successful password change (Read-only)
        /// </summary>
        /// <value>The date/time of the last successful password change (Read-only)</value>

        [DataMember(Name="LastSuccessPasswordChangeDate")]
        public DateTime? LastSuccessPasswordChangeDate { get; set; }

        /// <summary>
        /// The date/time of the last failed password change (Read-only)
        /// </summary>
        /// <value>The date/time of the last failed password change (Read-only)</value>

        [DataMember(Name="LastFailurePasswordChangeDate")]
        public DateTime? LastFailurePasswordChangeDate { get; set; }

        /// <summary>
        /// The task audit log ID of the last password change (Read-only)
        /// </summary>
        /// <value>The task audit log ID of the last password change (Read-only)</value>

        [DataMember(Name="LastPasswordChangeTaskId")]
        public string LastPasswordChangeTaskId { get; set; }

        /// <summary>
        /// Number of subsequent failed password change attempts since last success (Read-only)
        /// </summary>
        /// <value>Number of subsequent failed password change attempts since last success (Read-only)</value>

        [DataMember(Name="FailedPasswordChangeAttempts")]
        public int? FailedPasswordChangeAttempts { get; set; }

        /// <summary>
        /// The date/time of the next password change, if this account is enabled for automatic password management (Read-only)
        /// </summary>
        /// <value>The date/time of the next password change, if this account is enabled for automatic password management (Read-only)</value>

        [DataMember(Name="NextPasswordChangeDate")]
        public DateTime? NextPasswordChangeDate { get; set; }

        /// <summary>
        /// The date/time of the last SSH key check (Read-only)
        /// </summary>
        /// <value>The date/time of the last SSH key check (Read-only)</value>

        [DataMember(Name="LastSshKeyCheckDate")]
        public DateTime? LastSshKeyCheckDate { get; set; }

        /// <summary>
        /// The date/time of the last successful SSH key check (Read-only)
        /// </summary>
        /// <value>The date/time of the last successful SSH key check (Read-only)</value>

        [DataMember(Name="LastSuccessSshKeyCheckDate")]
        public DateTime? LastSuccessSshKeyCheckDate { get; set; }

        /// <summary>
        /// The date/time of the last failed SSH key check (Read-only)
        /// </summary>
        /// <value>The date/time of the last failed SSH key check (Read-only)</value>

        [DataMember(Name="LastFailureSshKeyCheckDate")]
        public DateTime? LastFailureSshKeyCheckDate { get; set; }

        /// <summary>
        /// The task audit log ID of the last SSH key check (Read-only)
        /// </summary>
        /// <value>The task audit log ID of the last SSH key check (Read-only)</value>

        [DataMember(Name="LastSshKeyCheckTaskId")]
        public string LastSshKeyCheckTaskId { get; set; }

        /// <summary>
        /// Number of subsequent failed ssh key check attempts since last success (Read-only)
        /// </summary>
        /// <value>Number of subsequent failed ssh key check attempts since last success (Read-only)</value>

        [DataMember(Name="FailedSshKeyCheckAttempts")]
        public int? FailedSshKeyCheckAttempts { get; set; }

        /// <summary>
        /// The date/time of the next SSH key check (Read-only)
        /// </summary>
        /// <value>The date/time of the next SSH key check (Read-only)</value>

        [DataMember(Name="NextSshKeyCheckDate")]
        public DateTime? NextSshKeyCheckDate { get; set; }

        /// <summary>
        /// The date/time of the last SSH key change (Read-only)
        /// </summary>
        /// <value>The date/time of the last SSH key change (Read-only)</value>

        [DataMember(Name="LastSshKeyChangeDate")]
        public DateTime? LastSshKeyChangeDate { get; set; }

        /// <summary>
        /// The date/time of the last successful SSH key change (Read-only)
        /// </summary>
        /// <value>The date/time of the last successful SSH key change (Read-only)</value>

        [DataMember(Name="LastSuccessSshKeyChangeDate")]
        public DateTime? LastSuccessSshKeyChangeDate { get; set; }

        /// <summary>
        /// The date/time of the last failed SSH key discovery (Read-only)
        /// </summary>
        /// <value>The date/time of the last failed SSH key discovery (Read-only)</value>

        [DataMember(Name="LastFailureSshKeyChangeDate")]
        public DateTime? LastFailureSshKeyChangeDate { get; set; }

        /// <summary>
        /// The task audit log ID of the last SSH key change (Read-only)
        /// </summary>
        /// <value>The task audit log ID of the last SSH key change (Read-only)</value>

        [DataMember(Name="LastSshKeyChangeTaskId")]
        public string LastSshKeyChangeTaskId { get; set; }

        /// <summary>
        /// Number of subsequent failed ssh key change attempts since last success (Read-only)
        /// </summary>
        /// <value>Number of subsequent failed ssh key change attempts since last success (Read-only)</value>

        [DataMember(Name="FailedSshKeyChangeAttempts")]
        public int? FailedSshKeyChangeAttempts { get; set; }

        /// <summary>
        /// The date/time of the next SSH key change (Read-only)
        /// </summary>
        /// <value>The date/time of the next SSH key change (Read-only)</value>

        [DataMember(Name="NextSshKeyChangeDate")]
        public DateTime? NextSshKeyChangeDate { get; set; }

        /// <summary>
        /// The date/time of the last SSH key discovery (Read-only)
        /// </summary>
        /// <value>The date/time of the last SSH key discovery (Read-only)</value>

        [DataMember(Name="LastSshKeyDiscoveryDate")]
        public DateTime? LastSshKeyDiscoveryDate { get; set; }

        /// <summary>
        /// The date/time of the last successful SSH key discovery (Read-only)
        /// </summary>
        /// <value>The date/time of the last successful SSH key discovery (Read-only)</value>

        [DataMember(Name="LastSuccessSshKeyDiscoveryDate")]
        public DateTime? LastSuccessSshKeyDiscoveryDate { get; set; }

        /// <summary>
        /// The date/time of the last failed SSH key discovery (Read-only)
        /// </summary>
        /// <value>The date/time of the last failed SSH key discovery (Read-only)</value>

        [DataMember(Name="LastFailureSshKeyDiscoveryDate")]
        public DateTime? LastFailureSshKeyDiscoveryDate { get; set; }

        /// <summary>
        /// The task audit log ID of the last SSH key discovery (Read-only)
        /// </summary>
        /// <value>The task audit log ID of the last SSH key discovery (Read-only)</value>

        [DataMember(Name="LastSshKeyDiscoveryTaskId")]
        public string LastSshKeyDiscoveryTaskId { get; set; }

        /// <summary>
        /// Number of subsequent failed ssh key discovery attempts since last success (Read-only)
        /// </summary>
        /// <value>Number of subsequent failed ssh key discovery attempts since last success (Read-only)</value>

        [DataMember(Name="FailedSshKeyDiscoveryAttempts")]
        public int? FailedSshKeyDiscoveryAttempts { get; set; }

        /// <summary>
        /// The date/time of the next SSH key discovery (Read-only)
        /// </summary>
        /// <value>The date/time of the next SSH key discovery (Read-only)</value>

        [DataMember(Name="NextSshKeyDiscoveryDate")]
        public DateTime? NextSshKeyDiscoveryDate { get; set; }

        /// <summary>
        /// The date/time of the last revoke SSH key task (Read-only)
        /// </summary>
        /// <value>The date/time of the last revoke SSH key task (Read-only)</value>

        [DataMember(Name="LastSshKeyRevokeDate")]
        public DateTime? LastSshKeyRevokeDate { get; set; }

        /// <summary>
        /// The date/time of the last successful revoke SSH key task (Read-only)
        /// </summary>
        /// <value>The date/time of the last successful revoke SSH key task (Read-only)</value>

        [DataMember(Name="LastSuccessSshKeyRevokeDate")]
        public DateTime? LastSuccessSshKeyRevokeDate { get; set; }

        /// <summary>
        /// The date/time of the last failed revoke SSH key task (Read-only)
        /// </summary>
        /// <value>The date/time of the last failed revoke SSH key task (Read-only)</value>

        [DataMember(Name="LastFailureSshKeyRevokeDate")]
        public DateTime? LastFailureSshKeyRevokeDate { get; set; }

        /// <summary>
        /// The task audit log ID of the last SSH key revoke (Read-only)
        /// </summary>
        /// <value>The task audit log ID of the last SSH key revoke (Read-only)</value>

        [DataMember(Name="LastSshKeyRevokeTaskId")]
        public string LastSshKeyRevokeTaskId { get; set; }

        /// <summary>
        /// Number of subsequent failed revoke SSH key task attempts since last success (Read-only)
        /// </summary>
        /// <value>Number of subsequent failed revoke SSH key task attempts since last success (Read-only)</value>

        [DataMember(Name="FailedSshKeyRevokeAttempts")]
        public int? FailedSshKeyRevokeAttempts { get; set; }

        /// <summary>
        /// The date/time of the last suspend account task (Read-only)
        /// </summary>
        /// <value>The date/time of the last suspend account task (Read-only)</value>

        [DataMember(Name="LastSuspendAccountDate")]
        public DateTime? LastSuspendAccountDate { get; set; }

        /// <summary>
        /// The date/time of the last successful suspend account task (Read-only)
        /// </summary>
        /// <value>The date/time of the last successful suspend account task (Read-only)</value>

        [DataMember(Name="LastSuccessSuspendAccountDate")]
        public DateTime? LastSuccessSuspendAccountDate { get; set; }

        /// <summary>
        /// The date/time of the last failed suspend account task (Read-only)
        /// </summary>
        /// <value>The date/time of the last failed suspend account task (Read-only)</value>

        [DataMember(Name="LastFailureSuspendAccountDate")]
        public DateTime? LastFailureSuspendAccountDate { get; set; }

        /// <summary>
        /// The task audit log ID of the last suspend account (Read-only)
        /// </summary>
        /// <value>The task audit log ID of the last suspend account (Read-only)</value>

        [DataMember(Name="LastSuspendAccountTaskId")]
        public string LastSuspendAccountTaskId { get; set; }

        /// <summary>
        /// Number of subsequent failed suspend account task attempts since last success (Read-only)
        /// </summary>
        /// <value>Number of subsequent failed suspend account task attempts since last success (Read-only)</value>

        [DataMember(Name="FailedSuspendAccountAttempts")]
        public int? FailedSuspendAccountAttempts { get; set; }

        /// <summary>
        /// The date/time of the next suspend account task, if this account is enabled for automatic password management (Read-only)
        /// </summary>
        /// <value>The date/time of the next suspend account task, if this account is enabled for automatic password management (Read-only)</value>

        [DataMember(Name="NextSuspendAccountDate")]
        public DateTime? NextSuspendAccountDate { get; set; }

        /// <summary>
        /// The date/time of the last restore account task (Read-only)
        /// </summary>
        /// <value>The date/time of the last restore account task (Read-only)</value>

        [DataMember(Name="LastRestoreAccountDate")]
        public DateTime? LastRestoreAccountDate { get; set; }

        /// <summary>
        /// The date/time of the last successful restore account task (Read-only)
        /// </summary>
        /// <value>The date/time of the last successful restore account task (Read-only)</value>

        [DataMember(Name="LastSuccessRestoreAccountDate")]
        public DateTime? LastSuccessRestoreAccountDate { get; set; }

        /// <summary>
        /// The date/time of the last failed restore account task (Read-only)
        /// </summary>
        /// <value>The date/time of the last failed restore account task (Read-only)</value>

        [DataMember(Name="LastFailureRestoreAccountDate")]
        public DateTime? LastFailureRestoreAccountDate { get; set; }

        /// <summary>
        /// The task audit log ID of the last restore account (Read-only)
        /// </summary>
        /// <value>The task audit log ID of the last restore account (Read-only)</value>

        [DataMember(Name="LastRestoreAccountTaskId")]
        public string LastRestoreAccountTaskId { get; set; }

        /// <summary>
        /// Number of subsequent failed restore account task attempts since last success (Read-only)
        /// </summary>
        /// <value>Number of subsequent failed restore account task attempts since last success (Read-only)</value>

        [DataMember(Name="FailedRestoreAccountAttempts")]
        public int? FailedRestoreAccountAttempts { get; set; }

        /// <summary>
        /// The date/time of the next restore account task, if this account is enabled for automatic password management (Read-only)
        /// </summary>
        /// <value>The date/time of the next restore account task, if this account is enabled for automatic password management (Read-only)</value>

        [DataMember(Name="NextRestoreAccountDate")]
        public DateTime? NextRestoreAccountDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AccountTaskProperties {\n");
            sb.Append("  HasAccountTaskFailure: ").Append(HasAccountTaskFailure).Append("\n");
            sb.Append("  LastPasswordCheckDate: ").Append(LastPasswordCheckDate).Append("\n");
            sb.Append("  LastSuccessPasswordCheckDate: ").Append(LastSuccessPasswordCheckDate).Append("\n");
            sb.Append("  LastFailurePasswordCheckDate: ").Append(LastFailurePasswordCheckDate).Append("\n");
            sb.Append("  LastPasswordCheckTaskId: ").Append(LastPasswordCheckTaskId).Append("\n");
            sb.Append("  FailedPasswordCheckAttempts: ").Append(FailedPasswordCheckAttempts).Append("\n");
            sb.Append("  NextPasswordCheckDate: ").Append(NextPasswordCheckDate).Append("\n");
            sb.Append("  LastPasswordChangeDate: ").Append(LastPasswordChangeDate).Append("\n");
            sb.Append("  LastSuccessPasswordChangeDate: ").Append(LastSuccessPasswordChangeDate).Append("\n");
            sb.Append("  LastFailurePasswordChangeDate: ").Append(LastFailurePasswordChangeDate).Append("\n");
            sb.Append("  LastPasswordChangeTaskId: ").Append(LastPasswordChangeTaskId).Append("\n");
            sb.Append("  FailedPasswordChangeAttempts: ").Append(FailedPasswordChangeAttempts).Append("\n");
            sb.Append("  NextPasswordChangeDate: ").Append(NextPasswordChangeDate).Append("\n");
            sb.Append("  LastSshKeyCheckDate: ").Append(LastSshKeyCheckDate).Append("\n");
            sb.Append("  LastSuccessSshKeyCheckDate: ").Append(LastSuccessSshKeyCheckDate).Append("\n");
            sb.Append("  LastFailureSshKeyCheckDate: ").Append(LastFailureSshKeyCheckDate).Append("\n");
            sb.Append("  LastSshKeyCheckTaskId: ").Append(LastSshKeyCheckTaskId).Append("\n");
            sb.Append("  FailedSshKeyCheckAttempts: ").Append(FailedSshKeyCheckAttempts).Append("\n");
            sb.Append("  NextSshKeyCheckDate: ").Append(NextSshKeyCheckDate).Append("\n");
            sb.Append("  LastSshKeyChangeDate: ").Append(LastSshKeyChangeDate).Append("\n");
            sb.Append("  LastSuccessSshKeyChangeDate: ").Append(LastSuccessSshKeyChangeDate).Append("\n");
            sb.Append("  LastFailureSshKeyChangeDate: ").Append(LastFailureSshKeyChangeDate).Append("\n");
            sb.Append("  LastSshKeyChangeTaskId: ").Append(LastSshKeyChangeTaskId).Append("\n");
            sb.Append("  FailedSshKeyChangeAttempts: ").Append(FailedSshKeyChangeAttempts).Append("\n");
            sb.Append("  NextSshKeyChangeDate: ").Append(NextSshKeyChangeDate).Append("\n");
            sb.Append("  LastSshKeyDiscoveryDate: ").Append(LastSshKeyDiscoveryDate).Append("\n");
            sb.Append("  LastSuccessSshKeyDiscoveryDate: ").Append(LastSuccessSshKeyDiscoveryDate).Append("\n");
            sb.Append("  LastFailureSshKeyDiscoveryDate: ").Append(LastFailureSshKeyDiscoveryDate).Append("\n");
            sb.Append("  LastSshKeyDiscoveryTaskId: ").Append(LastSshKeyDiscoveryTaskId).Append("\n");
            sb.Append("  FailedSshKeyDiscoveryAttempts: ").Append(FailedSshKeyDiscoveryAttempts).Append("\n");
            sb.Append("  NextSshKeyDiscoveryDate: ").Append(NextSshKeyDiscoveryDate).Append("\n");
            sb.Append("  LastSshKeyRevokeDate: ").Append(LastSshKeyRevokeDate).Append("\n");
            sb.Append("  LastSuccessSshKeyRevokeDate: ").Append(LastSuccessSshKeyRevokeDate).Append("\n");
            sb.Append("  LastFailureSshKeyRevokeDate: ").Append(LastFailureSshKeyRevokeDate).Append("\n");
            sb.Append("  LastSshKeyRevokeTaskId: ").Append(LastSshKeyRevokeTaskId).Append("\n");
            sb.Append("  FailedSshKeyRevokeAttempts: ").Append(FailedSshKeyRevokeAttempts).Append("\n");
            sb.Append("  LastSuspendAccountDate: ").Append(LastSuspendAccountDate).Append("\n");
            sb.Append("  LastSuccessSuspendAccountDate: ").Append(LastSuccessSuspendAccountDate).Append("\n");
            sb.Append("  LastFailureSuspendAccountDate: ").Append(LastFailureSuspendAccountDate).Append("\n");
            sb.Append("  LastSuspendAccountTaskId: ").Append(LastSuspendAccountTaskId).Append("\n");
            sb.Append("  FailedSuspendAccountAttempts: ").Append(FailedSuspendAccountAttempts).Append("\n");
            sb.Append("  NextSuspendAccountDate: ").Append(NextSuspendAccountDate).Append("\n");
            sb.Append("  LastRestoreAccountDate: ").Append(LastRestoreAccountDate).Append("\n");
            sb.Append("  LastSuccessRestoreAccountDate: ").Append(LastSuccessRestoreAccountDate).Append("\n");
            sb.Append("  LastFailureRestoreAccountDate: ").Append(LastFailureRestoreAccountDate).Append("\n");
            sb.Append("  LastRestoreAccountTaskId: ").Append(LastRestoreAccountTaskId).Append("\n");
            sb.Append("  FailedRestoreAccountAttempts: ").Append(FailedRestoreAccountAttempts).Append("\n");
            sb.Append("  NextRestoreAccountDate: ").Append(NextRestoreAccountDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((AccountTaskProperties)obj);
        }

        /// <summary>
        /// Returns true if AccountTaskProperties instances are equal
        /// </summary>
        /// <param name="other">Instance of AccountTaskProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AccountTaskProperties other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    HasAccountTaskFailure == other.HasAccountTaskFailure ||
                    HasAccountTaskFailure != null &&
                    HasAccountTaskFailure.Equals(other.HasAccountTaskFailure)
                ) && 
                (
                    LastPasswordCheckDate == other.LastPasswordCheckDate ||
                    LastPasswordCheckDate != null &&
                    LastPasswordCheckDate.Equals(other.LastPasswordCheckDate)
                ) && 
                (
                    LastSuccessPasswordCheckDate == other.LastSuccessPasswordCheckDate ||
                    LastSuccessPasswordCheckDate != null &&
                    LastSuccessPasswordCheckDate.Equals(other.LastSuccessPasswordCheckDate)
                ) && 
                (
                    LastFailurePasswordCheckDate == other.LastFailurePasswordCheckDate ||
                    LastFailurePasswordCheckDate != null &&
                    LastFailurePasswordCheckDate.Equals(other.LastFailurePasswordCheckDate)
                ) && 
                (
                    LastPasswordCheckTaskId == other.LastPasswordCheckTaskId ||
                    LastPasswordCheckTaskId != null &&
                    LastPasswordCheckTaskId.Equals(other.LastPasswordCheckTaskId)
                ) && 
                (
                    FailedPasswordCheckAttempts == other.FailedPasswordCheckAttempts ||
                    FailedPasswordCheckAttempts != null &&
                    FailedPasswordCheckAttempts.Equals(other.FailedPasswordCheckAttempts)
                ) && 
                (
                    NextPasswordCheckDate == other.NextPasswordCheckDate ||
                    NextPasswordCheckDate != null &&
                    NextPasswordCheckDate.Equals(other.NextPasswordCheckDate)
                ) && 
                (
                    LastPasswordChangeDate == other.LastPasswordChangeDate ||
                    LastPasswordChangeDate != null &&
                    LastPasswordChangeDate.Equals(other.LastPasswordChangeDate)
                ) && 
                (
                    LastSuccessPasswordChangeDate == other.LastSuccessPasswordChangeDate ||
                    LastSuccessPasswordChangeDate != null &&
                    LastSuccessPasswordChangeDate.Equals(other.LastSuccessPasswordChangeDate)
                ) && 
                (
                    LastFailurePasswordChangeDate == other.LastFailurePasswordChangeDate ||
                    LastFailurePasswordChangeDate != null &&
                    LastFailurePasswordChangeDate.Equals(other.LastFailurePasswordChangeDate)
                ) && 
                (
                    LastPasswordChangeTaskId == other.LastPasswordChangeTaskId ||
                    LastPasswordChangeTaskId != null &&
                    LastPasswordChangeTaskId.Equals(other.LastPasswordChangeTaskId)
                ) && 
                (
                    FailedPasswordChangeAttempts == other.FailedPasswordChangeAttempts ||
                    FailedPasswordChangeAttempts != null &&
                    FailedPasswordChangeAttempts.Equals(other.FailedPasswordChangeAttempts)
                ) && 
                (
                    NextPasswordChangeDate == other.NextPasswordChangeDate ||
                    NextPasswordChangeDate != null &&
                    NextPasswordChangeDate.Equals(other.NextPasswordChangeDate)
                ) && 
                (
                    LastSshKeyCheckDate == other.LastSshKeyCheckDate ||
                    LastSshKeyCheckDate != null &&
                    LastSshKeyCheckDate.Equals(other.LastSshKeyCheckDate)
                ) && 
                (
                    LastSuccessSshKeyCheckDate == other.LastSuccessSshKeyCheckDate ||
                    LastSuccessSshKeyCheckDate != null &&
                    LastSuccessSshKeyCheckDate.Equals(other.LastSuccessSshKeyCheckDate)
                ) && 
                (
                    LastFailureSshKeyCheckDate == other.LastFailureSshKeyCheckDate ||
                    LastFailureSshKeyCheckDate != null &&
                    LastFailureSshKeyCheckDate.Equals(other.LastFailureSshKeyCheckDate)
                ) && 
                (
                    LastSshKeyCheckTaskId == other.LastSshKeyCheckTaskId ||
                    LastSshKeyCheckTaskId != null &&
                    LastSshKeyCheckTaskId.Equals(other.LastSshKeyCheckTaskId)
                ) && 
                (
                    FailedSshKeyCheckAttempts == other.FailedSshKeyCheckAttempts ||
                    FailedSshKeyCheckAttempts != null &&
                    FailedSshKeyCheckAttempts.Equals(other.FailedSshKeyCheckAttempts)
                ) && 
                (
                    NextSshKeyCheckDate == other.NextSshKeyCheckDate ||
                    NextSshKeyCheckDate != null &&
                    NextSshKeyCheckDate.Equals(other.NextSshKeyCheckDate)
                ) && 
                (
                    LastSshKeyChangeDate == other.LastSshKeyChangeDate ||
                    LastSshKeyChangeDate != null &&
                    LastSshKeyChangeDate.Equals(other.LastSshKeyChangeDate)
                ) && 
                (
                    LastSuccessSshKeyChangeDate == other.LastSuccessSshKeyChangeDate ||
                    LastSuccessSshKeyChangeDate != null &&
                    LastSuccessSshKeyChangeDate.Equals(other.LastSuccessSshKeyChangeDate)
                ) && 
                (
                    LastFailureSshKeyChangeDate == other.LastFailureSshKeyChangeDate ||
                    LastFailureSshKeyChangeDate != null &&
                    LastFailureSshKeyChangeDate.Equals(other.LastFailureSshKeyChangeDate)
                ) && 
                (
                    LastSshKeyChangeTaskId == other.LastSshKeyChangeTaskId ||
                    LastSshKeyChangeTaskId != null &&
                    LastSshKeyChangeTaskId.Equals(other.LastSshKeyChangeTaskId)
                ) && 
                (
                    FailedSshKeyChangeAttempts == other.FailedSshKeyChangeAttempts ||
                    FailedSshKeyChangeAttempts != null &&
                    FailedSshKeyChangeAttempts.Equals(other.FailedSshKeyChangeAttempts)
                ) && 
                (
                    NextSshKeyChangeDate == other.NextSshKeyChangeDate ||
                    NextSshKeyChangeDate != null &&
                    NextSshKeyChangeDate.Equals(other.NextSshKeyChangeDate)
                ) && 
                (
                    LastSshKeyDiscoveryDate == other.LastSshKeyDiscoveryDate ||
                    LastSshKeyDiscoveryDate != null &&
                    LastSshKeyDiscoveryDate.Equals(other.LastSshKeyDiscoveryDate)
                ) && 
                (
                    LastSuccessSshKeyDiscoveryDate == other.LastSuccessSshKeyDiscoveryDate ||
                    LastSuccessSshKeyDiscoveryDate != null &&
                    LastSuccessSshKeyDiscoveryDate.Equals(other.LastSuccessSshKeyDiscoveryDate)
                ) && 
                (
                    LastFailureSshKeyDiscoveryDate == other.LastFailureSshKeyDiscoveryDate ||
                    LastFailureSshKeyDiscoveryDate != null &&
                    LastFailureSshKeyDiscoveryDate.Equals(other.LastFailureSshKeyDiscoveryDate)
                ) && 
                (
                    LastSshKeyDiscoveryTaskId == other.LastSshKeyDiscoveryTaskId ||
                    LastSshKeyDiscoveryTaskId != null &&
                    LastSshKeyDiscoveryTaskId.Equals(other.LastSshKeyDiscoveryTaskId)
                ) && 
                (
                    FailedSshKeyDiscoveryAttempts == other.FailedSshKeyDiscoveryAttempts ||
                    FailedSshKeyDiscoveryAttempts != null &&
                    FailedSshKeyDiscoveryAttempts.Equals(other.FailedSshKeyDiscoveryAttempts)
                ) && 
                (
                    NextSshKeyDiscoveryDate == other.NextSshKeyDiscoveryDate ||
                    NextSshKeyDiscoveryDate != null &&
                    NextSshKeyDiscoveryDate.Equals(other.NextSshKeyDiscoveryDate)
                ) && 
                (
                    LastSshKeyRevokeDate == other.LastSshKeyRevokeDate ||
                    LastSshKeyRevokeDate != null &&
                    LastSshKeyRevokeDate.Equals(other.LastSshKeyRevokeDate)
                ) && 
                (
                    LastSuccessSshKeyRevokeDate == other.LastSuccessSshKeyRevokeDate ||
                    LastSuccessSshKeyRevokeDate != null &&
                    LastSuccessSshKeyRevokeDate.Equals(other.LastSuccessSshKeyRevokeDate)
                ) && 
                (
                    LastFailureSshKeyRevokeDate == other.LastFailureSshKeyRevokeDate ||
                    LastFailureSshKeyRevokeDate != null &&
                    LastFailureSshKeyRevokeDate.Equals(other.LastFailureSshKeyRevokeDate)
                ) && 
                (
                    LastSshKeyRevokeTaskId == other.LastSshKeyRevokeTaskId ||
                    LastSshKeyRevokeTaskId != null &&
                    LastSshKeyRevokeTaskId.Equals(other.LastSshKeyRevokeTaskId)
                ) && 
                (
                    FailedSshKeyRevokeAttempts == other.FailedSshKeyRevokeAttempts ||
                    FailedSshKeyRevokeAttempts != null &&
                    FailedSshKeyRevokeAttempts.Equals(other.FailedSshKeyRevokeAttempts)
                ) && 
                (
                    LastSuspendAccountDate == other.LastSuspendAccountDate ||
                    LastSuspendAccountDate != null &&
                    LastSuspendAccountDate.Equals(other.LastSuspendAccountDate)
                ) && 
                (
                    LastSuccessSuspendAccountDate == other.LastSuccessSuspendAccountDate ||
                    LastSuccessSuspendAccountDate != null &&
                    LastSuccessSuspendAccountDate.Equals(other.LastSuccessSuspendAccountDate)
                ) && 
                (
                    LastFailureSuspendAccountDate == other.LastFailureSuspendAccountDate ||
                    LastFailureSuspendAccountDate != null &&
                    LastFailureSuspendAccountDate.Equals(other.LastFailureSuspendAccountDate)
                ) && 
                (
                    LastSuspendAccountTaskId == other.LastSuspendAccountTaskId ||
                    LastSuspendAccountTaskId != null &&
                    LastSuspendAccountTaskId.Equals(other.LastSuspendAccountTaskId)
                ) && 
                (
                    FailedSuspendAccountAttempts == other.FailedSuspendAccountAttempts ||
                    FailedSuspendAccountAttempts != null &&
                    FailedSuspendAccountAttempts.Equals(other.FailedSuspendAccountAttempts)
                ) && 
                (
                    NextSuspendAccountDate == other.NextSuspendAccountDate ||
                    NextSuspendAccountDate != null &&
                    NextSuspendAccountDate.Equals(other.NextSuspendAccountDate)
                ) && 
                (
                    LastRestoreAccountDate == other.LastRestoreAccountDate ||
                    LastRestoreAccountDate != null &&
                    LastRestoreAccountDate.Equals(other.LastRestoreAccountDate)
                ) && 
                (
                    LastSuccessRestoreAccountDate == other.LastSuccessRestoreAccountDate ||
                    LastSuccessRestoreAccountDate != null &&
                    LastSuccessRestoreAccountDate.Equals(other.LastSuccessRestoreAccountDate)
                ) && 
                (
                    LastFailureRestoreAccountDate == other.LastFailureRestoreAccountDate ||
                    LastFailureRestoreAccountDate != null &&
                    LastFailureRestoreAccountDate.Equals(other.LastFailureRestoreAccountDate)
                ) && 
                (
                    LastRestoreAccountTaskId == other.LastRestoreAccountTaskId ||
                    LastRestoreAccountTaskId != null &&
                    LastRestoreAccountTaskId.Equals(other.LastRestoreAccountTaskId)
                ) && 
                (
                    FailedRestoreAccountAttempts == other.FailedRestoreAccountAttempts ||
                    FailedRestoreAccountAttempts != null &&
                    FailedRestoreAccountAttempts.Equals(other.FailedRestoreAccountAttempts)
                ) && 
                (
                    NextRestoreAccountDate == other.NextRestoreAccountDate ||
                    NextRestoreAccountDate != null &&
                    NextRestoreAccountDate.Equals(other.NextRestoreAccountDate)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (HasAccountTaskFailure != null)
                    hashCode = hashCode * 59 + HasAccountTaskFailure.GetHashCode();
                    if (LastPasswordCheckDate != null)
                    hashCode = hashCode * 59 + LastPasswordCheckDate.GetHashCode();
                    if (LastSuccessPasswordCheckDate != null)
                    hashCode = hashCode * 59 + LastSuccessPasswordCheckDate.GetHashCode();
                    if (LastFailurePasswordCheckDate != null)
                    hashCode = hashCode * 59 + LastFailurePasswordCheckDate.GetHashCode();
                    if (LastPasswordCheckTaskId != null)
                    hashCode = hashCode * 59 + LastPasswordCheckTaskId.GetHashCode();
                    if (FailedPasswordCheckAttempts != null)
                    hashCode = hashCode * 59 + FailedPasswordCheckAttempts.GetHashCode();
                    if (NextPasswordCheckDate != null)
                    hashCode = hashCode * 59 + NextPasswordCheckDate.GetHashCode();
                    if (LastPasswordChangeDate != null)
                    hashCode = hashCode * 59 + LastPasswordChangeDate.GetHashCode();
                    if (LastSuccessPasswordChangeDate != null)
                    hashCode = hashCode * 59 + LastSuccessPasswordChangeDate.GetHashCode();
                    if (LastFailurePasswordChangeDate != null)
                    hashCode = hashCode * 59 + LastFailurePasswordChangeDate.GetHashCode();
                    if (LastPasswordChangeTaskId != null)
                    hashCode = hashCode * 59 + LastPasswordChangeTaskId.GetHashCode();
                    if (FailedPasswordChangeAttempts != null)
                    hashCode = hashCode * 59 + FailedPasswordChangeAttempts.GetHashCode();
                    if (NextPasswordChangeDate != null)
                    hashCode = hashCode * 59 + NextPasswordChangeDate.GetHashCode();
                    if (LastSshKeyCheckDate != null)
                    hashCode = hashCode * 59 + LastSshKeyCheckDate.GetHashCode();
                    if (LastSuccessSshKeyCheckDate != null)
                    hashCode = hashCode * 59 + LastSuccessSshKeyCheckDate.GetHashCode();
                    if (LastFailureSshKeyCheckDate != null)
                    hashCode = hashCode * 59 + LastFailureSshKeyCheckDate.GetHashCode();
                    if (LastSshKeyCheckTaskId != null)
                    hashCode = hashCode * 59 + LastSshKeyCheckTaskId.GetHashCode();
                    if (FailedSshKeyCheckAttempts != null)
                    hashCode = hashCode * 59 + FailedSshKeyCheckAttempts.GetHashCode();
                    if (NextSshKeyCheckDate != null)
                    hashCode = hashCode * 59 + NextSshKeyCheckDate.GetHashCode();
                    if (LastSshKeyChangeDate != null)
                    hashCode = hashCode * 59 + LastSshKeyChangeDate.GetHashCode();
                    if (LastSuccessSshKeyChangeDate != null)
                    hashCode = hashCode * 59 + LastSuccessSshKeyChangeDate.GetHashCode();
                    if (LastFailureSshKeyChangeDate != null)
                    hashCode = hashCode * 59 + LastFailureSshKeyChangeDate.GetHashCode();
                    if (LastSshKeyChangeTaskId != null)
                    hashCode = hashCode * 59 + LastSshKeyChangeTaskId.GetHashCode();
                    if (FailedSshKeyChangeAttempts != null)
                    hashCode = hashCode * 59 + FailedSshKeyChangeAttempts.GetHashCode();
                    if (NextSshKeyChangeDate != null)
                    hashCode = hashCode * 59 + NextSshKeyChangeDate.GetHashCode();
                    if (LastSshKeyDiscoveryDate != null)
                    hashCode = hashCode * 59 + LastSshKeyDiscoveryDate.GetHashCode();
                    if (LastSuccessSshKeyDiscoveryDate != null)
                    hashCode = hashCode * 59 + LastSuccessSshKeyDiscoveryDate.GetHashCode();
                    if (LastFailureSshKeyDiscoveryDate != null)
                    hashCode = hashCode * 59 + LastFailureSshKeyDiscoveryDate.GetHashCode();
                    if (LastSshKeyDiscoveryTaskId != null)
                    hashCode = hashCode * 59 + LastSshKeyDiscoveryTaskId.GetHashCode();
                    if (FailedSshKeyDiscoveryAttempts != null)
                    hashCode = hashCode * 59 + FailedSshKeyDiscoveryAttempts.GetHashCode();
                    if (NextSshKeyDiscoveryDate != null)
                    hashCode = hashCode * 59 + NextSshKeyDiscoveryDate.GetHashCode();
                    if (LastSshKeyRevokeDate != null)
                    hashCode = hashCode * 59 + LastSshKeyRevokeDate.GetHashCode();
                    if (LastSuccessSshKeyRevokeDate != null)
                    hashCode = hashCode * 59 + LastSuccessSshKeyRevokeDate.GetHashCode();
                    if (LastFailureSshKeyRevokeDate != null)
                    hashCode = hashCode * 59 + LastFailureSshKeyRevokeDate.GetHashCode();
                    if (LastSshKeyRevokeTaskId != null)
                    hashCode = hashCode * 59 + LastSshKeyRevokeTaskId.GetHashCode();
                    if (FailedSshKeyRevokeAttempts != null)
                    hashCode = hashCode * 59 + FailedSshKeyRevokeAttempts.GetHashCode();
                    if (LastSuspendAccountDate != null)
                    hashCode = hashCode * 59 + LastSuspendAccountDate.GetHashCode();
                    if (LastSuccessSuspendAccountDate != null)
                    hashCode = hashCode * 59 + LastSuccessSuspendAccountDate.GetHashCode();
                    if (LastFailureSuspendAccountDate != null)
                    hashCode = hashCode * 59 + LastFailureSuspendAccountDate.GetHashCode();
                    if (LastSuspendAccountTaskId != null)
                    hashCode = hashCode * 59 + LastSuspendAccountTaskId.GetHashCode();
                    if (FailedSuspendAccountAttempts != null)
                    hashCode = hashCode * 59 + FailedSuspendAccountAttempts.GetHashCode();
                    if (NextSuspendAccountDate != null)
                    hashCode = hashCode * 59 + NextSuspendAccountDate.GetHashCode();
                    if (LastRestoreAccountDate != null)
                    hashCode = hashCode * 59 + LastRestoreAccountDate.GetHashCode();
                    if (LastSuccessRestoreAccountDate != null)
                    hashCode = hashCode * 59 + LastSuccessRestoreAccountDate.GetHashCode();
                    if (LastFailureRestoreAccountDate != null)
                    hashCode = hashCode * 59 + LastFailureRestoreAccountDate.GetHashCode();
                    if (LastRestoreAccountTaskId != null)
                    hashCode = hashCode * 59 + LastRestoreAccountTaskId.GetHashCode();
                    if (FailedRestoreAccountAttempts != null)
                    hashCode = hashCode * 59 + FailedRestoreAccountAttempts.GetHashCode();
                    if (NextRestoreAccountDate != null)
                    hashCode = hashCode * 59 + NextRestoreAccountDate.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(AccountTaskProperties left, AccountTaskProperties right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(AccountTaskProperties left, AccountTaskProperties right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
