/*
 * Safeguard Core API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace OneIdentitySafeguard.Mock.Server.Models
{ 
        /// <summary>
        /// Types of changes that can be maded to an object
        /// </summary>
        /// <value>Types of changes that can be maded to an object</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum OperationType
        {
            /// <summary>
            /// Enum CreateEnum for Create
            /// </summary>
            [EnumMember(Value = "Create")]
            CreateEnum = 0,
            /// <summary>
            /// Enum UpdateEnum for Update
            /// </summary>
            [EnumMember(Value = "Update")]
            UpdateEnum = 1,
            /// <summary>
            /// Enum DeleteEnum for Delete
            /// </summary>
            [EnumMember(Value = "Delete")]
            DeleteEnum = 2,
            /// <summary>
            /// Enum AddMembershipEnum for AddMembership
            /// </summary>
            [EnumMember(Value = "AddMembership")]
            AddMembershipEnum = 3,
            /// <summary>
            /// Enum RemoveMembershipEnum for RemoveMembership
            /// </summary>
            [EnumMember(Value = "RemoveMembership")]
            RemoveMembershipEnum = 4,
            /// <summary>
            /// Enum EventEnum for Event
            /// </summary>
            [EnumMember(Value = "Event")]
            EventEnum = 5,
            /// <summary>
            /// Enum MigrateEnum for Migrate
            /// </summary>
            [EnumMember(Value = "Migrate")]
            MigrateEnum = 6,
            /// <summary>
            /// Enum UndeleteEnum for Undelete
            /// </summary>
            [EnumMember(Value = "Undelete")]
            UndeleteEnum = 7,
            /// <summary>
            /// Enum PurgeEnum for Purge
            /// </summary>
            [EnumMember(Value = "Purge")]
            PurgeEnum = 8        }
}
