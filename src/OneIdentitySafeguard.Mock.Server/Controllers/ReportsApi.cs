/*
 * Safeguard Core API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using OneIdentitySafeguard.Mock.Server.Attributes;
using OneIdentitySafeguard.Mock.Server.Security;
using Microsoft.AspNetCore.Authorization;
using OneIdentitySafeguard.Mock.Server.Models;

namespace OneIdentitySafeguard.Mock.Server.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ReportsApiController : ControllerBase
    { 
        /// <summary>
        /// Generates a report of what accounts have failing tasks
        /// </summary>
        /// <param name="accountTaskName">Specific task type for which to generate a failed account report</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.  WARNING - Not fully supported for task report queries</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Tasks/FailedAccountTasks/{accountTaskName}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGenerateFailedAccountTaskReportAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AccountTaskData>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGenerateFailedAccountTaskReportAsync([FromRoute][Required]AccountTaskNames accountTaskName, [FromQuery]string fields, [FromQuery]string filter, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string orderby, [FromQuery]int? page, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AccountTaskData>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"EffectiveProfileId\" : 7,\n  \"SyncGroupName\" : \"SyncGroupName\",\n  \"EffectiveSshKeyProfileName\" : \"EffectiveSshKeyProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"PlatformId\" : 2,\n  \"Disabled\" : true,\n  \"AssetPartitionId\" : 1,\n  \"IsServiceAccount\" : true,\n  \"EffectiveProfileName\" : \"EffectiveProfileName\",\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SshKeySyncGroupId\" : 5,\n  \"PlatformTaskInformation\" : {\n    \"LastFailureTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TaskName\" : \"Unknown\",\n    \"LastSuccessTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedTaskAttempts\" : 3,\n    \"LastTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTaskId\" : \"LastTaskId\"\n  },\n  \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n  \"AccountType\" : \"Asset\",\n  \"AssetName\" : \"AssetName\",\n  \"EffectiveSshKeyProfileId\" : 9,\n  \"SyncGroupId\" : 5,\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 0,\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 6,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"EffectiveProfileId\" : 7,\n  \"SyncGroupName\" : \"SyncGroupName\",\n  \"EffectiveSshKeyProfileName\" : \"EffectiveSshKeyProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"PlatformId\" : 2,\n  \"Disabled\" : true,\n  \"AssetPartitionId\" : 1,\n  \"IsServiceAccount\" : true,\n  \"EffectiveProfileName\" : \"EffectiveProfileName\",\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SshKeySyncGroupId\" : 5,\n  \"PlatformTaskInformation\" : {\n    \"LastFailureTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TaskName\" : \"Unknown\",\n    \"LastSuccessTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedTaskAttempts\" : 3,\n    \"LastTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTaskId\" : \"LastTaskId\"\n  },\n  \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n  \"AccountType\" : \"Asset\",\n  \"AssetName\" : \"AssetName\",\n  \"EffectiveSshKeyProfileId\" : 9,\n  \"SyncGroupId\" : 5,\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 0,\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 6,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AccountTaskData>>(exampleJson)
                        : default(List<AccountTaskData>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of what assets have failing tasks
        /// </summary>
        /// <param name="assetTaskName">Specific task type for which to generate a failed asset report</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.  WARNING - Not fully supported for task report queries</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Tasks/FailedAssetTasks/{assetTaskName}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGenerateFailedAssetTaskReportAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AccountTaskData>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGenerateFailedAssetTaskReportAsync([FromRoute][Required]AssetTaskNames assetTaskName, [FromQuery]string fields, [FromQuery]string filter, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string orderby, [FromQuery]int? page, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AccountTaskData>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"EffectiveProfileId\" : 7,\n  \"SyncGroupName\" : \"SyncGroupName\",\n  \"EffectiveSshKeyProfileName\" : \"EffectiveSshKeyProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"PlatformId\" : 2,\n  \"Disabled\" : true,\n  \"AssetPartitionId\" : 1,\n  \"IsServiceAccount\" : true,\n  \"EffectiveProfileName\" : \"EffectiveProfileName\",\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SshKeySyncGroupId\" : 5,\n  \"PlatformTaskInformation\" : {\n    \"LastFailureTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TaskName\" : \"Unknown\",\n    \"LastSuccessTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedTaskAttempts\" : 3,\n    \"LastTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTaskId\" : \"LastTaskId\"\n  },\n  \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n  \"AccountType\" : \"Asset\",\n  \"AssetName\" : \"AssetName\",\n  \"EffectiveSshKeyProfileId\" : 9,\n  \"SyncGroupId\" : 5,\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 0,\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 6,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"EffectiveProfileId\" : 7,\n  \"SyncGroupName\" : \"SyncGroupName\",\n  \"EffectiveSshKeyProfileName\" : \"EffectiveSshKeyProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"PlatformId\" : 2,\n  \"Disabled\" : true,\n  \"AssetPartitionId\" : 1,\n  \"IsServiceAccount\" : true,\n  \"EffectiveProfileName\" : \"EffectiveProfileName\",\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SshKeySyncGroupId\" : 5,\n  \"PlatformTaskInformation\" : {\n    \"LastFailureTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TaskName\" : \"Unknown\",\n    \"LastSuccessTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedTaskAttempts\" : 3,\n    \"LastTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTaskDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTaskId\" : \"LastTaskId\"\n  },\n  \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n  \"AccountType\" : \"Asset\",\n  \"AssetName\" : \"AssetName\",\n  \"EffectiveSshKeyProfileId\" : 9,\n  \"SyncGroupId\" : 5,\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 0,\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 6,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AccountTaskData>>(exampleJson)
                        : default(List<AccountTaskData>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a summary report of account tasks
        /// </summary>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Tasks/AccountTaskSummary")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGenerateTaskSummaryReportAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AccountTaskSummaryReport), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGenerateTaskSummaryReportAsync()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AccountTaskSummaryReport));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "{\n  \"PasswordCheckFailures\" : 0,\n  \"SshKeyCheckSuccesses\" : 7,\n  \"SshKeyCheckFailures\" : 5,\n  \"SshKeyDiscoveryFailures\" : 3,\n  \"SshKeyChangeSuccesses\" : 9,\n  \"SshKeyRevokeSuccesses\" : 7,\n  \"SshKeyChangeFailures\" : 2,\n  \"SuspendAccountFailures\" : 1,\n  \"SshKeyRevokeFailures\" : 2,\n  \"PasswordCheckSuccesses\" : 1,\n  \"RestoreAccountFailures\" : 1,\n  \"PasswordChangeSuccesses\" : 5,\n  \"PasswordChangeFailures\" : 6,\n  \"SshKeyDiscoverySuccesses\" : 4\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AccountTaskSummaryReport>(exampleJson)
                        : default(AccountTaskSummaryReport);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of what users can access a set of accounts
        /// </summary>
        /// <param name="accountIds">Comma-separated list of accounts to report access for. Will report on all accounts by default. (preferred over filter)</param>
        /// <param name="accessRequestType">Only report on access via a specific request type (preferred over filter)</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.  WARNING - Not fully supported for entitlement queries</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have PolicyAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Entitlements/AccountEntitlements")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetAccountEntitlementsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserAccountEntitlement>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have PolicyAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetAccountEntitlementsAsync([FromQuery]string accountIds, [FromQuery]AccessRequestType accessRequestType, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserAccountEntitlement>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccessRequestType\" : \"Password\",\n  \"AccountId\" : 5,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"RoleIdentityId\" : 9,\n  \"AccessPolicyId\" : 2,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n  \"PasswordLastAccessedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"FromLinkedAccount\" : true,\n  \"AssetPartitionId\" : 1,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"UserName\" : \"UserName\",\n  \"IsPartitionOwner\" : true,\n  \"ChangeSshKeyAfterCheckin\" : true,\n  \"RoleIdentityName\" : \"RoleIdentityName\",\n  \"RoleId\" : 7,\n  \"AssetName\" : \"AssetName\",\n  \"AccessPolicyName\" : \"AccessPolicyName\",\n  \"AllowSessionPasswordRelease\" : true,\n  \"RoleName\" : \"RoleName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"AllowSessionSshKeyRelease\" : true,\n  \"ChangePasswordAfterCheckin\" : true,\n  \"EffectiveHourlyRestrictionProperties\" : {\n    \"EnableHourlyRestrictions\" : false,\n    \"ThursdayValidHours\" : [ 6, 6 ],\n    \"WednesdayValidHours\" : [ 0, 0 ],\n    \"SaturdayValidHours\" : [ 1, 1 ],\n    \"TuesdayValidHours\" : [ 4, 4 ],\n    \"MondayValidHours\" : [ 3, 3 ],\n    \"FridayValidHours\" : [ 4, 4 ],\n    \"SundayValidHours\" : [ 4, 4 ]\n  },\n  \"UserId\" : 0,\n  \"PassphraseProtectSshKey\" : true,\n  \"EffectiveExpirationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"RoleIdentityType\" : \"Unknown\",\n  \"AccountRequestType\" : \"None\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"AccessRequestType\" : \"Password\",\n  \"AccountId\" : 5,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"RoleIdentityId\" : 9,\n  \"AccessPolicyId\" : 2,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n  \"PasswordLastAccessedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"FromLinkedAccount\" : true,\n  \"AssetPartitionId\" : 1,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"UserName\" : \"UserName\",\n  \"IsPartitionOwner\" : true,\n  \"ChangeSshKeyAfterCheckin\" : true,\n  \"RoleIdentityName\" : \"RoleIdentityName\",\n  \"RoleId\" : 7,\n  \"AssetName\" : \"AssetName\",\n  \"AccessPolicyName\" : \"AccessPolicyName\",\n  \"AllowSessionPasswordRelease\" : true,\n  \"RoleName\" : \"RoleName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"AllowSessionSshKeyRelease\" : true,\n  \"ChangePasswordAfterCheckin\" : true,\n  \"EffectiveHourlyRestrictionProperties\" : {\n    \"EnableHourlyRestrictions\" : false,\n    \"ThursdayValidHours\" : [ 6, 6 ],\n    \"WednesdayValidHours\" : [ 0, 0 ],\n    \"SaturdayValidHours\" : [ 1, 1 ],\n    \"TuesdayValidHours\" : [ 4, 4 ],\n    \"MondayValidHours\" : [ 3, 3 ],\n    \"FridayValidHours\" : [ 4, 4 ],\n    \"SundayValidHours\" : [ 4, 4 ]\n  },\n  \"UserId\" : 0,\n  \"PassphraseProtectSshKey\" : true,\n  \"EffectiveExpirationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"RoleIdentityType\" : \"Unknown\",\n  \"AccountRequestType\" : \"None\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<UserAccountEntitlement>>(exampleJson)
                        : default(List<UserAccountEntitlement>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of what users can access accounts on a set of policy assets
        /// </summary>
        /// <param name="assetIds">Comma-separated list of policy assets to report access for. Will report on all assets by default. (preferred over filter)</param>
        /// <param name="accessRequestType">Only report on access via a specific request type (preferred over filter)</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.  WARNING - Not fully supported for entitlement queries</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have PolicyAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Entitlements/AssetEntitlements")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetAssetEntitlementsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserAccountEntitlement>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have PolicyAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetAssetEntitlementsAsync([FromQuery]string assetIds, [FromQuery]AccessRequestType accessRequestType, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserAccountEntitlement>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccessRequestType\" : \"Password\",\n  \"AccountId\" : 5,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"RoleIdentityId\" : 9,\n  \"AccessPolicyId\" : 2,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n  \"PasswordLastAccessedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"FromLinkedAccount\" : true,\n  \"AssetPartitionId\" : 1,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"UserName\" : \"UserName\",\n  \"IsPartitionOwner\" : true,\n  \"ChangeSshKeyAfterCheckin\" : true,\n  \"RoleIdentityName\" : \"RoleIdentityName\",\n  \"RoleId\" : 7,\n  \"AssetName\" : \"AssetName\",\n  \"AccessPolicyName\" : \"AccessPolicyName\",\n  \"AllowSessionPasswordRelease\" : true,\n  \"RoleName\" : \"RoleName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"AllowSessionSshKeyRelease\" : true,\n  \"ChangePasswordAfterCheckin\" : true,\n  \"EffectiveHourlyRestrictionProperties\" : {\n    \"EnableHourlyRestrictions\" : false,\n    \"ThursdayValidHours\" : [ 6, 6 ],\n    \"WednesdayValidHours\" : [ 0, 0 ],\n    \"SaturdayValidHours\" : [ 1, 1 ],\n    \"TuesdayValidHours\" : [ 4, 4 ],\n    \"MondayValidHours\" : [ 3, 3 ],\n    \"FridayValidHours\" : [ 4, 4 ],\n    \"SundayValidHours\" : [ 4, 4 ]\n  },\n  \"UserId\" : 0,\n  \"PassphraseProtectSshKey\" : true,\n  \"EffectiveExpirationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"RoleIdentityType\" : \"Unknown\",\n  \"AccountRequestType\" : \"None\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"AccessRequestType\" : \"Password\",\n  \"AccountId\" : 5,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"RoleIdentityId\" : 9,\n  \"AccessPolicyId\" : 2,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n  \"PasswordLastAccessedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"FromLinkedAccount\" : true,\n  \"AssetPartitionId\" : 1,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"UserName\" : \"UserName\",\n  \"IsPartitionOwner\" : true,\n  \"ChangeSshKeyAfterCheckin\" : true,\n  \"RoleIdentityName\" : \"RoleIdentityName\",\n  \"RoleId\" : 7,\n  \"AssetName\" : \"AssetName\",\n  \"AccessPolicyName\" : \"AccessPolicyName\",\n  \"AllowSessionPasswordRelease\" : true,\n  \"RoleName\" : \"RoleName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"AllowSessionSshKeyRelease\" : true,\n  \"ChangePasswordAfterCheckin\" : true,\n  \"EffectiveHourlyRestrictionProperties\" : {\n    \"EnableHourlyRestrictions\" : false,\n    \"ThursdayValidHours\" : [ 6, 6 ],\n    \"WednesdayValidHours\" : [ 0, 0 ],\n    \"SaturdayValidHours\" : [ 1, 1 ],\n    \"TuesdayValidHours\" : [ 4, 4 ],\n    \"MondayValidHours\" : [ 3, 3 ],\n    \"FridayValidHours\" : [ 4, 4 ],\n    \"SundayValidHours\" : [ 4, 4 ]\n  },\n  \"UserId\" : 0,\n  \"PassphraseProtectSshKey\" : true,\n  \"EffectiveExpirationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"RoleIdentityType\" : \"Unknown\",\n  \"AccountRequestType\" : \"None\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<UserAccountEntitlement>>(exampleJson)
                        : default(List<UserAccountEntitlement>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of report categories
        /// </summary>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have PolicyAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Entitlements")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetEntitlementReportTypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<EntitlementReportTypes>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have PolicyAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetEntitlementReportTypes()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<EntitlementReportTypes>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ \"AccountEntitlement\", \"AccountEntitlement\" ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<EntitlementReportTypes>>(exampleJson)
                        : default(List<EntitlementReportTypes>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of owned items by type: Account, Asset, Partition, Tag, User
        /// </summary>
        /// <param name="reportType">Ownership Report Type</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Ownership/{reportType}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetOwnershipReportByTypeAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserOwnershipReportType>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetOwnershipReportByTypeAsync([FromRoute][Required]OwnershipReportTypes reportType, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserOwnershipReportType>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<UserOwnershipReportType>>(exampleJson)
                        : default(List<UserOwnershipReportType>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of how a user owns an item
        /// </summary>
        /// <param name="userId">Ownership User Id</param>
        /// <param name="itemId">Ownership Item Id</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Ownership/User/{userId}/Item/{itemId}/Details")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetOwnershipReportDetailsByUserIdItemIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserOwnershipDetail), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetOwnershipReportDetailsByUserIdItemIdAsync([FromRoute][Required]int? userId, [FromRoute][Required]int? itemId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserOwnershipDetail));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "{\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<UserOwnershipDetail>(exampleJson)
                        : default(UserOwnershipDetail);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of how a user owns an item by tag
        /// </summary>
        /// <param name="userId">Ownership User Id</param>
        /// <param name="itemId">Ownership Item Id</param>
        /// <param name="tagId">Ownership Tag Id</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Ownership/User/{userId}/Item/{itemId}/Tag/{tagId}/Details")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetOwnershipReportDetailsByUserIdItemIdTagIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserOwnershipDetail), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetOwnershipReportDetailsByUserIdItemIdTagIdAsync([FromRoute][Required]int? userId, [FromRoute][Required]int? itemId, [FromRoute][Required]int? tagId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserOwnershipDetail));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "{\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<UserOwnershipDetail>(exampleJson)
                        : default(UserOwnershipDetail);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of a set of items by tag
        /// </summary>
        /// <param name="tagId">Ownership Tag Id</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Ownership/Tag/{tagId}/Items")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetOwnershipReportItemsByTagIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserOwnershipDetail>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetOwnershipReportItemsByTagIdAsync([FromRoute][Required]int? tagId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserOwnershipDetail>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<UserOwnershipDetail>>(exampleJson)
                        : default(List<UserOwnershipDetail>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of a set of items by user
        /// </summary>
        /// <param name="userId">Ownership User Id</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Ownership/User/{userId}/Items")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetOwnershipReportItemsByUserIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserOwnershipDetail>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetOwnershipReportItemsByUserIdAsync([FromRoute][Required]int? userId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserOwnershipDetail>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<UserOwnershipDetail>>(exampleJson)
                        : default(List<UserOwnershipDetail>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of owners by account with parent asset and parent partition
        /// </summary>
        /// <param name="accountId">Ownership Account Id</param>
        /// <param name="assetId">Ownership Asset Id</param>
        /// <param name="partitionId">Ownership Partition Id</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Ownership/Account/{accountId}/Asset/{assetId}/AssetPartition/{partitionId}/Owners")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetOwnershipReportOwnersByAccountIdAssetIdPartitionIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserOwnershipDetail>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetOwnershipReportOwnersByAccountIdAssetIdPartitionIdAsync([FromRoute][Required]int? accountId, [FromRoute][Required]int? assetId, [FromRoute][Required]int? partitionId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserOwnershipDetail>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<UserOwnershipDetail>>(exampleJson)
                        : default(List<UserOwnershipDetail>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of owners by account
        /// </summary>
        /// <param name="accountId">Ownership Account Id</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Ownership/Account/{accountId}/Owners")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetOwnershipReportOwnersByAccountIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserOwnershipDetail>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetOwnershipReportOwnersByAccountIdAsync([FromRoute][Required]int? accountId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserOwnershipDetail>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<UserOwnershipDetail>>(exampleJson)
                        : default(List<UserOwnershipDetail>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of owners by asset
        /// </summary>
        /// <param name="assetId">Ownership Asset Id</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Ownership/Asset/{assetId}/Owners")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetOwnershipReportOwnersByAssetIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserOwnershipDetail>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetOwnershipReportOwnersByAssetIdAsync([FromRoute][Required]int? assetId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserOwnershipDetail>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<UserOwnershipDetail>>(exampleJson)
                        : default(List<UserOwnershipDetail>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of owners by asset and parent partition
        /// </summary>
        /// <param name="assetId">Ownership Asset Id</param>
        /// <param name="partitionId">Ownership Partition Id</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Ownership/Asset/{assetId}/AssetPartition/{partitionId}/Owners")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetOwnershipReportOwnersByAssetIdPartitionIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserOwnershipDetail>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetOwnershipReportOwnersByAssetIdPartitionIdAsync([FromRoute][Required]int? assetId, [FromRoute][Required]int? partitionId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserOwnershipDetail>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<UserOwnershipDetail>>(exampleJson)
                        : default(List<UserOwnershipDetail>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of owners by partition
        /// </summary>
        /// <param name="partitionId">Ownership Partition Id</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Ownership/Partition/{partitionId}/Owners")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetOwnershipReportOwnersByPartitionIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserOwnershipDetail>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetOwnershipReportOwnersByPartitionIdAsync([FromRoute][Required]int? partitionId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserOwnershipDetail>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<UserOwnershipDetail>>(exampleJson)
                        : default(List<UserOwnershipDetail>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of owners by tag
        /// </summary>
        /// <param name="tagId">Ownership Tag Id</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Ownership/Tag/{tagId}/Owners")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetOwnershipReportOwnersByTagIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserOwnershipDetail>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetOwnershipReportOwnersByTagIdAsync([FromRoute][Required]int? tagId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserOwnershipDetail>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"OwnershipType\" : \"Unknown\",\n  \"AssetPartitionId\" : 6,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"AccountId\" : 5,\n  \"UserName\" : \"UserName\",\n  \"TagName\" : \"TagName\",\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"ViaDirectGroups\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsTag\" : true,\n  \"ItemId\" : 0,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"UserId\" : 2,\n  \"TagId\" : 5,\n  \"ViaTagGroups\" : [ null, null ],\n  \"IsDirect\" : true,\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"AssetId\" : 1,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<UserOwnershipDetail>>(exampleJson)
                        : default(List<UserOwnershipDetail>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of report categories
        /// </summary>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Ownership")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetOwnershipReportTypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<OwnershipReportTypes>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetOwnershipReportTypes()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<OwnershipReportTypes>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ \"User\", \"User\" ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<OwnershipReportTypes>>(exampleJson)
                        : default(List<OwnershipReportTypes>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of task report categories
        /// </summary>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Tasks")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetTaskReportTypes")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<TaskReportTypes>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetTaskReportTypes()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<TaskReportTypes>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ \"FailedAccountTasks\", \"FailedAccountTasks\" ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<TaskReportTypes>>(exampleJson)
                        : default(List<TaskReportTypes>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a report of what accounts can be accessed by a set of users
        /// </summary>
        /// <param name="userIds">Comma-separated list of users to report access for. Will report on all users by default. (preferred over filter)</param>
        /// <param name="accessRequestType">Only report on access via a specific request type (preferred over filter)</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.  WARNING - Not fully supported for entitlement queries</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have PolicyAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports/Entitlements/UserEntitlements")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetUserEntitlementsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<UserAccountEntitlement>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have PolicyAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetUserEntitlementsAsync([FromQuery]string userIds, [FromQuery]AccessRequestType accessRequestType, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<UserAccountEntitlement>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccessRequestType\" : \"Password\",\n  \"AccountId\" : 5,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"RoleIdentityId\" : 9,\n  \"AccessPolicyId\" : 2,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n  \"PasswordLastAccessedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"FromLinkedAccount\" : true,\n  \"AssetPartitionId\" : 1,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"UserName\" : \"UserName\",\n  \"IsPartitionOwner\" : true,\n  \"ChangeSshKeyAfterCheckin\" : true,\n  \"RoleIdentityName\" : \"RoleIdentityName\",\n  \"RoleId\" : 7,\n  \"AssetName\" : \"AssetName\",\n  \"AccessPolicyName\" : \"AccessPolicyName\",\n  \"AllowSessionPasswordRelease\" : true,\n  \"RoleName\" : \"RoleName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"AllowSessionSshKeyRelease\" : true,\n  \"ChangePasswordAfterCheckin\" : true,\n  \"EffectiveHourlyRestrictionProperties\" : {\n    \"EnableHourlyRestrictions\" : false,\n    \"ThursdayValidHours\" : [ 6, 6 ],\n    \"WednesdayValidHours\" : [ 0, 0 ],\n    \"SaturdayValidHours\" : [ 1, 1 ],\n    \"TuesdayValidHours\" : [ 4, 4 ],\n    \"MondayValidHours\" : [ 3, 3 ],\n    \"FridayValidHours\" : [ 4, 4 ],\n    \"SundayValidHours\" : [ 4, 4 ]\n  },\n  \"UserId\" : 0,\n  \"PassphraseProtectSshKey\" : true,\n  \"EffectiveExpirationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"RoleIdentityType\" : \"Unknown\",\n  \"AccountRequestType\" : \"None\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"AccessRequestType\" : \"Password\",\n  \"AccountId\" : 5,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"RoleIdentityId\" : 9,\n  \"AccessPolicyId\" : 2,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n  \"PasswordLastAccessedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"UserDisplayName\" : \"UserDisplayName\",\n  \"FromLinkedAccount\" : true,\n  \"AssetPartitionId\" : 1,\n  \"UserDomainName\" : \"UserDomainName\",\n  \"UserName\" : \"UserName\",\n  \"IsPartitionOwner\" : true,\n  \"ChangeSshKeyAfterCheckin\" : true,\n  \"RoleIdentityName\" : \"RoleIdentityName\",\n  \"RoleId\" : 7,\n  \"AssetName\" : \"AssetName\",\n  \"AccessPolicyName\" : \"AccessPolicyName\",\n  \"AllowSessionPasswordRelease\" : true,\n  \"RoleName\" : \"RoleName\",\n  \"AssetNetworkAddress\" : \"AssetNetworkAddress\",\n  \"AllowSessionSshKeyRelease\" : true,\n  \"ChangePasswordAfterCheckin\" : true,\n  \"EffectiveHourlyRestrictionProperties\" : {\n    \"EnableHourlyRestrictions\" : false,\n    \"ThursdayValidHours\" : [ 6, 6 ],\n    \"WednesdayValidHours\" : [ 0, 0 ],\n    \"SaturdayValidHours\" : [ 1, 1 ],\n    \"TuesdayValidHours\" : [ 4, 4 ],\n    \"MondayValidHours\" : [ 3, 3 ],\n    \"FridayValidHours\" : [ 4, 4 ],\n    \"SundayValidHours\" : [ 4, 4 ]\n  },\n  \"UserId\" : 0,\n  \"PassphraseProtectSshKey\" : true,\n  \"EffectiveExpirationDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"RoleIdentityType\" : \"Unknown\",\n  \"AccountRequestType\" : \"None\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<UserAccountEntitlement>>(exampleJson)
                        : default(List<UserAccountEntitlement>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of report categories
        /// </summary>
        /// <response code="200">Success</response>
        /// <response code="403">Must have PolicyAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Reports")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ReportsGetV3ReportCategories")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ReportCategories>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have PolicyAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult ReportsGetV3ReportCategories()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ReportCategories>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ \"Entitlements\", \"Entitlements\" ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<ReportCategories>>(exampleJson)
                        : default(List<ReportCategories>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
