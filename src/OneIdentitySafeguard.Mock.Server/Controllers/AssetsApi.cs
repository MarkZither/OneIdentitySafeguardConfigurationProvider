/*
 * Safeguard Core API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using OneIdentitySafeguard.Mock.Server.Attributes;
using OneIdentitySafeguard.Mock.Server.Security;
using Microsoft.AspNetCore.Authorization;
using OneIdentitySafeguard.Mock.Server.Models;

namespace OneIdentitySafeguard.Mock.Server.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AssetsApiController : ControllerBase
    { 
        /// <summary>
        /// Checks if the current account name is unique for this asset prior to create/update
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="body">Parameters for checking for unique name</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/{id}/CheckUniqueAccountName")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsCheckAccountNameAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(bool?), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsCheckAccountNameAsync([FromRoute][Required]int? id, [FromBody]UniqueNameParameters body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(bool?));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "true";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<bool?>(exampleJson)
                        : default(bool?);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Checks if the current name is unique prior to create/update
        /// </summary>
        /// <param name="body">Parameters for checking for unique name</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/CheckUniqueName")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsCheckAssetNameAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(bool?), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsCheckAssetNameAsync([FromBody]UniqueNameParameters body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(bool?));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "true";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<bool?>(exampleJson)
                        : default(bool?);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Adds a new Asset
        /// </summary>
        /// <param name="body">Asset to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsCreateAssetAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(Asset), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsCreateAssetAsync([FromBody]Asset body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Asset));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Asset>(exampleJson)
                        : default(Asset);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Processes multiple new assets
        /// </summary>
        /// <param name="body">New assets to process</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/BatchCreate")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsCreateMultipleAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetBatchResponse>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsCreateMultipleAssetsAsync([FromBody]List<Asset> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetBatchResponse>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"Response\" : {\n    \"AccountDiscoveryScheduleId\" : 6,\n    \"Description\" : \"Description\",\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"IsDirectory\" : true,\n    \"Platform\" : {\n      \"Description\" : \"Description\",\n      \"Architecture\" : \"Architecture\",\n      \"DeviceClass\" : \"Unknown\",\n      \"ConnectionProperties\" : {\n        \"SupportsSslCertificateVerification\" : true,\n        \"SupportsNamedPipeForServiceAccountConnection\" : true,\n        \"SupportsPasswordAuthentication\" : true,\n        \"SupportsSshKeyAuthentication\" : true,\n        \"SupportsServiceName\" : true,\n        \"SupportsAccessKeyAuthentication\" : true,\n        \"SupportsLocalhostPasswordAuthentication\" : true,\n        \"RequiresDistinguishedName\" : true,\n        \"SupportsInstance\" : true,\n        \"SupportsOraclePrivileges\" : true,\n        \"SupportsDirectorySync\" : true,\n        \"SupportsClientId\" : true,\n        \"DefaultPort\" : 6,\n        \"SupportsDirectoryPasswordAuthentication\" : true,\n        \"SupportsWorkstationId\" : true,\n        \"SupportsTimeout\" : true,\n        \"SupportsPrivilegedAccount\" : true,\n        \"SupportsDirectoryAssetDiscovery\" : true,\n        \"SupportsLdap\" : true,\n        \"SupportsPrivilegeElevationCommand\" : true,\n        \"SupportsSslEncryption\" : true,\n        \"SupportsStarlingConnectAuthentication\" : true,\n        \"SupportsAccountPasswordAuthentication\" : true,\n        \"SupportsSshTransport\" : true,\n        \"SupportsTopSecretInterval\" : true,\n        \"DefaultSslPort\" : 7,\n        \"SupportsSslThumbprint\" : true,\n        \"AllowCustomPort\" : true,\n        \"SupportsEnablePassword\" : true,\n        \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n        \"SupportsTacacsSecret\" : true\n      },\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PasswordFeatureProperties\" : {\n        \"SupportsPasswordManagement\" : true,\n        \"SupportsSshKeyManagement\" : true,\n        \"RequireNetworkAddress\" : true,\n        \"SupportsDependentSystemTasks\" : true,\n        \"AllowRequireCurrentPassword\" : true,\n        \"SupportsSuspendRestoreAccount\" : true,\n        \"SupportsAccountDiscovery\" : true,\n        \"SupportsServiceDiscovery\" : true,\n        \"SupportsUsePasswordHash\" : true\n      },\n      \"CustomScriptProperties\" : {\n        \"Parameters\" : [ {\n          \"DefaultValue\" : \"DefaultValue\",\n          \"Type\" : \"String\",\n          \"Description\" : \"Description\",\n          \"Name\" : \"Name\"\n        }, {\n          \"DefaultValue\" : \"DefaultValue\",\n          \"Type\" : \"String\",\n          \"Description\" : \"Description\",\n          \"Name\" : \"Name\"\n        } ],\n        \"HasScript\" : true\n      },\n      \"Name\" : \"Name\",\n      \"Version\" : \"Version\",\n      \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n      \"SessionFeatureProperties\" : {\n        \"DefaultRemoteDesktopSessionPort\" : 4,\n        \"DefaultTelnetSessionPort\" : 5,\n        \"SupportsSessionManagement\" : true,\n        \"DefaultSshSessionPort\" : 1\n      },\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"IsSystemOwned\" : true\n    },\n    \"ManagedNetworkName\" : \"ManagedNetworkName\",\n    \"DiscoveredDirectoryGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"RegisteredConnector\" : {\n      \"StarlingConnectorId\" : \"StarlingConnectorId\",\n      \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n      \"VisibleToPartitions\" : [ {\n        \"CreatedByUserId\" : 6,\n        \"Description\" : \"Description\",\n        \"ManagedBy\" : [ {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        }, {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        } ],\n        \"DefaultProfileName\" : \"DefaultProfileName\",\n        \"DefaultSshKeyProfileId\" : 5,\n        \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n        \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n        \"DefaultProfileId\" : 1,\n        \"Id\" : 0,\n        \"Name\" : \"Name\"\n      }, {\n        \"CreatedByUserId\" : 6,\n        \"Description\" : \"Description\",\n        \"ManagedBy\" : [ {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        }, {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        } ],\n        \"DefaultProfileName\" : \"DefaultProfileName\",\n        \"DefaultSshKeyProfileId\" : 5,\n        \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n        \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n        \"DefaultProfileId\" : 1,\n        \"Id\" : 0,\n        \"Name\" : \"Name\"\n      } ],\n      \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n      \"Id\" : 9,\n      \"VisibleToAllPartitions\" : true\n    },\n    \"CustomScriptParameters\" : [ {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    }, {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    } ],\n    \"LicenseClass\" : \"System\",\n    \"Name\" : \"Name\",\n    \"PasswordProfile\" : {\n      \"Id\" : 8,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"CreatedByUserId\" : 5,\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"ManagedNetworkId\" : 1,\n    \"TaskProperties\" : {\n      \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedAccountDiscoveryAttempts\" : 7,\n      \"FailedTestConnectionAttempts\" : 3,\n      \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n      \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"HasAssetTaskFailure\" : true,\n      \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n      \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n      \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedServiceDiscoveryAttempts\" : 9,\n      \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n      \"FailedDependentServiceUpdateAttempts\" : 2,\n      \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"PlatformId\" : 6,\n    \"Disabled\" : true,\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ],\n    \"AssetPartitionId\" : 5,\n    \"AssetDiscoveryJobId\" : 9,\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"DirectoryAssetProperties\" : {\n      \"FailedSyncAttempts\" : 1,\n      \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n      \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"DomainName\" : \"DomainName\",\n      \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"ForestRootDomain\" : \"ForestRootDomain\",\n      \"DomainControllers\" : [ {\n        \"ServerType\" : \"DomainController\",\n        \"IsWritable\" : true,\n        \"NetworkAddress\" : \"NetworkAddress\",\n        \"DomainName\" : \"DomainName\"\n      }, {\n        \"ServerType\" : \"DomainController\",\n        \"IsWritable\" : true,\n        \"NetworkAddress\" : \"NetworkAddress\",\n        \"DomainName\" : \"DomainName\"\n      } ],\n      \"UsePasswordHash\" : true,\n      \"SchemaProperties\" : {\n        \"UserProperties\" : {\n          \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n          \"UserNameAttribute\" : \"UserNameAttribute\",\n          \"DescriptionAttribute\" : \"DescriptionAttribute\",\n          \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n          \"PasswordAttribute\" : \"PasswordAttribute\",\n          \"MemberOfAttribute\" : \"MemberOfAttribute\"\n        },\n        \"ComputerProperties\" : {\n          \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n          \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n          \"DescriptionAttribute\" : \"DescriptionAttribute\",\n          \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n          \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n          \"NameAttribute\" : \"NameAttribute\",\n          \"MemberOfAttribute\" : \"MemberOfAttribute\"\n        },\n        \"GroupProperties\" : {\n          \"MemberAttribute\" : \"MemberAttribute\",\n          \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n          \"NameAttribute\" : \"NameAttribute\"\n        }\n      },\n      \"Domains\" : [ {\n        \"DomainName\" : \"DomainName\",\n        \"DomainUniqueId\" : \"DomainUniqueId\",\n        \"NetBiosName\" : \"NetBiosName\",\n        \"NamingContext\" : \"NamingContext\"\n      }, {\n        \"DomainName\" : \"DomainName\",\n        \"DomainUniqueId\" : \"DomainUniqueId\",\n        \"NetBiosName\" : \"NetBiosName\",\n        \"NamingContext\" : \"NamingContext\"\n      } ],\n      \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"DeleteSyncIntervalMinutes\" : 1586191969,\n      \"FailedDeleteSyncAttempts\" : 1,\n      \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"AllowSharedSearch\" : true,\n      \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"SynchronizationIntervalMinutes\" : 890262545,\n      \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n    },\n    \"ConnectionProperties\" : {\n      \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n      \"ServiceAccountSshKeyProfileId\" : 1,\n      \"ServiceAccountHasSshKey\" : true,\n      \"RegisteredConnectorId\" : 1,\n      \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n      \"UseNamedPipeForServiceAccountConnection\" : true,\n      \"Instance\" : \"Instance\",\n      \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n      \"Port\" : 48874,\n      \"ServiceAccountSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ServiceAccountId\" : 6,\n      \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n      \"HasSecretKey\" : true,\n      \"TacacsSecret\" : \"TacacsSecret\",\n      \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n      \"CommandTimeout\" : 13584,\n      \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n      \"EnablePassword\" : \"EnablePassword\",\n      \"WorkstationId\" : \"WorkstationId\",\n      \"SslThumbprint\" : \"SslThumbprint\",\n      \"EnableHasPassword\" : true,\n      \"ClientId\" : 737,\n      \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n      \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n      \"ServiceAccountCredentialType\" : \"None\",\n      \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n      \"ServiceAccountHasPassword\" : true,\n      \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n      \"UseSslEncryption\" : true,\n      \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n      \"HasTacacsSecret\" : true,\n      \"UseTopSecretInterval\" : true,\n      \"ServiceAccountName\" : \"ServiceAccountName\",\n      \"VerifySslCertificate\" : true,\n      \"OraclePrivileges\" : \"OraclePrivileges\",\n      \"SecretKey\" : \"SecretKey\",\n      \"ServiceAccountAssetPlatformId\" : 4,\n      \"ServiceAccountProfileId\" : 1,\n      \"ServiceName\" : \"ServiceName\",\n      \"AccessKeyId\" : \"AccessKeyId\",\n      \"ServiceAccountAssetId\" : 1,\n      \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n      \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n    },\n    \"SessionAccessProperties\" : {\n      \"RemoteDesktopSessionPort\" : 21975,\n      \"AllowSessionRequests\" : true,\n      \"TelnetSessionPort\" : 20275,\n      \"SshSessionPort\" : 43935\n    },\n    \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"SshHostKey\" : {\n      \"Fingerprint\" : \"Fingerprint\",\n      \"SshHostKey\" : \"SshHostKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\"\n    },\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 6,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"Id\" : 0\n  },\n  \"StatusCodeNumber\" : 0,\n  \"IsSuccess\" : true,\n  \"Error\" : {\n    \"Message\" : \"Message\",\n    \"Code\" : 6\n  },\n  \"StatusCode\" : \"Continue\"\n}, {\n  \"Response\" : {\n    \"AccountDiscoveryScheduleId\" : 6,\n    \"Description\" : \"Description\",\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"IsDirectory\" : true,\n    \"Platform\" : {\n      \"Description\" : \"Description\",\n      \"Architecture\" : \"Architecture\",\n      \"DeviceClass\" : \"Unknown\",\n      \"ConnectionProperties\" : {\n        \"SupportsSslCertificateVerification\" : true,\n        \"SupportsNamedPipeForServiceAccountConnection\" : true,\n        \"SupportsPasswordAuthentication\" : true,\n        \"SupportsSshKeyAuthentication\" : true,\n        \"SupportsServiceName\" : true,\n        \"SupportsAccessKeyAuthentication\" : true,\n        \"SupportsLocalhostPasswordAuthentication\" : true,\n        \"RequiresDistinguishedName\" : true,\n        \"SupportsInstance\" : true,\n        \"SupportsOraclePrivileges\" : true,\n        \"SupportsDirectorySync\" : true,\n        \"SupportsClientId\" : true,\n        \"DefaultPort\" : 6,\n        \"SupportsDirectoryPasswordAuthentication\" : true,\n        \"SupportsWorkstationId\" : true,\n        \"SupportsTimeout\" : true,\n        \"SupportsPrivilegedAccount\" : true,\n        \"SupportsDirectoryAssetDiscovery\" : true,\n        \"SupportsLdap\" : true,\n        \"SupportsPrivilegeElevationCommand\" : true,\n        \"SupportsSslEncryption\" : true,\n        \"SupportsStarlingConnectAuthentication\" : true,\n        \"SupportsAccountPasswordAuthentication\" : true,\n        \"SupportsSshTransport\" : true,\n        \"SupportsTopSecretInterval\" : true,\n        \"DefaultSslPort\" : 7,\n        \"SupportsSslThumbprint\" : true,\n        \"AllowCustomPort\" : true,\n        \"SupportsEnablePassword\" : true,\n        \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n        \"SupportsTacacsSecret\" : true\n      },\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PasswordFeatureProperties\" : {\n        \"SupportsPasswordManagement\" : true,\n        \"SupportsSshKeyManagement\" : true,\n        \"RequireNetworkAddress\" : true,\n        \"SupportsDependentSystemTasks\" : true,\n        \"AllowRequireCurrentPassword\" : true,\n        \"SupportsSuspendRestoreAccount\" : true,\n        \"SupportsAccountDiscovery\" : true,\n        \"SupportsServiceDiscovery\" : true,\n        \"SupportsUsePasswordHash\" : true\n      },\n      \"CustomScriptProperties\" : {\n        \"Parameters\" : [ {\n          \"DefaultValue\" : \"DefaultValue\",\n          \"Type\" : \"String\",\n          \"Description\" : \"Description\",\n          \"Name\" : \"Name\"\n        }, {\n          \"DefaultValue\" : \"DefaultValue\",\n          \"Type\" : \"String\",\n          \"Description\" : \"Description\",\n          \"Name\" : \"Name\"\n        } ],\n        \"HasScript\" : true\n      },\n      \"Name\" : \"Name\",\n      \"Version\" : \"Version\",\n      \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n      \"SessionFeatureProperties\" : {\n        \"DefaultRemoteDesktopSessionPort\" : 4,\n        \"DefaultTelnetSessionPort\" : 5,\n        \"SupportsSessionManagement\" : true,\n        \"DefaultSshSessionPort\" : 1\n      },\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"IsSystemOwned\" : true\n    },\n    \"ManagedNetworkName\" : \"ManagedNetworkName\",\n    \"DiscoveredDirectoryGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"RegisteredConnector\" : {\n      \"StarlingConnectorId\" : \"StarlingConnectorId\",\n      \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n      \"VisibleToPartitions\" : [ {\n        \"CreatedByUserId\" : 6,\n        \"Description\" : \"Description\",\n        \"ManagedBy\" : [ {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        }, {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        } ],\n        \"DefaultProfileName\" : \"DefaultProfileName\",\n        \"DefaultSshKeyProfileId\" : 5,\n        \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n        \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n        \"DefaultProfileId\" : 1,\n        \"Id\" : 0,\n        \"Name\" : \"Name\"\n      }, {\n        \"CreatedByUserId\" : 6,\n        \"Description\" : \"Description\",\n        \"ManagedBy\" : [ {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        }, {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        } ],\n        \"DefaultProfileName\" : \"DefaultProfileName\",\n        \"DefaultSshKeyProfileId\" : 5,\n        \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n        \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n        \"DefaultProfileId\" : 1,\n        \"Id\" : 0,\n        \"Name\" : \"Name\"\n      } ],\n      \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n      \"Id\" : 9,\n      \"VisibleToAllPartitions\" : true\n    },\n    \"CustomScriptParameters\" : [ {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    }, {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    } ],\n    \"LicenseClass\" : \"System\",\n    \"Name\" : \"Name\",\n    \"PasswordProfile\" : {\n      \"Id\" : 8,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"CreatedByUserId\" : 5,\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"ManagedNetworkId\" : 1,\n    \"TaskProperties\" : {\n      \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedAccountDiscoveryAttempts\" : 7,\n      \"FailedTestConnectionAttempts\" : 3,\n      \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n      \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"HasAssetTaskFailure\" : true,\n      \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n      \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n      \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedServiceDiscoveryAttempts\" : 9,\n      \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n      \"FailedDependentServiceUpdateAttempts\" : 2,\n      \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"PlatformId\" : 6,\n    \"Disabled\" : true,\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ],\n    \"AssetPartitionId\" : 5,\n    \"AssetDiscoveryJobId\" : 9,\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"DirectoryAssetProperties\" : {\n      \"FailedSyncAttempts\" : 1,\n      \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n      \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"DomainName\" : \"DomainName\",\n      \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"ForestRootDomain\" : \"ForestRootDomain\",\n      \"DomainControllers\" : [ {\n        \"ServerType\" : \"DomainController\",\n        \"IsWritable\" : true,\n        \"NetworkAddress\" : \"NetworkAddress\",\n        \"DomainName\" : \"DomainName\"\n      }, {\n        \"ServerType\" : \"DomainController\",\n        \"IsWritable\" : true,\n        \"NetworkAddress\" : \"NetworkAddress\",\n        \"DomainName\" : \"DomainName\"\n      } ],\n      \"UsePasswordHash\" : true,\n      \"SchemaProperties\" : {\n        \"UserProperties\" : {\n          \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n          \"UserNameAttribute\" : \"UserNameAttribute\",\n          \"DescriptionAttribute\" : \"DescriptionAttribute\",\n          \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n          \"PasswordAttribute\" : \"PasswordAttribute\",\n          \"MemberOfAttribute\" : \"MemberOfAttribute\"\n        },\n        \"ComputerProperties\" : {\n          \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n          \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n          \"DescriptionAttribute\" : \"DescriptionAttribute\",\n          \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n          \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n          \"NameAttribute\" : \"NameAttribute\",\n          \"MemberOfAttribute\" : \"MemberOfAttribute\"\n        },\n        \"GroupProperties\" : {\n          \"MemberAttribute\" : \"MemberAttribute\",\n          \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n          \"NameAttribute\" : \"NameAttribute\"\n        }\n      },\n      \"Domains\" : [ {\n        \"DomainName\" : \"DomainName\",\n        \"DomainUniqueId\" : \"DomainUniqueId\",\n        \"NetBiosName\" : \"NetBiosName\",\n        \"NamingContext\" : \"NamingContext\"\n      }, {\n        \"DomainName\" : \"DomainName\",\n        \"DomainUniqueId\" : \"DomainUniqueId\",\n        \"NetBiosName\" : \"NetBiosName\",\n        \"NamingContext\" : \"NamingContext\"\n      } ],\n      \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"DeleteSyncIntervalMinutes\" : 1586191969,\n      \"FailedDeleteSyncAttempts\" : 1,\n      \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"AllowSharedSearch\" : true,\n      \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"SynchronizationIntervalMinutes\" : 890262545,\n      \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n    },\n    \"ConnectionProperties\" : {\n      \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n      \"ServiceAccountSshKeyProfileId\" : 1,\n      \"ServiceAccountHasSshKey\" : true,\n      \"RegisteredConnectorId\" : 1,\n      \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n      \"UseNamedPipeForServiceAccountConnection\" : true,\n      \"Instance\" : \"Instance\",\n      \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n      \"Port\" : 48874,\n      \"ServiceAccountSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ServiceAccountId\" : 6,\n      \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n      \"HasSecretKey\" : true,\n      \"TacacsSecret\" : \"TacacsSecret\",\n      \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n      \"CommandTimeout\" : 13584,\n      \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n      \"EnablePassword\" : \"EnablePassword\",\n      \"WorkstationId\" : \"WorkstationId\",\n      \"SslThumbprint\" : \"SslThumbprint\",\n      \"EnableHasPassword\" : true,\n      \"ClientId\" : 737,\n      \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n      \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n      \"ServiceAccountCredentialType\" : \"None\",\n      \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n      \"ServiceAccountHasPassword\" : true,\n      \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n      \"UseSslEncryption\" : true,\n      \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n      \"HasTacacsSecret\" : true,\n      \"UseTopSecretInterval\" : true,\n      \"ServiceAccountName\" : \"ServiceAccountName\",\n      \"VerifySslCertificate\" : true,\n      \"OraclePrivileges\" : \"OraclePrivileges\",\n      \"SecretKey\" : \"SecretKey\",\n      \"ServiceAccountAssetPlatformId\" : 4,\n      \"ServiceAccountProfileId\" : 1,\n      \"ServiceName\" : \"ServiceName\",\n      \"AccessKeyId\" : \"AccessKeyId\",\n      \"ServiceAccountAssetId\" : 1,\n      \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n      \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n    },\n    \"SessionAccessProperties\" : {\n      \"RemoteDesktopSessionPort\" : 21975,\n      \"AllowSessionRequests\" : true,\n      \"TelnetSessionPort\" : 20275,\n      \"SshSessionPort\" : 43935\n    },\n    \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"SshHostKey\" : {\n      \"Fingerprint\" : \"Fingerprint\",\n      \"SshHostKey\" : \"SshHostKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\"\n    },\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 6,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"Id\" : 0\n  },\n  \"StatusCodeNumber\" : 0,\n  \"IsSuccess\" : true,\n  \"Error\" : {\n    \"Message\" : \"Message\",\n    \"Code\" : 6\n  },\n  \"StatusCode\" : \"Continue\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetBatchResponse>>(exampleJson)
                        : default(List<AssetBatchResponse>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Removes an Asset
        /// </summary>
        /// <param name="id">Unique identifier of the Asset to remove</param>
        /// <param name="forceDelete">Include &#x27;X-Force-Delete&#x27; HTTP header or this query string parameter set to true to force delete despite dependencies when given 50104  error</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/Assets/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsDeleteAsync")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsDeleteAsync([FromRoute][Required]int? id, [FromQuery]bool? forceDelete)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Processes multiple asset deletes
        /// </summary>
        /// <param name="body">Asset IDs to process</param>
        /// <param name="forceDelete">Include &#x27;X-Force-Delete&#x27; HTTP header or this query string parameter set to true to force delete despite dependencies when given 50104  error</param>
        /// <response code="200">Success</response>
        /// <response code="204">Success - No Content</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/BatchDelete")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsDeleteMultipleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetBatchResult>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsDeleteMultipleAsync([FromBody]List<int?> body, [FromQuery]bool? forceDelete)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetBatchResult>));

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"StatusCodeNumber\" : 0,\n  \"IsSuccess\" : true,\n  \"Request\" : 6,\n  \"Error\" : {\n    \"Message\" : \"Message\",\n    \"Code\" : 6\n  },\n  \"StatusCode\" : \"Continue\"\n}, {\n  \"StatusCodeNumber\" : 0,\n  \"IsSuccess\" : true,\n  \"Request\" : 6,\n  \"Error\" : {\n    \"Message\" : \"Message\",\n    \"Code\" : 6\n  },\n  \"StatusCode\" : \"Continue\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetBatchResult>>(exampleJson)
                        : default(List<AssetBatchResult>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Disable asset and its accounts from automated platform tasks
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/{id}/Disable")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsDisableAssetAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(Asset), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsDisableAssetAsync([FromRoute][Required]int? id)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Asset));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Asset>(exampleJson)
                        : default(Asset);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Discovers the available schema attributes using provided domain credentials
        /// </summary>
        /// <param name="body">Credentials for authenticating to the directory</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/DiscoverSchema")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsDiscoverSchemaAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DirectorySchema>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsDiscoverSchemaAsync([FromBody]AssetSchemaParameters body, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DirectorySchema>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"ObjectClassName\" : \"ObjectClassName\",\n  \"Attributes\" : [ {\n    \"AttributeSyntax\" : \"Unknown\",\n    \"LdapDisplayName\" : \"LdapDisplayName\"\n  }, {\n    \"AttributeSyntax\" : \"Unknown\",\n    \"LdapDisplayName\" : \"LdapDisplayName\"\n  } ]\n}, {\n  \"ObjectClassName\" : \"ObjectClassName\",\n  \"Attributes\" : [ {\n    \"AttributeSyntax\" : \"Unknown\",\n    \"LdapDisplayName\" : \"LdapDisplayName\"\n  }, {\n    \"AttributeSyntax\" : \"Unknown\",\n    \"LdapDisplayName\" : \"LdapDisplayName\"\n  } ]\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DirectorySchema>>(exampleJson)
                        : default(List<DirectorySchema>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Discovers the available schema attributes using provided domain credentials for a specific object class
        /// </summary>
        /// <param name="objectClassName">Name of object class to discover schema for</param>
        /// <param name="body">Credentials for authenticating to active directory</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/DiscoverSchema/{objectClassName}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsDiscoverSchemaByClassAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DirectorySchema>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsDiscoverSchemaByClassAsync([FromRoute][Required]string objectClassName, [FromBody]AssetSchemaParameters body, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DirectorySchema>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"ObjectClassName\" : \"ObjectClassName\",\n  \"Attributes\" : [ {\n    \"AttributeSyntax\" : \"Unknown\",\n    \"LdapDisplayName\" : \"LdapDisplayName\"\n  }, {\n    \"AttributeSyntax\" : \"Unknown\",\n    \"LdapDisplayName\" : \"LdapDisplayName\"\n  } ]\n}, {\n  \"ObjectClassName\" : \"ObjectClassName\",\n  \"Attributes\" : [ {\n    \"AttributeSyntax\" : \"Unknown\",\n    \"LdapDisplayName\" : \"LdapDisplayName\"\n  }, {\n    \"AttributeSyntax\" : \"Unknown\",\n    \"LdapDisplayName\" : \"LdapDisplayName\"\n  } ]\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DirectorySchema>>(exampleJson)
                        : default(List<DirectorySchema>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the ssh host key for an asset
        /// </summary>
        /// <param name="body">Optionally override asset connection settings</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/DiscoverSshHostKey")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsDiscoverSshHostKeyAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetSshHostKey), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsDiscoverSshHostKeyAsync([FromBody]DiscoverSshHostKeyParameters body, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetSshHostKey));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"Fingerprint\" : \"Fingerprint\",\n  \"SshHostKey\" : \"SshHostKey\",\n  \"FingerprintSha256\" : \"FingerprintSha256\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetSshHostKey>(exampleJson)
                        : default(AssetSshHostKey);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Tests the configured connection to this asset
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="body">Optionally override asset connection settings</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/{id}/DiscoverSshHostKey")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsDiscoverSshHostKeyByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetSshHostKey), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsDiscoverSshHostKeyByIdAsync([FromRoute][Required]int? id, [FromBody]AssetDiscoverSshHostKeyParameters body, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetSshHostKey));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"Fingerprint\" : \"Fingerprint\",\n  \"SshHostKey\" : \"SshHostKey\",\n  \"FingerprintSha256\" : \"FingerprintSha256\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetSshHostKey>(exampleJson)
                        : default(AssetSshHostKey);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Enable asset and its accounts from automated platform tasks
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/{id}/Enable")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsEnableAssetAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(Asset), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsEnableAssetAsync([FromRoute][Required]int? id)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Asset));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Asset>(exampleJson)
                        : default(Asset);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of assets across all accessible partitions
        /// </summary>
        /// <param name="tagNames">List of comma-separated tag IDs by which to filter results. Preferred over using filter.</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/Assets")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetAllAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Asset>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetAllAssetsAsync([FromQuery]string tagNames, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Asset>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}, {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Asset>>(exampleJson)
                        : default(List<Asset>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets list of accounts that belong to this Asset
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetAssetAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetAssetAccountsAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a single Asset entity
        /// </summary>
        /// <param name="id">Unique ID of an Asset</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Asset does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetAssetByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(Asset), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetAssetByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Asset));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Asset>(exampleJson)
                        : default(Asset);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets list of directory accounts that this asset is dependent on
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/DependentAccounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetAssetDependentAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetAssetDependentAccountsAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets all effective owners of the specified asset
        /// </summary>
        /// <param name="id">Unique identifier of the asset</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/EffectiveManagedBy")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetAssetEffectiveManagedByAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<EffectiveIdentity>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetAssetEffectiveManagedByAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<EffectiveIdentity>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IdentityProviderId\" : 6,\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"DomainName\" : \"DomainName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"EmailAddress\" : \"EmailAddress\",\n  \"Name\" : \"Name\",\n  \"Direct\" : true,\n  \"PrincipalKind\" : \"Unknown\",\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"Id\" : 0,\n  \"IdentityProviderTypeReferenceName\" : \"Unknown\",\n  \"IsSystemOwned\" : true\n}, {\n  \"IdentityProviderId\" : 6,\n  \"ViaTags\" : [ {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetPartitionId\" : 5,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"Description\" : \"Description\",\n    \"AssetTaggingRule\" : {\n      \"RuleConditionGroup\" : {\n        \"Children\" : [ {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        }, {\n          \"TaggingGroupingCondition\" : {\n            \"CompareValue\" : \"CompareValue\",\n            \"CompareType\" : \"EqualTo\",\n            \"ObjectAttribute\" : \"Name\"\n          }\n        } ],\n        \"LogicalJoinType\" : \"And\"\n      },\n      \"Description\" : \"Description\",\n      \"Enabled\" : true\n    },\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"DomainName\" : \"DomainName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"EmailAddress\" : \"EmailAddress\",\n  \"Name\" : \"Name\",\n  \"Direct\" : true,\n  \"PrincipalKind\" : \"Unknown\",\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"Id\" : 0,\n  \"IdentityProviderTypeReferenceName\" : \"Unknown\",\n  \"IsSystemOwned\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<EffectiveIdentity>>(exampleJson)
                        : default(List<EffectiveIdentity>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets all owners of the specified asset
        /// </summary>
        /// <param name="id">Unique identifier of the asset</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/ManagedBy")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetAssetManagedByAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Identity>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetAssetManagedByAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Identity>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n}, {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Identity>>(exampleJson)
                        : default(List<Identity>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the SshHostKey identifying this asset
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/SshHostKey")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetAssetSshHostKeyAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetSshHostKey), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetAssetSshHostKeyAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetSshHostKey));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"Fingerprint\" : \"Fingerprint\",\n  \"SshHostKey\" : \"SshHostKey\",\n  \"FingerprintSha256\" : \"FingerprintSha256\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetSshHostKey>(exampleJson)
                        : default(AssetSshHostKey);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets an asset&#x27;s tags
        /// </summary>
        /// <param name="id">Unique identifier of the asset</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, in, (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Asset does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/Tags")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetAssetTagsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Tag>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetAssetTagsAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Tag>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"AdminAssigned\" : true,\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n}, {\n  \"Description\" : \"Description\",\n  \"AdminAssigned\" : true,\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Tag>>(exampleJson)
                        : default(List<Tag>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get default schema for directory provider
        /// </summary>
        /// <param name="platformType">Identity provider type name</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Platform not found</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/DefaultSchema/{platformType}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetDefaultSchema")]
        [SwaggerResponse(statusCode: 200, type: typeof(DefaultAssetLdapSchema), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetDefaultSchema([FromRoute][Required]PlatformType platformType)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DefaultAssetLdapSchema));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"DefaultSchema\" : {\n    \"UserProperties\" : {\n      \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n      \"UserNameAttribute\" : \"UserNameAttribute\",\n      \"DescriptionAttribute\" : \"DescriptionAttribute\",\n      \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n      \"PasswordAttribute\" : \"PasswordAttribute\",\n      \"MemberOfAttribute\" : \"MemberOfAttribute\"\n    },\n    \"ComputerProperties\" : {\n      \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n      \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n      \"DescriptionAttribute\" : \"DescriptionAttribute\",\n      \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n      \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n      \"NameAttribute\" : \"NameAttribute\",\n      \"MemberOfAttribute\" : \"MemberOfAttribute\"\n    },\n    \"GroupProperties\" : {\n      \"MemberAttribute\" : \"MemberAttribute\",\n      \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n      \"NameAttribute\" : \"NameAttribute\"\n    }\n  },\n  \"UserSchemaDescriptors\" : {\n    \"UserClassTypeDescriptor\" : {\n      \"ReadOnly\" : true,\n      \"Required\" : true\n    }\n  },\n  \"ComputerSchemaDescriptors\" : { },\n  \"GroupSchemaDescriptors\" : { }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<DefaultAssetLdapSchema>(exampleJson)
                        : default(DefaultAssetLdapSchema);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a discovered account
        /// </summary>
        /// <param name="id">Unique ID of a asset</param>
        /// <param name="accountName">Name of a DiscoveredAssetAccount</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Directory does not exist or DiscoveredAssetAccount does not belong to the given Directory</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/DiscoveredAccounts/{accountName}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetDiscoveredAccountAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(DiscoveredAssetAccount), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetDiscoveredAccountAsync([FromRoute][Required]int? id, [FromRoute][Required]string accountName, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DiscoveredAssetAccount));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"Status\" : \"None\",\n  \"AssetPartitionId\" : 6,\n  \"AccountDiscoveryScheduleId\" : 1,\n  \"DomainName\" : \"DomainName\",\n  \"DiscoveredUserId\" : \"DiscoveredUserId\",\n  \"DiscoveredGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"AssetId\" : 0,\n  \"RuleName\" : \"RuleName\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<DiscoveredAssetAccount>(exampleJson)
                        : default(DiscoveredAssetAccount);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets an asset&#x27;s discovered accounts
        /// </summary>
        /// <param name="id">Unique ID of an Asset</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Asset does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/DiscoveredAccounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetDiscoveredAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredAssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetDiscoveredAccountsAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredAssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Status\" : \"None\",\n  \"AssetPartitionId\" : 6,\n  \"AccountDiscoveryScheduleId\" : 1,\n  \"DomainName\" : \"DomainName\",\n  \"DiscoveredUserId\" : \"DiscoveredUserId\",\n  \"DiscoveredGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"AssetId\" : 0,\n  \"RuleName\" : \"RuleName\"\n}, {\n  \"Status\" : \"None\",\n  \"AssetPartitionId\" : 6,\n  \"AccountDiscoveryScheduleId\" : 1,\n  \"DomainName\" : \"DomainName\",\n  \"DiscoveredUserId\" : \"DiscoveredUserId\",\n  \"DiscoveredGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"AssetId\" : 0,\n  \"RuleName\" : \"RuleName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredAssetAccount>>(exampleJson)
                        : default(List<DiscoveredAssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets an asset&#x27;s discovered services
        /// </summary>
        /// <param name="id">Unique ID of an Asset</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Asset does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/DiscoveredServices")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetDiscoveredServicesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredService>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetDiscoveredServicesAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredService>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 0,\n  \"AccountId\" : 1,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"IsServiceEnabled\" : true,\n  \"IsDependentAccount\" : true,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"DiscoveredAccount\" : \"DiscoveredAccount\",\n  \"AssetName\" : \"AssetName\",\n  \"ServiceDisplayName\" : \"ServiceDisplayName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AccountStatus\" : \"None\",\n  \"ServiceName\" : \"ServiceName\",\n  \"ServiceType\" : \"Unknown\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"IsIgnored\" : true\n}, {\n  \"AssetPartitionId\" : 0,\n  \"AccountId\" : 1,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"IsServiceEnabled\" : true,\n  \"IsDependentAccount\" : true,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"DiscoveredAccount\" : \"DiscoveredAccount\",\n  \"AssetName\" : \"AssetName\",\n  \"ServiceDisplayName\" : \"ServiceDisplayName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AccountStatus\" : \"None\",\n  \"ServiceName\" : \"ServiceName\",\n  \"ServiceType\" : \"Unknown\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"IsIgnored\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredService>>(exampleJson)
                        : default(List<DiscoveredService>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Searches the specified directory
        /// </summary>
        /// <param name="id">Unique ID of an Asset</param>
        /// <param name="searchBase">Sets the searchBase for the Ldap query, defaults to base of the domain for ldap, or base of  forest for AD.  Must be in DN Syntax.</param>
        /// <param name="searchScope">Defines the scope of the query, either base, one, or sub, defaults to sub.</param>
        /// <param name="searchType">Either User, Group, or Computer.  Defaults to User.</param>
        /// <param name="searchName">Sets a search constraint on the \&quot;name\&quot; of the object to return.</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">IdentityProvider does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/DirectoryServiceEntries")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetEntriesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DirectoryServiceEntry>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetEntriesAsync([FromRoute][Required]int? id, [FromQuery]string searchBase, [FromQuery]SearchScope searchScope, [FromQuery]DirectorySearchType searchType, [FromQuery]string searchName, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DirectoryServiceEntry>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"Name\" : \"Name\"\n}, {\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DirectoryServiceEntry>>(exampleJson)
                        : default(List<DirectoryServiceEntry>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets platform information for specified asset
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/Platform")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsGetPlatformAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(Platform), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsGetPlatformAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Platform));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"Description\" : \"Description\",\n  \"Architecture\" : \"Architecture\",\n  \"DeviceClass\" : \"Unknown\",\n  \"ConnectionProperties\" : {\n    \"SupportsSslCertificateVerification\" : true,\n    \"SupportsNamedPipeForServiceAccountConnection\" : true,\n    \"SupportsPasswordAuthentication\" : true,\n    \"SupportsSshKeyAuthentication\" : true,\n    \"SupportsServiceName\" : true,\n    \"SupportsAccessKeyAuthentication\" : true,\n    \"SupportsLocalhostPasswordAuthentication\" : true,\n    \"RequiresDistinguishedName\" : true,\n    \"SupportsInstance\" : true,\n    \"SupportsOraclePrivileges\" : true,\n    \"SupportsDirectorySync\" : true,\n    \"SupportsClientId\" : true,\n    \"DefaultPort\" : 6,\n    \"SupportsDirectoryPasswordAuthentication\" : true,\n    \"SupportsWorkstationId\" : true,\n    \"SupportsTimeout\" : true,\n    \"SupportsPrivilegedAccount\" : true,\n    \"SupportsDirectoryAssetDiscovery\" : true,\n    \"SupportsLdap\" : true,\n    \"SupportsPrivilegeElevationCommand\" : true,\n    \"SupportsSslEncryption\" : true,\n    \"SupportsStarlingConnectAuthentication\" : true,\n    \"SupportsAccountPasswordAuthentication\" : true,\n    \"SupportsSshTransport\" : true,\n    \"SupportsTopSecretInterval\" : true,\n    \"DefaultSslPort\" : 7,\n    \"SupportsSslThumbprint\" : true,\n    \"AllowCustomPort\" : true,\n    \"SupportsEnablePassword\" : true,\n    \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n    \"SupportsTacacsSecret\" : true\n  },\n  \"IsAcctNameCaseSensitive\" : true,\n  \"PasswordFeatureProperties\" : {\n    \"SupportsPasswordManagement\" : true,\n    \"SupportsSshKeyManagement\" : true,\n    \"RequireNetworkAddress\" : true,\n    \"SupportsDependentSystemTasks\" : true,\n    \"AllowRequireCurrentPassword\" : true,\n    \"SupportsSuspendRestoreAccount\" : true,\n    \"SupportsAccountDiscovery\" : true,\n    \"SupportsServiceDiscovery\" : true,\n    \"SupportsUsePasswordHash\" : true\n  },\n  \"LicenseClass\" : \"System\",\n  \"CustomScriptProperties\" : {\n    \"Parameters\" : [ {\n      \"DefaultValue\" : \"DefaultValue\",\n      \"Type\" : \"String\",\n      \"Description\" : \"Description\",\n      \"Name\" : \"Name\"\n    }, {\n      \"DefaultValue\" : \"DefaultValue\",\n      \"Type\" : \"String\",\n      \"Description\" : \"Description\",\n      \"Name\" : \"Name\"\n    } ],\n    \"HasScript\" : true\n  },\n  \"Name\" : \"Name\",\n  \"Version\" : \"Version\",\n  \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n  \"SessionFeatureProperties\" : {\n    \"DefaultRemoteDesktopSessionPort\" : 4,\n    \"DefaultTelnetSessionPort\" : 5,\n    \"SupportsSessionManagement\" : true,\n    \"DefaultSshSessionPort\" : 1\n  },\n  \"PlatformFamily\" : \"None\",\n  \"DisplayName\" : \"DisplayName\",\n  \"Id\" : 0,\n  \"PlatformType\" : \"Unknown\",\n  \"IsSystemOwned\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Platform>(exampleJson)
                        : default(Platform);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Installs an SSH key for the service account
        /// </summary>
        /// <param name="body">Information about which asset to install an SSH key for the service account</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="201">Created</response>
        /// <response code="202">Accepted</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/InstallSshKey")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsInstallSshKeyAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(PasswordActivityLog), description: "Created")]
        [SwaggerResponse(statusCode: 202, type: typeof(PasswordActivityLog), description: "Accepted")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsInstallSshKeyAsync([FromBody]AssetInstallSshKeyParameters body, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 9,\n  \"ApplianceName\" : \"ApplianceName\",\n  \"AccountId\" : 5,\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"SyncGroupName\" : \"SyncGroupName\",\n  \"ProfileName\" : \"ProfileName\",\n  \"SshKeyFingerprint\" : \"SshKeyFingerprint\",\n  \"CustomScriptParameters\" : [ {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"SshKeyProfileId\" : 3,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"Name\" : \"Unknown\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"PlatformId\" : 1,\n  \"InstallSshKeyFingerprint\" : \"InstallSshKeyFingerprint\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"AssetPartitionId\" : 7,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"SshKeySyncGroupId\" : 2,\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n  \"EventName\" : \"Unknown\",\n  \"AccountDistinguishedName\" : \"AccountDistinguishedName\",\n  \"AssetName\" : \"AssetName\",\n  \"SyncGroupId\" : 5,\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"UserId\" : 0,\n  \"Id\" : \"Id\",\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"AccountNetBiosName\" : \"AccountNetBiosName\",\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordActivityLog>(exampleJson)
                        : default(PasswordActivityLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Installs an SSH key for the service account
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="body">Database ID of SSH Key to install (optional - will be generated if not specified). Also option to override existing asset connection settings.</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="201">Created</response>
        /// <response code="202">Accepted</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/{id}/InstallSshKey")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsInstallSshKeyByIdAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(PasswordActivityLog), description: "Created")]
        [SwaggerResponse(statusCode: 202, type: typeof(PasswordActivityLog), description: "Accepted")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsInstallSshKeyByIdAsync([FromRoute][Required]int? id, [FromBody]InstallSshKeyParameters body, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 9,\n  \"ApplianceName\" : \"ApplianceName\",\n  \"AccountId\" : 5,\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"SyncGroupName\" : \"SyncGroupName\",\n  \"ProfileName\" : \"ProfileName\",\n  \"SshKeyFingerprint\" : \"SshKeyFingerprint\",\n  \"CustomScriptParameters\" : [ {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"SshKeyProfileId\" : 3,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"Name\" : \"Unknown\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"PlatformId\" : 1,\n  \"InstallSshKeyFingerprint\" : \"InstallSshKeyFingerprint\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"AssetPartitionId\" : 7,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"SshKeySyncGroupId\" : 2,\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n  \"EventName\" : \"Unknown\",\n  \"AccountDistinguishedName\" : \"AccountDistinguishedName\",\n  \"AssetName\" : \"AssetName\",\n  \"SyncGroupId\" : 5,\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"UserId\" : 0,\n  \"Id\" : \"Id\",\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"AccountNetBiosName\" : \"AccountNetBiosName\",\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordActivityLog>(exampleJson)
                        : default(PasswordActivityLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add/Remove directory accounts running services on this asset
        /// </summary>
        /// <remarks>Only applicable to Windows (&#x27;win&#x27;) assets</remarks>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="operation">Operation to perform on the list</param>
        /// <param name="body">List of directory accounts to assign to this asset</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - &#x27;accounts&#x27; parameter was missing</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">AccountGroup does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/Assets/{id}/DependentAccounts/{operation}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsModifyAssetDependentAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60103 - &#x27;accounts&#x27; parameter was missing")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsModifyAssetDependentAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]ListOperation operation, [FromBody]List<AssetAccount> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add/Remove tags on this asset
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="operation">Operation to perform on the list</param>
        /// <param name="body">List of tags to assign to this asset</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - &#x27;tags&#x27; parameter was missing</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/{id}/Tags/{operation}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsModifyAssetTagsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Tag>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60103 - &#x27;tags&#x27; parameter was missing")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsModifyAssetTagsAsync([FromRoute][Required]int? id, [FromRoute][Required]ListOperation operation, [FromBody]List<Tag> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Tag>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"AdminAssigned\" : true,\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n}, {\n  \"Description\" : \"Description\",\n  \"AdminAssigned\" : true,\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Tag>>(exampleJson)
                        : default(List<Tag>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add/Remove assigned owners of this asset
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="operation">Operation to perform on the list</param>
        /// <param name="body">List of owners to assign to this asset</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - Invalid owners list provided</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/{id}/ManagedBy/{operation}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsModifyManagedByAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Identity>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60103 - Invalid owners list provided")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsModifyManagedByAsync([FromRoute][Required]int? id, [FromRoute][Required]ListOperation operation, [FromBody]List<Identity> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Identity>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n}, {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Identity>>(exampleJson)
                        : default(List<Identity>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Removes the ssh host id of this asset
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        [HttpDelete]
        [Route("/service/core/v4/Assets/{id}/SshHostKey")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsRemoveSshHostKeyAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsRemoveSshHostKeyAsync([FromRoute][Required]int? id)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Retrieve Ssh Host Key of the asset
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/{id}/RetrieveSshHostKey")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsRetrieveSshHostKeyByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetSshHostKey), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsRetrieveSshHostKeyByIdAsync([FromRoute][Required]int? id, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetSshHostKey));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"Fingerprint\" : \"Fingerprint\",\n  \"SshHostKey\" : \"SshHostKey\",\n  \"FingerprintSha256\" : \"FingerprintSha256\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetSshHostKey>(exampleJson)
                        : default(AssetSshHostKey);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Runs Discovery on the given asset
        /// </summary>
        /// <param name="id">id of the asset to run discovery on</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="201">Created</response>
        /// <response code="202">Accepted</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/{id}/DiscoverAccounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsRunDiscoveryAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(AccountDiscoveryLog), description: "Created")]
        [SwaggerResponse(statusCode: 202, type: typeof(AccountDiscoveryLog), description: "Accepted")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsRunDiscoveryAsync([FromRoute][Required]int? id, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(AccountDiscoveryLog));

            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(AccountDiscoveryLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 5,\n  \"AccountDiscoveryScheduleId\" : 5,\n  \"ApplianceName\" : \"ApplianceName\",\n  \"IsDirectory\" : true,\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ProfileName\" : \"ProfileName\",\n  \"CustomScriptParameters\" : [ {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"Name\" : \"Unknown\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"PlatformId\" : 6,\n  \"DiscoveredAccounts\" : [ {\n    \"Status\" : \"None\",\n    \"DomainName\" : \"DomainName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"Name\" : \"Name\"\n  }, {\n    \"Status\" : \"None\",\n    \"DomainName\" : \"DomainName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"Name\" : \"Name\"\n  } ],\n  \"InstallSshKeyFingerprint\" : \"InstallSshKeyFingerprint\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"AssetPartitionId\" : 1,\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"EventName\" : \"Unknown\",\n  \"AssetName\" : \"AssetName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"UserId\" : 2,\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"Id\" : \"Id\",\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 0,\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AccountDiscoveryLog>(exampleJson)
                        : default(AccountDiscoveryLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Runs Service Discovery on the given asset
        /// </summary>
        /// <param name="id">id of the asset to run service discovery on</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="201">Created</response>
        /// <response code="202">Accepted</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/{id}/DiscoverServices")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsRunServiceDiscoveryAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(ServiceDiscoveryLog), description: "Created")]
        [SwaggerResponse(statusCode: 202, type: typeof(ServiceDiscoveryLog), description: "Accepted")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsRunServiceDiscoveryAsync([FromRoute][Required]int? id, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(ServiceDiscoveryLog));

            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(ServiceDiscoveryLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 5,\n  \"AccountDiscoveryScheduleId\" : 5,\n  \"ApplianceName\" : \"ApplianceName\",\n  \"IsDirectory\" : true,\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ProfileName\" : \"ProfileName\",\n  \"CustomScriptParameters\" : [ {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"Name\" : \"Unknown\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"PlatformId\" : 6,\n  \"InstallSshKeyFingerprint\" : \"InstallSshKeyFingerprint\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"AssetPartitionId\" : 1,\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"DiscoveredServices\" : [ {\n    \"AccountAssetId\" : 9,\n    \"AccountId\" : 7,\n    \"ServiceName\" : \"ServiceName\",\n    \"ServiceType\" : \"Unknown\",\n    \"AccountAssetName\" : \"AccountAssetName\",\n    \"IsServiceEnabled\" : true,\n    \"AccountDomainName\" : \"AccountDomainName\",\n    \"DiscoveredAccount\" : \"DiscoveredAccount\",\n    \"ServiceDisplayName\" : \"ServiceDisplayName\",\n    \"AccountName\" : \"AccountName\"\n  }, {\n    \"AccountAssetId\" : 9,\n    \"AccountId\" : 7,\n    \"ServiceName\" : \"ServiceName\",\n    \"ServiceType\" : \"Unknown\",\n    \"AccountAssetName\" : \"AccountAssetName\",\n    \"IsServiceEnabled\" : true,\n    \"AccountDomainName\" : \"AccountDomainName\",\n    \"DiscoveredAccount\" : \"DiscoveredAccount\",\n    \"ServiceDisplayName\" : \"ServiceDisplayName\",\n    \"AccountName\" : \"AccountName\"\n  } ],\n  \"EventName\" : \"Unknown\",\n  \"AssetName\" : \"AssetName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"UserId\" : 2,\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"Id\" : \"Id\",\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 0,\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ServiceDiscoveryLog>(exampleJson)
                        : default(ServiceDiscoveryLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Searches the specified directory for User objects as DirectoryAccounts
        /// </summary>
        /// <param name="id">Unique ID of an Asset</param>
        /// <param name="searchBase">Sets the searchBase for the Ldap query, defaults to base of the domain for ldap, or base of  forest for AD.  Must be in DN Syntax.</param>
        /// <param name="searchScope">Defines the scope of the query, either base, one, or sub, defaults to sub.</param>
        /// <param name="searchName">Sets a search constraint on the \&quot;name\&quot; of the object to return.</param>
        /// <param name="includeGroups">Whether to look up directory group information</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">IdentityProvider does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/DirectoryAccounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsSearchDirectoryAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsSearchDirectoryAccountsAsync([FromRoute][Required]int? id, [FromQuery]string searchBase, [FromQuery]SearchScope searchScope, [FromQuery]string searchName, [FromQuery]bool? includeGroups, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Searches the specified directory for Computer objects as Assets
        /// </summary>
        /// <param name="id">Unique ID of an Asset</param>
        /// <param name="searchBase">Sets the searchBase for the Ldap query, defaults to base of the domain for ldap, or base of  forest for AD.  Must be in DN Syntax.</param>
        /// <param name="searchScope">Defines the scope of the query, either base, one, or sub, defaults to sub.</param>
        /// <param name="searchName">Sets a search constraint on the \&quot;name\&quot; of the object to return.</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">IdentityProvider does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/DirectoryAssets")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsSearchDirectoryAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Asset>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsSearchDirectoryAssetsAsync([FromRoute][Required]int? id, [FromQuery]string searchBase, [FromQuery]SearchScope searchScope, [FromQuery]string searchName, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Asset>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}, {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Asset>>(exampleJson)
                        : default(List<Asset>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates the set of directory accounts running services on this asset
        /// </summary>
        /// <remarks>Only applicable to Windows (&#x27;win&#x27;) assets</remarks>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="body">List of directory accounts to assign to this asset</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - Invalid directory account list provided</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPut]
        [Route("/service/core/v4/Assets/{id}/DependentAccounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsSetAssetDependentAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60103 - Invalid directory account list provided")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsSetAssetDependentAccountsAsync([FromRoute][Required]int? id, [FromBody]List<AssetAccount> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates the assigned owners of this asset
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="body">List of owners to assign to this asset</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - Invalid owners list provided</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPut]
        [Route("/service/core/v4/Assets/{id}/ManagedBy")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsSetAssetManagedByAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Identity>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60103 - Invalid owners list provided")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsSetAssetManagedByAsync([FromRoute][Required]int? id, [FromBody]List<Identity> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Identity>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n}, {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Identity>>(exampleJson)
                        : default(List<Identity>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates the ssh host id of this asset
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="body">SSH host id to assign to this asset</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - Invalid SshHostKey provided</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPut]
        [Route("/service/core/v4/Assets/{id}/SshHostKey")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsSetAssetSshHostKeyAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetSshHostKey), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60103 - Invalid SshHostKey provided")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsSetAssetSshHostKeyAsync([FromRoute][Required]int? id, [FromBody]AssetSshHostKey body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetSshHostKey));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"Fingerprint\" : \"Fingerprint\",\n  \"SshHostKey\" : \"SshHostKey\",\n  \"FingerprintSha256\" : \"FingerprintSha256\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetSshHostKey>(exampleJson)
                        : default(AssetSshHostKey);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Synchronize all directory related objects with the remote server
        /// </summary>
        /// <param name="id">Unique ID of asset</param>
        /// <param name="fullSync">Whether to sync all entities imported from this directory or just those that have been modified</param>
        /// <response code="201">Created</response>
        /// <response code="202">Accepted</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Directory not found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/{id}/Synchronize")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsSynchronizeAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(DirectorySyncActivityLog), description: "Created")]
        [SwaggerResponse(statusCode: 202, type: typeof(DirectorySyncActivityLog), description: "Accepted")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsSynchronizeAsync([FromRoute][Required]int? id, [FromQuery]bool? fullSync)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(DirectorySyncActivityLog));

            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(DirectorySyncActivityLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 5,\n  \"ApplianceName\" : \"ApplianceName\",\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"EventName\" : \"Unknown\",\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Unknown\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"UserId\" : 0,\n  \"PlatformId\" : 1,\n  \"Id\" : \"Id\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 6,\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<DirectorySyncActivityLog>(exampleJson)
                        : default(DirectorySyncActivityLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Tests the configured connection to this asset
        /// </summary>
        /// <param name="body">Information about which asset to test the connection with</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="201">Created</response>
        /// <response code="202">Accepted</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/TestConnection")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsTestConnectionAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(PasswordActivityLog), description: "Created")]
        [SwaggerResponse(statusCode: 202, type: typeof(PasswordActivityLog), description: "Accepted")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsTestConnectionAsync([FromBody]AssetTestConnectionParameters body, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 9,\n  \"ApplianceName\" : \"ApplianceName\",\n  \"AccountId\" : 5,\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"SyncGroupName\" : \"SyncGroupName\",\n  \"ProfileName\" : \"ProfileName\",\n  \"SshKeyFingerprint\" : \"SshKeyFingerprint\",\n  \"CustomScriptParameters\" : [ {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"SshKeyProfileId\" : 3,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"Name\" : \"Unknown\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"PlatformId\" : 1,\n  \"InstallSshKeyFingerprint\" : \"InstallSshKeyFingerprint\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"AssetPartitionId\" : 7,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"SshKeySyncGroupId\" : 2,\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n  \"EventName\" : \"Unknown\",\n  \"AccountDistinguishedName\" : \"AccountDistinguishedName\",\n  \"AssetName\" : \"AssetName\",\n  \"SyncGroupId\" : 5,\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"UserId\" : 0,\n  \"Id\" : \"Id\",\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"AccountNetBiosName\" : \"AccountNetBiosName\",\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordActivityLog>(exampleJson)
                        : default(PasswordActivityLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Tests the configured connection to this asset
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="body">Optionally override asset connection settings</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="201">Created</response>
        /// <response code="202">Accepted</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/{id}/TestConnection")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsTestConnectionByIdAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(PasswordActivityLog), description: "Created")]
        [SwaggerResponse(statusCode: 202, type: typeof(PasswordActivityLog), description: "Accepted")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsTestConnectionByIdAsync([FromRoute][Required]int? id, [FromBody]TestConnectionParameters body, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 9,\n  \"ApplianceName\" : \"ApplianceName\",\n  \"AccountId\" : 5,\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"SyncGroupName\" : \"SyncGroupName\",\n  \"ProfileName\" : \"ProfileName\",\n  \"SshKeyFingerprint\" : \"SshKeyFingerprint\",\n  \"CustomScriptParameters\" : [ {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"SshKeyProfileId\" : 3,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"Name\" : \"Unknown\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"PlatformId\" : 1,\n  \"InstallSshKeyFingerprint\" : \"InstallSshKeyFingerprint\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"AssetPartitionId\" : 7,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"SshKeySyncGroupId\" : 2,\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n  \"EventName\" : \"Unknown\",\n  \"AccountDistinguishedName\" : \"AccountDistinguishedName\",\n  \"AssetName\" : \"AssetName\",\n  \"SyncGroupId\" : 5,\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"UserId\" : 0,\n  \"Id\" : \"Id\",\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"AccountNetBiosName\" : \"AccountNetBiosName\",\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordActivityLog>(exampleJson)
                        : default(PasswordActivityLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Check which managed network the specified asset would be assigned to
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/Assets/{id}/EffectiveManagedNetwork")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsTestNetworkAddressAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetsTestNetworkAddressAsync([FromRoute][Required]int? id)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Updates an Asset
        /// </summary>
        /// <param name="id">Unique identifier of the Asset to update</param>
        /// <param name="body">Updated Asset</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/Assets/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsUpdateAssetAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(Asset), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsUpdateAssetAsync([FromRoute][Required]int? id, [FromBody]Asset body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Asset));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Asset>(exampleJson)
                        : default(Asset);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates an asset&#x27;s tags
        /// </summary>
        /// <param name="id">Unique identifier of the asset</param>
        /// <param name="body">List of tags to associate with the Asset</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/Assets/{id}/Tags")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsUpdateAssetTagsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Tag>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsUpdateAssetTagsAsync([FromRoute][Required]int? id, [FromBody]List<Tag> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Tag>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"AdminAssigned\" : true,\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n}, {\n  \"Description\" : \"Description\",\n  \"AdminAssigned\" : true,\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Tag>>(exampleJson)
                        : default(List<Tag>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update account password for services and tasks on this assets based on current profile settings
        /// </summary>
        /// <param name="id">Unique identifier of the Asset</param>
        /// <param name="body">Parameters needed to run platform task</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="201">Created</response>
        /// <response code="202">Accepted</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/{id}/UpdateDependentAsset")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsUpdateDependentServicesAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(PasswordActivityLog), description: "Created")]
        [SwaggerResponse(statusCode: 202, type: typeof(PasswordActivityLog), description: "Accepted")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsUpdateDependentServicesAsync([FromRoute][Required]int? id, [FromBody]UpdateDependentAssetParameters body, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 9,\n  \"ApplianceName\" : \"ApplianceName\",\n  \"AccountId\" : 5,\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"SyncGroupName\" : \"SyncGroupName\",\n  \"ProfileName\" : \"ProfileName\",\n  \"SshKeyFingerprint\" : \"SshKeyFingerprint\",\n  \"CustomScriptParameters\" : [ {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"SshKeyProfileId\" : 3,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"Name\" : \"Unknown\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"PlatformId\" : 1,\n  \"InstallSshKeyFingerprint\" : \"InstallSshKeyFingerprint\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"AssetPartitionId\" : 7,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"SshKeySyncGroupId\" : 2,\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n  \"EventName\" : \"Unknown\",\n  \"AccountDistinguishedName\" : \"AccountDistinguishedName\",\n  \"AssetName\" : \"AssetName\",\n  \"SyncGroupId\" : 5,\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"UserId\" : 0,\n  \"Id\" : \"Id\",\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"AccountNetBiosName\" : \"AccountNetBiosName\",\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordActivityLog>(exampleJson)
                        : default(PasswordActivityLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Processes multiple asset updates
        /// </summary>
        /// <param name="body">assets to process</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        [HttpPost]
        [Route("/service/core/v4/Assets/BatchUpdate")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetsUpdateMultipleAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetBatchResponse>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetsUpdateMultipleAssetsAsync([FromBody]List<Asset> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetBatchResponse>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"Response\" : {\n    \"AccountDiscoveryScheduleId\" : 6,\n    \"Description\" : \"Description\",\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"IsDirectory\" : true,\n    \"Platform\" : {\n      \"Description\" : \"Description\",\n      \"Architecture\" : \"Architecture\",\n      \"DeviceClass\" : \"Unknown\",\n      \"ConnectionProperties\" : {\n        \"SupportsSslCertificateVerification\" : true,\n        \"SupportsNamedPipeForServiceAccountConnection\" : true,\n        \"SupportsPasswordAuthentication\" : true,\n        \"SupportsSshKeyAuthentication\" : true,\n        \"SupportsServiceName\" : true,\n        \"SupportsAccessKeyAuthentication\" : true,\n        \"SupportsLocalhostPasswordAuthentication\" : true,\n        \"RequiresDistinguishedName\" : true,\n        \"SupportsInstance\" : true,\n        \"SupportsOraclePrivileges\" : true,\n        \"SupportsDirectorySync\" : true,\n        \"SupportsClientId\" : true,\n        \"DefaultPort\" : 6,\n        \"SupportsDirectoryPasswordAuthentication\" : true,\n        \"SupportsWorkstationId\" : true,\n        \"SupportsTimeout\" : true,\n        \"SupportsPrivilegedAccount\" : true,\n        \"SupportsDirectoryAssetDiscovery\" : true,\n        \"SupportsLdap\" : true,\n        \"SupportsPrivilegeElevationCommand\" : true,\n        \"SupportsSslEncryption\" : true,\n        \"SupportsStarlingConnectAuthentication\" : true,\n        \"SupportsAccountPasswordAuthentication\" : true,\n        \"SupportsSshTransport\" : true,\n        \"SupportsTopSecretInterval\" : true,\n        \"DefaultSslPort\" : 7,\n        \"SupportsSslThumbprint\" : true,\n        \"AllowCustomPort\" : true,\n        \"SupportsEnablePassword\" : true,\n        \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n        \"SupportsTacacsSecret\" : true\n      },\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PasswordFeatureProperties\" : {\n        \"SupportsPasswordManagement\" : true,\n        \"SupportsSshKeyManagement\" : true,\n        \"RequireNetworkAddress\" : true,\n        \"SupportsDependentSystemTasks\" : true,\n        \"AllowRequireCurrentPassword\" : true,\n        \"SupportsSuspendRestoreAccount\" : true,\n        \"SupportsAccountDiscovery\" : true,\n        \"SupportsServiceDiscovery\" : true,\n        \"SupportsUsePasswordHash\" : true\n      },\n      \"CustomScriptProperties\" : {\n        \"Parameters\" : [ {\n          \"DefaultValue\" : \"DefaultValue\",\n          \"Type\" : \"String\",\n          \"Description\" : \"Description\",\n          \"Name\" : \"Name\"\n        }, {\n          \"DefaultValue\" : \"DefaultValue\",\n          \"Type\" : \"String\",\n          \"Description\" : \"Description\",\n          \"Name\" : \"Name\"\n        } ],\n        \"HasScript\" : true\n      },\n      \"Name\" : \"Name\",\n      \"Version\" : \"Version\",\n      \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n      \"SessionFeatureProperties\" : {\n        \"DefaultRemoteDesktopSessionPort\" : 4,\n        \"DefaultTelnetSessionPort\" : 5,\n        \"SupportsSessionManagement\" : true,\n        \"DefaultSshSessionPort\" : 1\n      },\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"IsSystemOwned\" : true\n    },\n    \"ManagedNetworkName\" : \"ManagedNetworkName\",\n    \"DiscoveredDirectoryGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"RegisteredConnector\" : {\n      \"StarlingConnectorId\" : \"StarlingConnectorId\",\n      \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n      \"VisibleToPartitions\" : [ {\n        \"CreatedByUserId\" : 6,\n        \"Description\" : \"Description\",\n        \"ManagedBy\" : [ {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        }, {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        } ],\n        \"DefaultProfileName\" : \"DefaultProfileName\",\n        \"DefaultSshKeyProfileId\" : 5,\n        \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n        \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n        \"DefaultProfileId\" : 1,\n        \"Id\" : 0,\n        \"Name\" : \"Name\"\n      }, {\n        \"CreatedByUserId\" : 6,\n        \"Description\" : \"Description\",\n        \"ManagedBy\" : [ {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        }, {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        } ],\n        \"DefaultProfileName\" : \"DefaultProfileName\",\n        \"DefaultSshKeyProfileId\" : 5,\n        \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n        \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n        \"DefaultProfileId\" : 1,\n        \"Id\" : 0,\n        \"Name\" : \"Name\"\n      } ],\n      \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n      \"Id\" : 9,\n      \"VisibleToAllPartitions\" : true\n    },\n    \"CustomScriptParameters\" : [ {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    }, {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    } ],\n    \"LicenseClass\" : \"System\",\n    \"Name\" : \"Name\",\n    \"PasswordProfile\" : {\n      \"Id\" : 8,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"CreatedByUserId\" : 5,\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"ManagedNetworkId\" : 1,\n    \"TaskProperties\" : {\n      \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedAccountDiscoveryAttempts\" : 7,\n      \"FailedTestConnectionAttempts\" : 3,\n      \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n      \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"HasAssetTaskFailure\" : true,\n      \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n      \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n      \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedServiceDiscoveryAttempts\" : 9,\n      \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n      \"FailedDependentServiceUpdateAttempts\" : 2,\n      \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"PlatformId\" : 6,\n    \"Disabled\" : true,\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ],\n    \"AssetPartitionId\" : 5,\n    \"AssetDiscoveryJobId\" : 9,\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"DirectoryAssetProperties\" : {\n      \"FailedSyncAttempts\" : 1,\n      \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n      \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"DomainName\" : \"DomainName\",\n      \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"ForestRootDomain\" : \"ForestRootDomain\",\n      \"DomainControllers\" : [ {\n        \"ServerType\" : \"DomainController\",\n        \"IsWritable\" : true,\n        \"NetworkAddress\" : \"NetworkAddress\",\n        \"DomainName\" : \"DomainName\"\n      }, {\n        \"ServerType\" : \"DomainController\",\n        \"IsWritable\" : true,\n        \"NetworkAddress\" : \"NetworkAddress\",\n        \"DomainName\" : \"DomainName\"\n      } ],\n      \"UsePasswordHash\" : true,\n      \"SchemaProperties\" : {\n        \"UserProperties\" : {\n          \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n          \"UserNameAttribute\" : \"UserNameAttribute\",\n          \"DescriptionAttribute\" : \"DescriptionAttribute\",\n          \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n          \"PasswordAttribute\" : \"PasswordAttribute\",\n          \"MemberOfAttribute\" : \"MemberOfAttribute\"\n        },\n        \"ComputerProperties\" : {\n          \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n          \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n          \"DescriptionAttribute\" : \"DescriptionAttribute\",\n          \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n          \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n          \"NameAttribute\" : \"NameAttribute\",\n          \"MemberOfAttribute\" : \"MemberOfAttribute\"\n        },\n        \"GroupProperties\" : {\n          \"MemberAttribute\" : \"MemberAttribute\",\n          \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n          \"NameAttribute\" : \"NameAttribute\"\n        }\n      },\n      \"Domains\" : [ {\n        \"DomainName\" : \"DomainName\",\n        \"DomainUniqueId\" : \"DomainUniqueId\",\n        \"NetBiosName\" : \"NetBiosName\",\n        \"NamingContext\" : \"NamingContext\"\n      }, {\n        \"DomainName\" : \"DomainName\",\n        \"DomainUniqueId\" : \"DomainUniqueId\",\n        \"NetBiosName\" : \"NetBiosName\",\n        \"NamingContext\" : \"NamingContext\"\n      } ],\n      \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"DeleteSyncIntervalMinutes\" : 1586191969,\n      \"FailedDeleteSyncAttempts\" : 1,\n      \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"AllowSharedSearch\" : true,\n      \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"SynchronizationIntervalMinutes\" : 890262545,\n      \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n    },\n    \"ConnectionProperties\" : {\n      \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n      \"ServiceAccountSshKeyProfileId\" : 1,\n      \"ServiceAccountHasSshKey\" : true,\n      \"RegisteredConnectorId\" : 1,\n      \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n      \"UseNamedPipeForServiceAccountConnection\" : true,\n      \"Instance\" : \"Instance\",\n      \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n      \"Port\" : 48874,\n      \"ServiceAccountSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ServiceAccountId\" : 6,\n      \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n      \"HasSecretKey\" : true,\n      \"TacacsSecret\" : \"TacacsSecret\",\n      \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n      \"CommandTimeout\" : 13584,\n      \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n      \"EnablePassword\" : \"EnablePassword\",\n      \"WorkstationId\" : \"WorkstationId\",\n      \"SslThumbprint\" : \"SslThumbprint\",\n      \"EnableHasPassword\" : true,\n      \"ClientId\" : 737,\n      \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n      \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n      \"ServiceAccountCredentialType\" : \"None\",\n      \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n      \"ServiceAccountHasPassword\" : true,\n      \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n      \"UseSslEncryption\" : true,\n      \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n      \"HasTacacsSecret\" : true,\n      \"UseTopSecretInterval\" : true,\n      \"ServiceAccountName\" : \"ServiceAccountName\",\n      \"VerifySslCertificate\" : true,\n      \"OraclePrivileges\" : \"OraclePrivileges\",\n      \"SecretKey\" : \"SecretKey\",\n      \"ServiceAccountAssetPlatformId\" : 4,\n      \"ServiceAccountProfileId\" : 1,\n      \"ServiceName\" : \"ServiceName\",\n      \"AccessKeyId\" : \"AccessKeyId\",\n      \"ServiceAccountAssetId\" : 1,\n      \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n      \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n    },\n    \"SessionAccessProperties\" : {\n      \"RemoteDesktopSessionPort\" : 21975,\n      \"AllowSessionRequests\" : true,\n      \"TelnetSessionPort\" : 20275,\n      \"SshSessionPort\" : 43935\n    },\n    \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"SshHostKey\" : {\n      \"Fingerprint\" : \"Fingerprint\",\n      \"SshHostKey\" : \"SshHostKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\"\n    },\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 6,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"Id\" : 0\n  },\n  \"StatusCodeNumber\" : 0,\n  \"IsSuccess\" : true,\n  \"Error\" : {\n    \"Message\" : \"Message\",\n    \"Code\" : 6\n  },\n  \"StatusCode\" : \"Continue\"\n}, {\n  \"Response\" : {\n    \"AccountDiscoveryScheduleId\" : 6,\n    \"Description\" : \"Description\",\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"IsDirectory\" : true,\n    \"Platform\" : {\n      \"Description\" : \"Description\",\n      \"Architecture\" : \"Architecture\",\n      \"DeviceClass\" : \"Unknown\",\n      \"ConnectionProperties\" : {\n        \"SupportsSslCertificateVerification\" : true,\n        \"SupportsNamedPipeForServiceAccountConnection\" : true,\n        \"SupportsPasswordAuthentication\" : true,\n        \"SupportsSshKeyAuthentication\" : true,\n        \"SupportsServiceName\" : true,\n        \"SupportsAccessKeyAuthentication\" : true,\n        \"SupportsLocalhostPasswordAuthentication\" : true,\n        \"RequiresDistinguishedName\" : true,\n        \"SupportsInstance\" : true,\n        \"SupportsOraclePrivileges\" : true,\n        \"SupportsDirectorySync\" : true,\n        \"SupportsClientId\" : true,\n        \"DefaultPort\" : 6,\n        \"SupportsDirectoryPasswordAuthentication\" : true,\n        \"SupportsWorkstationId\" : true,\n        \"SupportsTimeout\" : true,\n        \"SupportsPrivilegedAccount\" : true,\n        \"SupportsDirectoryAssetDiscovery\" : true,\n        \"SupportsLdap\" : true,\n        \"SupportsPrivilegeElevationCommand\" : true,\n        \"SupportsSslEncryption\" : true,\n        \"SupportsStarlingConnectAuthentication\" : true,\n        \"SupportsAccountPasswordAuthentication\" : true,\n        \"SupportsSshTransport\" : true,\n        \"SupportsTopSecretInterval\" : true,\n        \"DefaultSslPort\" : 7,\n        \"SupportsSslThumbprint\" : true,\n        \"AllowCustomPort\" : true,\n        \"SupportsEnablePassword\" : true,\n        \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n        \"SupportsTacacsSecret\" : true\n      },\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PasswordFeatureProperties\" : {\n        \"SupportsPasswordManagement\" : true,\n        \"SupportsSshKeyManagement\" : true,\n        \"RequireNetworkAddress\" : true,\n        \"SupportsDependentSystemTasks\" : true,\n        \"AllowRequireCurrentPassword\" : true,\n        \"SupportsSuspendRestoreAccount\" : true,\n        \"SupportsAccountDiscovery\" : true,\n        \"SupportsServiceDiscovery\" : true,\n        \"SupportsUsePasswordHash\" : true\n      },\n      \"CustomScriptProperties\" : {\n        \"Parameters\" : [ {\n          \"DefaultValue\" : \"DefaultValue\",\n          \"Type\" : \"String\",\n          \"Description\" : \"Description\",\n          \"Name\" : \"Name\"\n        }, {\n          \"DefaultValue\" : \"DefaultValue\",\n          \"Type\" : \"String\",\n          \"Description\" : \"Description\",\n          \"Name\" : \"Name\"\n        } ],\n        \"HasScript\" : true\n      },\n      \"Name\" : \"Name\",\n      \"Version\" : \"Version\",\n      \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n      \"SessionFeatureProperties\" : {\n        \"DefaultRemoteDesktopSessionPort\" : 4,\n        \"DefaultTelnetSessionPort\" : 5,\n        \"SupportsSessionManagement\" : true,\n        \"DefaultSshSessionPort\" : 1\n      },\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"IsSystemOwned\" : true\n    },\n    \"ManagedNetworkName\" : \"ManagedNetworkName\",\n    \"DiscoveredDirectoryGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"RegisteredConnector\" : {\n      \"StarlingConnectorId\" : \"StarlingConnectorId\",\n      \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n      \"VisibleToPartitions\" : [ {\n        \"CreatedByUserId\" : 6,\n        \"Description\" : \"Description\",\n        \"ManagedBy\" : [ {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        }, {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        } ],\n        \"DefaultProfileName\" : \"DefaultProfileName\",\n        \"DefaultSshKeyProfileId\" : 5,\n        \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n        \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n        \"DefaultProfileId\" : 1,\n        \"Id\" : 0,\n        \"Name\" : \"Name\"\n      }, {\n        \"CreatedByUserId\" : 6,\n        \"Description\" : \"Description\",\n        \"ManagedBy\" : [ {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        }, {\n          \"IdentityProviderId\" : 4,\n          \"FullDisplayName\" : \"FullDisplayName\",\n          \"DomainName\" : \"DomainName\",\n          \"DisplayName\" : \"DisplayName\",\n          \"IdentityProviderName\" : \"IdentityProviderName\",\n          \"Id\" : 0,\n          \"EmailAddress\" : \"EmailAddress\",\n          \"IsSystemOwned\" : true,\n          \"Name\" : \"Name\"\n        } ],\n        \"DefaultProfileName\" : \"DefaultProfileName\",\n        \"DefaultSshKeyProfileId\" : 5,\n        \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n        \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n        \"DefaultProfileId\" : 1,\n        \"Id\" : 0,\n        \"Name\" : \"Name\"\n      } ],\n      \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n      \"Id\" : 9,\n      \"VisibleToAllPartitions\" : true\n    },\n    \"CustomScriptParameters\" : [ {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    }, {\n      \"Value\" : \"Value\",\n      \"Name\" : \"Name\"\n    } ],\n    \"LicenseClass\" : \"System\",\n    \"Name\" : \"Name\",\n    \"PasswordProfile\" : {\n      \"Id\" : 8,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"CreatedByUserId\" : 5,\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"ManagedNetworkId\" : 1,\n    \"TaskProperties\" : {\n      \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedAccountDiscoveryAttempts\" : 7,\n      \"FailedTestConnectionAttempts\" : 3,\n      \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n      \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"HasAssetTaskFailure\" : true,\n      \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n      \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n      \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedServiceDiscoveryAttempts\" : 9,\n      \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n      \"FailedDependentServiceUpdateAttempts\" : 2,\n      \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"PlatformId\" : 6,\n    \"Disabled\" : true,\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ],\n    \"AssetPartitionId\" : 5,\n    \"AssetDiscoveryJobId\" : 9,\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"DirectoryAssetProperties\" : {\n      \"FailedSyncAttempts\" : 1,\n      \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n      \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"DomainName\" : \"DomainName\",\n      \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"ForestRootDomain\" : \"ForestRootDomain\",\n      \"DomainControllers\" : [ {\n        \"ServerType\" : \"DomainController\",\n        \"IsWritable\" : true,\n        \"NetworkAddress\" : \"NetworkAddress\",\n        \"DomainName\" : \"DomainName\"\n      }, {\n        \"ServerType\" : \"DomainController\",\n        \"IsWritable\" : true,\n        \"NetworkAddress\" : \"NetworkAddress\",\n        \"DomainName\" : \"DomainName\"\n      } ],\n      \"UsePasswordHash\" : true,\n      \"SchemaProperties\" : {\n        \"UserProperties\" : {\n          \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n          \"UserNameAttribute\" : \"UserNameAttribute\",\n          \"DescriptionAttribute\" : \"DescriptionAttribute\",\n          \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n          \"PasswordAttribute\" : \"PasswordAttribute\",\n          \"MemberOfAttribute\" : \"MemberOfAttribute\"\n        },\n        \"ComputerProperties\" : {\n          \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n          \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n          \"DescriptionAttribute\" : \"DescriptionAttribute\",\n          \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n          \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n          \"NameAttribute\" : \"NameAttribute\",\n          \"MemberOfAttribute\" : \"MemberOfAttribute\"\n        },\n        \"GroupProperties\" : {\n          \"MemberAttribute\" : \"MemberAttribute\",\n          \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n          \"NameAttribute\" : \"NameAttribute\"\n        }\n      },\n      \"Domains\" : [ {\n        \"DomainName\" : \"DomainName\",\n        \"DomainUniqueId\" : \"DomainUniqueId\",\n        \"NetBiosName\" : \"NetBiosName\",\n        \"NamingContext\" : \"NamingContext\"\n      }, {\n        \"DomainName\" : \"DomainName\",\n        \"DomainUniqueId\" : \"DomainUniqueId\",\n        \"NetBiosName\" : \"NetBiosName\",\n        \"NamingContext\" : \"NamingContext\"\n      } ],\n      \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"DeleteSyncIntervalMinutes\" : 1586191969,\n      \"FailedDeleteSyncAttempts\" : 1,\n      \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"AllowSharedSearch\" : true,\n      \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"SynchronizationIntervalMinutes\" : 890262545,\n      \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n    },\n    \"ConnectionProperties\" : {\n      \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n      \"ServiceAccountSshKeyProfileId\" : 1,\n      \"ServiceAccountHasSshKey\" : true,\n      \"RegisteredConnectorId\" : 1,\n      \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n      \"UseNamedPipeForServiceAccountConnection\" : true,\n      \"Instance\" : \"Instance\",\n      \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n      \"Port\" : 48874,\n      \"ServiceAccountSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ServiceAccountId\" : 6,\n      \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n      \"HasSecretKey\" : true,\n      \"TacacsSecret\" : \"TacacsSecret\",\n      \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n      \"CommandTimeout\" : 13584,\n      \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n      \"EnablePassword\" : \"EnablePassword\",\n      \"WorkstationId\" : \"WorkstationId\",\n      \"SslThumbprint\" : \"SslThumbprint\",\n      \"EnableHasPassword\" : true,\n      \"ClientId\" : 737,\n      \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n      \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n      \"ServiceAccountCredentialType\" : \"None\",\n      \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n      \"ServiceAccountHasPassword\" : true,\n      \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n      \"UseSslEncryption\" : true,\n      \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n      \"HasTacacsSecret\" : true,\n      \"UseTopSecretInterval\" : true,\n      \"ServiceAccountName\" : \"ServiceAccountName\",\n      \"VerifySslCertificate\" : true,\n      \"OraclePrivileges\" : \"OraclePrivileges\",\n      \"SecretKey\" : \"SecretKey\",\n      \"ServiceAccountAssetPlatformId\" : 4,\n      \"ServiceAccountProfileId\" : 1,\n      \"ServiceName\" : \"ServiceName\",\n      \"AccessKeyId\" : \"AccessKeyId\",\n      \"ServiceAccountAssetId\" : 1,\n      \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n      \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n    },\n    \"SessionAccessProperties\" : {\n      \"RemoteDesktopSessionPort\" : 21975,\n      \"AllowSessionRequests\" : true,\n      \"TelnetSessionPort\" : 20275,\n      \"SshSessionPort\" : 43935\n    },\n    \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"SshHostKey\" : {\n      \"Fingerprint\" : \"Fingerprint\",\n      \"SshHostKey\" : \"SshHostKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\"\n    },\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 6,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"Id\" : 0\n  },\n  \"StatusCodeNumber\" : 0,\n  \"IsSuccess\" : true,\n  \"Error\" : {\n    \"Message\" : \"Message\",\n    \"Code\" : 6\n  },\n  \"StatusCode\" : \"Continue\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetBatchResponse>>(exampleJson)
                        : default(List<AssetBatchResponse>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
