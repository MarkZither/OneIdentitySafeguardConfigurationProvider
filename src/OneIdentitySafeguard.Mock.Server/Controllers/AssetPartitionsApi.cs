/*
 * Safeguard Core API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using OneIdentitySafeguard.Mock.Server.Attributes;
using OneIdentitySafeguard.Mock.Server.Security;
using Microsoft.AspNetCore.Authorization;
using OneIdentitySafeguard.Mock.Server.Models;

namespace OneIdentitySafeguard.Mock.Server.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AssetPartitionsApiController : ControllerBase
    { 
        /// <summary>
        /// Checks if the current name is unique prior to create/update
        /// </summary>
        /// <param name="id">Unique identifier of the AssetPartition</param>
        /// <param name="body">Parameters for checking for unique name</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/CheckUniqueProfileName")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCheckUniqueProfileNameAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(bool?), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCheckUniqueProfileNameAsync([FromRoute][Required]int? id, [FromBody]UniqueNameParameters body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(bool?));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "true";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<bool?>(exampleJson)
                        : default(bool?);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Checks if the current name is unique prior to create/update
        /// </summary>
        /// <param name="id">Unique identifier of the AssetPartition</param>
        /// <param name="body">Parameters for checking for unique name</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/CheckUniqueSshKeyProfileName")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCheckUniqueSshKeyProfileNameAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(bool?), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCheckUniqueSshKeyProfileNameAsync([FromRoute][Required]int? id, [FromBody]UniqueNameParameters body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(bool?));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "true";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<bool?>(exampleJson)
                        : default(bool?);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a new PartitionProfileAccountDiscoverySchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="body">PartitionProfileAccountDiscoverySchedule to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Failed to save PartitionProfileAccountDiscoverySchedule</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/AccountDiscoverySchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreateAccountDiscoveryAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(AccountDiscoverySchedule), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCreateAccountDiscoveryAsync([FromRoute][Required]int? id, [FromBody]AccountDiscoverySchedule body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(AccountDiscoverySchedule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 21,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 22,\n  \"DiscoveryType\" : \"Directory\",\n  \"DirectoryName\" : \"DirectoryName\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"AutoConfigureDependentSystems\" : true,\n  \"DirectoryId\" : 6,\n  \"AccountDiscoveryRules\" : [ {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  }, {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  } ],\n  \"AssetsCount\" : 1,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"ScheduleDiscoverServices\" : true,\n  \"RepeatInterval\" : 494379917\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AccountDiscoverySchedule>(exampleJson)
                        : default(AccountDiscoverySchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Adds a new AssetPartition
        /// </summary>
        /// <param name="body">AssetPartition to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">60245 - AssetPartition was null</response>
        /// <response code="403">Must have AssetAdmin permission</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreateAssetPartitionAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(AssetPartition), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60245 - AssetPartition was null")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin permission")]
        public virtual IActionResult AssetPartitionsCreateAssetPartitionAsync([FromBody]AssetPartition body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(AssetPartition));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"CreatedByUserId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"DefaultProfileName\" : \"DefaultProfileName\",\n  \"DefaultSshKeyProfileId\" : 5,\n  \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"DefaultProfileId\" : 1,\n  \"Id\" : 0,\n  \"Name\" : \"Name\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetPartition>(exampleJson)
                        : default(AssetPartition);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Adds a new PartitionProfileChangeSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="body">The entity to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/ChangeSchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreateChangeScheduleAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(PasswordChangeSchedule), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCreateChangeScheduleAsync([FromRoute][Required]int? id, [FromBody]PasswordChangeSchedule body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(PasswordChangeSchedule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"RescheduleForUnscheduledPasswordUpdate\" : true,\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"UpdateComPlusOnPasswordChange\" : true,\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"RequireCurrentPassword\" : true,\n  \"UpdateIisPoolsOnPasswordChange\" : true,\n  \"UpdateWindowsServiceOnPasswordChange\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 41,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"UpdateWindowsTasksOnPasswordChange\" : true,\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"RestartWindowsServiceOnPasswordChange\" : true,\n  \"NotifyOwnersOnly\" : true,\n  \"AllowPasswordChangeWhenReleased\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordChangeSchedule>(exampleJson)
                        : default(PasswordChangeSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Adds a new PartitionProfileCheckSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="body">PartitionProfileCheckSchedule to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/CheckSchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreateCheckScheduleAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(PasswordCheckSchedule), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCreateCheckScheduleAsync([FromRoute][Required]int? id, [FromBody]PasswordCheckSchedule body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(PasswordCheckSchedule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"ResetPasswordOnMismatch\" : true,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordCheckSchedule>(exampleJson)
                        : default(PasswordCheckSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates an asset discovery job
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="body">AssetDiscoveryJob to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveryJobs")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreateDiscoveryJobAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(AssetDiscoveryJob), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCreateDiscoveryJobAsync([FromRoute][Required]int? id, [FromBody]AssetDiscoveryJob body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(AssetDiscoveryJob));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"DirectoryDiscoveryProperties\" : {\n    \"DirectoryId\" : 5,\n    \"DirectoryPlatformDisplayName\" : \"DirectoryPlatformDisplayName\",\n    \"DirectoryPlatformType\" : \"Unknown\",\n    \"DirectoryPlatformId\" : 5,\n    \"DirectoryNetworkAddress\" : \"DirectoryNetworkAddress\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"TaskProperties\" : {\n    \"FailedAssetDiscoveryAttempts\" : 6,\n    \"NextAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasTaskFailure\" : true,\n    \"LastSuccessAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAssetDiscoveryTaskId\" : \"LastAssetDiscoveryTaskId\",\n    \"LastAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"DiscoveryType\" : \"Directory\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"NetworkDiscoveryProperties\" : {\n    \"ScanOptions\" : {\n      \"ScanTimeout\" : 2,\n      \"OsFingerPrint\" : false\n    },\n    \"ScanRules\" : [ {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    }, {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    } ]\n  },\n  \"Rules\" : [ {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  } ],\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1210617418\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetDiscoveryJob>(exampleJson)
                        : default(AssetDiscoveryJob);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a new password rule
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="body">AccountGroup to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/PasswordRules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreatePasswordRuleAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(AccountPasswordRule), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCreatePasswordRuleAsync([FromRoute][Required]int? id, [FromBody]AccountPasswordRule body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(AccountPasswordRule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AllowedFirstCharacterType\" : \"All\",\n  \"Description\" : \"Description\",\n  \"AllowLowercaseCharacters\" : true,\n  \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n  \"NonAlphaNumericRestrictionType\" : \"Include\",\n  \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n  \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n  \"MinNumericCharacters\" : 51,\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n  \"CreatedByUserId\" : 1,\n  \"MaxConsecutiveUppercaseCharacters\" : 180,\n  \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n  \"AssetPartitionId\" : 6,\n  \"MaxConsecutiveLowercaseCharacters\" : 92,\n  \"MaxConsecutiveAlphabeticCharacters\" : 27,\n  \"MaxConsecutiveNumericCharacters\" : 106,\n  \"MinCharacters\" : 145,\n  \"MinLowercaseCharacters\" : 237,\n  \"AllowNonAlphaNumericCharacters\" : false,\n  \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n  \"AllowNumericCharacters\" : true,\n  \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n  \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n  \"AllowUppercaseCharacters\" : true,\n  \"MinUppercaseCharacters\" : 58,\n  \"MaxCharacters\" : 153,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 0,\n  \"MinNonAlphaNumericCharacters\" : 188,\n  \"IsSystemOwned\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AccountPasswordRule>(exampleJson)
                        : default(AccountPasswordRule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a new asset configuration profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="body">PartitionProfile to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Failed to save partition profile</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreateProfileAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(PasswordProfile), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCreateProfileAsync([FromRoute][Required]int? id, [FromBody]PasswordProfile body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(PasswordProfile));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"AccountPasswordRule\" : {\n    \"AllowedFirstCharacterType\" : \"All\",\n    \"Description\" : \"Description\",\n    \"AllowLowercaseCharacters\" : true,\n    \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n    \"NonAlphaNumericRestrictionType\" : \"Include\",\n    \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n    \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n    \"MinNumericCharacters\" : 51,\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n    \"CreatedByUserId\" : 1,\n    \"MaxConsecutiveUppercaseCharacters\" : 180,\n    \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n    \"AssetPartitionId\" : 6,\n    \"MaxConsecutiveLowercaseCharacters\" : 92,\n    \"MaxConsecutiveAlphabeticCharacters\" : 27,\n    \"MaxConsecutiveNumericCharacters\" : 106,\n    \"MinCharacters\" : 145,\n    \"MinLowercaseCharacters\" : 237,\n    \"AllowNonAlphaNumericCharacters\" : false,\n    \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n    \"AllowNumericCharacters\" : true,\n    \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n    \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n    \"AllowUppercaseCharacters\" : true,\n    \"MinUppercaseCharacters\" : 58,\n    \"MaxCharacters\" : 153,\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 0,\n    \"MinNonAlphaNumericCharacters\" : 188,\n    \"IsSystemOwned\" : true\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"AccountPasswordRuleName\" : \"AccountPasswordRuleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"ResetPasswordOnMismatch\" : true,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"RescheduleForUnscheduledPasswordUpdate\" : true,\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"UpdateComPlusOnPasswordChange\" : true,\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"RequireCurrentPassword\" : true,\n    \"UpdateIisPoolsOnPasswordChange\" : true,\n    \"UpdateWindowsServiceOnPasswordChange\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 41,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"UpdateWindowsTasksOnPasswordChange\" : true,\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"RestartWindowsServiceOnPasswordChange\" : true,\n    \"NotifyOwnersOnly\" : true,\n    \"AllowPasswordChangeWhenReleased\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"CheckScheduleId\" : 5,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0,\n  \"AccountPasswordRuleId\" : 1\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordProfile>(exampleJson)
                        : default(PasswordProfile);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Adds a new SshKeyChangeSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="body">The entity to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyChangeSchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreateSshKeyChangeScheduleAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(SshKeyChangeSchedule), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCreateSshKeyChangeScheduleAsync([FromRoute][Required]int? id, [FromBody]SshKeyChangeSchedule body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(SshKeyChangeSchedule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"GeneratedKeyLength\" : 6,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"GeneratedKeyType\" : \"Unknown\",\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"NotifyOwnersOnly\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"AllowSshKeyChangeWhenReleased\" : true,\n  \"RepeatInterval\" : 1210617418\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyChangeSchedule>(exampleJson)
                        : default(SshKeyChangeSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Adds a new SshKeyCheckSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="body">SshKeyCheckSchedule to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyCheckSchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreateSshKeyCheckScheduleAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(SshKeyCheckSchedule), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCreateSshKeyCheckScheduleAsync([FromRoute][Required]int? id, [FromBody]SshKeyCheckSchedule body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(SshKeyCheckSchedule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"ResetSshKeyOnMismatch\" : true,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyCheckSchedule>(exampleJson)
                        : default(SshKeyCheckSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Adds a new SshKeyDiscoverySchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="body">The entity to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyDiscoverySchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreateSshKeyDiscoveryScheduleAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(SshKeyDiscoverySchedule), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCreateSshKeyDiscoveryScheduleAsync([FromRoute][Required]int? id, [FromBody]SshKeyDiscoverySchedule body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(SshKeyDiscoverySchedule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 21,\n  \"Description\" : \"Description\",\n  \"ProfilesCount\" : 6,\n  \"StartHour\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"AccountsCount\" : 1,\n  \"RepeatDayOfMonth\" : 22,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 494379917\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyDiscoverySchedule>(exampleJson)
                        : default(SshKeyDiscoverySchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a new SSH key profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="body">SshKeyProfile to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Failed to save partition profile</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreateSshKeyProfileAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(SshKeyProfile), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCreateSshKeyProfileAsync([FromRoute][Required]int? id, [FromBody]SshKeyProfile body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(SshKeyProfile));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"DiscoverySchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 21,\n    \"Description\" : \"Description\",\n    \"ProfilesCount\" : 6,\n    \"StartHour\" : 21,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"AccountsCount\" : 1,\n    \"RepeatDayOfMonth\" : 22,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 5,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 494379917\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"ResetSshKeyOnMismatch\" : true,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 16,\n    \"GeneratedKeyLength\" : 6,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"RepeatDayOfMonth\" : 7,\n    \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 54,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"GeneratedKeyType\" : \"Unknown\",\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"NotifyOwnersOnly\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 1,\n    \"TimeOfDayType\" : \"Instant\",\n    \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"AllowSshKeyChangeWhenReleased\" : true,\n    \"RepeatInterval\" : 1210617418\n  },\n  \"Owners\" : [ {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  }, {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"DiscoveryScheduleId\" : 5,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"DiscoveryScheduleName\" : \"DiscoveryScheduleName\",\n  \"CheckScheduleId\" : 1,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyProfile>(exampleJson)
                        : default(SshKeyProfile);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a new profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="body">SshKeySyncGroup to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Failed to save partition profile</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/SshKeySyncGroups")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreateSshKeySyncGroupAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(SshKeySyncGroup), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCreateSshKeySyncGroupAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromBody]SshKeySyncGroup body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(SshKeySyncGroup));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeySyncGroup>(exampleJson)
                        : default(SshKeySyncGroup);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a new profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="body">PasswordSyncGroup to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Failed to save partition profile</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/SyncGroups")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreateSyncGroupAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(PasswordSyncGroup), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCreateSyncGroupAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromBody]PasswordSyncGroup body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(PasswordSyncGroup));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordSyncGroup>(exampleJson)
                        : default(PasswordSyncGroup);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a new partition tag
        /// </summary>
        /// <param name="id">Unique ID of partition</param>
        /// <param name="body">Tag to create</param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset Partition not found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/Tags")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsCreateTagAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(PartitionTag), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsCreateTagAsync([FromRoute][Required]int? id, [FromBody]PartitionTag body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(PartitionTag));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 5,\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"Description\" : \"Description\",\n  \"AssetTaggingRule\" : {\n    \"RuleConditionGroup\" : {\n      \"Children\" : [ {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      }, {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      } ],\n      \"LogicalJoinType\" : \"And\"\n    },\n    \"Description\" : \"Description\",\n    \"Enabled\" : true\n  },\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PartitionTag>(exampleJson)
                        : default(PartitionTag);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Removes a PartitionProfileAccountDiscoverySchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the PartitionProfileAccountDiscoverySchedule</param>
        /// <param name="forceDelete">Include &#x27;X-Force-Delete&#x27; HTTP header or this query string parameter set to true to force delete despite dependencies when given 50104  error</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/AccountDiscoverySchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteAccountDiscoveryAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteAccountDiscoveryAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]bool? forceDelete)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Deletes all SSH keys discovered for a specific account
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="accountId">Unique ID of an account</param>
        /// <response code="200">Success</response>
        /// <response code="204">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredSshKey does not belong to the given AssetPartition</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredSshKeys/{assetId}/{accountId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteAssetAccountDiscoveredSshKeysAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteAssetAccountDiscoveredSshKeysAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromRoute][Required]int? accountId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Marks all asset discovered account as deleted
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <response code="200">Success</response>
        /// <response code="204">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset does not exist or DiscoveredAssetAccount does not belong to the given asset</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredAccounts/{assetId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteAssetDiscoveredAccountsAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteAssetDiscoveredAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Deletes all services discovered for a specific asset
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <response code="200">Success</response>
        /// <response code="204">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredService does not belong to the given AssetPartition</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredServices/{assetId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteAssetDiscoveredServicesAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteAssetDiscoveredServicesAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Deletes all SSH keys discovered for a specific asset
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <response code="200">Success</response>
        /// <response code="204">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredSshKey does not belong to the given AssetPartition</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredSshKeys/{assetId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteAssetDiscoveredSshKeysAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteAssetDiscoveredSshKeysAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Removes an AssetPartition
        /// </summary>
        /// <param name="id">Unique identifier of the AssetPartition to remove</param>
        /// <param name="failoverPartitionId">Database ID of the partition that assets should be moved to</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin permission</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteAssetPartitionAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteAssetPartitionAsync([FromRoute][Required]int? id, [FromQuery]int? failoverPartitionId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Removes a PartitionProfileChangeSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the PartitionProfileChangeSchedule to remove</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/ChangeSchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteChangeScheduleAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteChangeScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Removes a PartitionProfileCheckSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the PartitionProfileCheckSchedule to remove</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/CheckSchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteCheckScheduleAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteCheckScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Marks a discovered account as deleted
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="serviceName">Name of a discovered account. For directory accounts you must also specify the domain name e.g., {accountName}@{domainName}</param>
        /// <response code="200">Success</response>
        /// <response code="204">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredService does not belong to the given AssetPartition</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredServices/{assetId}/{serviceName}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteDiscoveredServiceAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteDiscoveredServiceAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromRoute][Required]string serviceName)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Marks a discovered SSH key as deleted
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="accountId">Unique ID of an account</param>
        /// <param name="fingerprint">MD5 fingerprint of the SSH key</param>
        /// <response code="204">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredSshKey does not belong to the given AssetPartition</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredSshKeys/{assetId}/{accountId}/{fingerprint}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteDiscoveredSshKeyAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteDiscoveredSshKeyAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromRoute][Required]int? accountId, [FromRoute][Required]string fingerprint)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Removes an asset discovery job
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="jobId">Unique identifier of the AssetDiscoveryJob</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveryJobs/{jobId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteDiscoveryJobAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteDiscoveryJobAsync([FromRoute][Required]int? id, [FromRoute][Required]int? jobId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Marks a discovered account as deleted
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="accountName">Name of a discovered account. For directory accounts you must also specify the domain name e.g., {accountName}@{domainName}</param>
        /// <response code="200">Success</response>
        /// <response code="204">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredAssetAccount does not belong to the given AssetPartition</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredAccounts/{assetId}/{accountName}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeletePartitionDiscoveredAccountAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeletePartitionDiscoveredAccountAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromRoute][Required]string accountName)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Marks all partition discovered accounts as deleted
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <response code="200">Success</response>
        /// <response code="204">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredAccounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeletePartitionDiscoveredAccountsAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeletePartitionDiscoveredAccountsAsync([FromRoute][Required]int? id)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Deletes all services discovered for a specific partition
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <response code="200">Success</response>
        /// <response code="204">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredService does not belong to the given AssetPartition</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredServices")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeletePartitionDiscoveredServicesAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeletePartitionDiscoveredServicesAsync([FromRoute][Required]int? id)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Deletes all SSH keys discovered for a specific partition
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <response code="200">Success</response>
        /// <response code="204">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredSshKey does not belong to the given AssetPartition</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredSshKeys")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeletePartitionDiscoveredSshKeysAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeletePartitionDiscoveredSshKeysAsync([FromRoute][Required]int? id)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Removes a password rule
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="ruleId">Unique identifier of the PartitionAccountPasswordRule to remove</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="400">50104 - Specified password rule is referenced by active profile. Use &#x27;X-Force-Delete&#x27; header to force deletion.</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/PasswordRules/{ruleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeletePasswordRuleAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeletePasswordRuleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? ruleId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Removes an application asset configuration profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the PartitionProfile</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteProfileAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteProfileAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Removes a SshKeyChangeSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the SshKeyChangeSchedule to remove</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyChangeSchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteSshKeyChangeScheduleAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteSshKeyChangeScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Removes a SshKeyCheckSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the SshKeyCheckSchedule to remove</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyCheckSchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteSshKeyCheckScheduleAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteSshKeyCheckScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Removes a SshKeyDiscoverySchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the SshKeyDiscoverySchedule to remove</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyDiscoverySchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteSshKeyDiscoveryScheduleAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteSshKeyDiscoveryScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Removes an application asset configuration SSH key profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the SshKeyProfile</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteSshKeyProfileAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteSshKeyProfileAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Removes a profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/SshKeySyncGroups/{syncGroupId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteSshKeySyncGroupAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteSshKeySyncGroupAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Removes a profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/SyncGroups/{syncGroupId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteSyncGroupAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteSyncGroupAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Removes a partition tag
        /// </summary>
        /// <param name="id">Unique ID of the partition</param>
        /// <param name="tagId">Unique identifier of the tag</param>
        /// <param name="forceDelete">Include &#x27;X-Force-Delete&#x27; HTTP header or this query string parameter set to true to force delete despite dependencies when given 50104  error</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="400">50104 - Specified tag is referenced by something. Use &#x27;X-Force-Delete&#x27; header to  force deletion.</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/service/core/v4/AssetPartitions/{id}/Tags/{tagId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDeleteTagAsync")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDeleteTagAsync([FromRoute][Required]int? id, [FromRoute][Required]int? tagId, [FromQuery]bool? forceDelete)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Disables an existing profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/SshKeySyncGroups/{syncGroupId}/Disable")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDisableSshKeySyncGroupAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeySyncGroup), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDisableSshKeySyncGroupAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeySyncGroup));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeySyncGroup>(exampleJson)
                        : default(SshKeySyncGroup);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Disables an existing profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/SyncGroups/{syncGroupId}/Disable")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsDisableSyncGroupAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordSyncGroup), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsDisableSyncGroupAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordSyncGroup));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordSyncGroup>(exampleJson)
                        : default(PasswordSyncGroup);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Enables an existing profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/SshKeySyncGroups/{syncGroupId}/Enable")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsEnableSshKeySyncGroupAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeySyncGroup), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsEnableSshKeySyncGroupAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeySyncGroup));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeySyncGroup>(exampleJson)
                        : default(SshKeySyncGroup);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Enables an existing profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/SyncGroups/{syncGroupId}/Enable")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsEnableSyncGroupAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordSyncGroup), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsEnableSyncGroupAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordSyncGroup));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordSyncGroup>(exampleJson)
                        : default(PasswordSyncGroup);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a random password using this rule
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Generated password was not found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/PasswordRules/GeneratePassword")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGeneratePasswordFromCustomRuleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsGeneratePasswordFromCustomRuleAsync([FromBody]AccountPasswordRule body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "\"\"";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<string>(exampleJson)
                        : default(string);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Generates a random password using this rule
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="ruleId">Unique identifier of the PartitionAccountPasswordRule to generate password from</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Generated password was not found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/PasswordRules/{ruleId}/GeneratePassword")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGeneratePasswordFromRuleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsGeneratePasswordFromRuleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? ruleId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "\"\"";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<string>(exampleJson)
                        : default(string);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets assets that the specified schedule is assigned to
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the profile schedule</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">profile schedule not found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/AccountDiscoverySchedules/{scheduleId}/Assets")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAccountDiscoveryAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Asset>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAccountDiscoveryAssetsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Asset>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}, {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Asset>>(exampleJson)
                        : default(List<Asset>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets account discovery rules from an existing profile schedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the profile schedule</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">profile schedule not found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/AccountDiscoverySchedules/{scheduleId}/Rules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAccountDiscoveryRulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AccountDiscoveryRule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAccountDiscoveryRulesAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AccountDiscoveryRule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"UnixAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"GroupFilter\" : \"GroupFilter\",\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n      \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"AutoManageDiscoveredAccounts\" : true,\n  \"DirectoryAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n      \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n      \"GroupFilter\" : \"GroupFilter\",\n      \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n    },\n    \"SearchName\" : \"SearchName\",\n    \"Groups\" : [ \"Groups\", \"Groups\" ],\n    \"SearchScope\" : \"OneLevel\",\n    \"SearchBase\" : \"SearchBase\",\n    \"SearchNameType\" : \"StartsWith\",\n    \"RuleType\" : \"Name\",\n    \"LdapFilter\" : \"LdapFilter\"\n  },\n  \"StarlingConnectAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"GroupFilter\" : \"GroupFilter\",\n      \"RoleFilter\" : \"RoleFilter\"\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"WindowsAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n      \"GroupFilter\" : \"GroupFilter\",\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"Name\" : \"Name\",\n  \"AccountTemplate\" : {\n    \"ProfileId\" : 0,\n    \"SshKeyProfileName\" : \"SshKeyProfileName\",\n    \"InitialPassword\" : \"InitialPassword\",\n    \"SshKeySyncGroupPriority\" : 2,\n    \"Description\" : \"Description\",\n    \"AllowSessionRelease\" : true,\n    \"SshKeySyncGroupId\" : 5,\n    \"SyncGroupName\" : \"SyncGroupName\",\n    \"InitialSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ProfileName\" : \"ProfileName\",\n    \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n    \"SharedServiceAccount\" : false,\n    \"SshKeyProfileId\" : 6,\n    \"AllowPasswordRelease\" : true,\n    \"HasInitialPassword\" : true,\n    \"AllowSshKeyRelease\" : true,\n    \"SyncGroupId\" : 1,\n    \"SetInitialSshKey\" : true,\n    \"SetInitialPassword\" : true,\n    \"SyncGroupPriority\" : 5,\n    \"HasInitialSshKey\" : true,\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ]\n  }\n}, {\n  \"UnixAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"GroupFilter\" : \"GroupFilter\",\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n      \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"AutoManageDiscoveredAccounts\" : true,\n  \"DirectoryAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n      \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n      \"GroupFilter\" : \"GroupFilter\",\n      \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n    },\n    \"SearchName\" : \"SearchName\",\n    \"Groups\" : [ \"Groups\", \"Groups\" ],\n    \"SearchScope\" : \"OneLevel\",\n    \"SearchBase\" : \"SearchBase\",\n    \"SearchNameType\" : \"StartsWith\",\n    \"RuleType\" : \"Name\",\n    \"LdapFilter\" : \"LdapFilter\"\n  },\n  \"StarlingConnectAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"GroupFilter\" : \"GroupFilter\",\n      \"RoleFilter\" : \"RoleFilter\"\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"WindowsAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n      \"GroupFilter\" : \"GroupFilter\",\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"Name\" : \"Name\",\n  \"AccountTemplate\" : {\n    \"ProfileId\" : 0,\n    \"SshKeyProfileName\" : \"SshKeyProfileName\",\n    \"InitialPassword\" : \"InitialPassword\",\n    \"SshKeySyncGroupPriority\" : 2,\n    \"Description\" : \"Description\",\n    \"AllowSessionRelease\" : true,\n    \"SshKeySyncGroupId\" : 5,\n    \"SyncGroupName\" : \"SyncGroupName\",\n    \"InitialSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ProfileName\" : \"ProfileName\",\n    \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n    \"SharedServiceAccount\" : false,\n    \"SshKeyProfileId\" : 6,\n    \"AllowPasswordRelease\" : true,\n    \"HasInitialPassword\" : true,\n    \"AllowSshKeyRelease\" : true,\n    \"SyncGroupId\" : 1,\n    \"SetInitialSshKey\" : true,\n    \"SetInitialPassword\" : true,\n    \"SyncGroupPriority\" : 5,\n    \"HasInitialSshKey\" : true,\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ]\n  }\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AccountDiscoveryRule>>(exampleJson)
                        : default(List<AccountDiscoveryRule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a PartitionProfileAccountDiscoverySchedule
        /// </summary>
        /// <param name="id">Unique ID of PartitionProfileAccountDiscoverySchedule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/AccountDiscoverySchedules/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAccountDiscoveryScheduleByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AccountDiscoverySchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAccountDiscoveryScheduleByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AccountDiscoverySchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 21,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 22,\n  \"DiscoveryType\" : \"Directory\",\n  \"DirectoryName\" : \"DirectoryName\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"AutoConfigureDependentSystems\" : true,\n  \"DirectoryId\" : 6,\n  \"AccountDiscoveryRules\" : [ {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  }, {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  } ],\n  \"AssetsCount\" : 1,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"ScheduleDiscoverServices\" : true,\n  \"RepeatInterval\" : 494379917\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AccountDiscoverySchedule>(exampleJson)
                        : default(AccountDiscoverySchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of PartitionProfileAccountDiscoverySchedules
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/AccountDiscoverySchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllAccountDiscoveryAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AccountDiscoverySchedule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllAccountDiscoveryAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AccountDiscoverySchedule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 21,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 22,\n  \"DiscoveryType\" : \"Directory\",\n  \"DirectoryName\" : \"DirectoryName\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"AutoConfigureDependentSystems\" : true,\n  \"DirectoryId\" : 6,\n  \"AccountDiscoveryRules\" : [ {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  }, {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  } ],\n  \"AssetsCount\" : 1,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"ScheduleDiscoverServices\" : true,\n  \"RepeatInterval\" : 494379917\n}, {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 21,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 22,\n  \"DiscoveryType\" : \"Directory\",\n  \"DirectoryName\" : \"DirectoryName\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"AutoConfigureDependentSystems\" : true,\n  \"DirectoryId\" : 6,\n  \"AccountDiscoveryRules\" : [ {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  }, {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  } ],\n  \"AssetsCount\" : 1,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"ScheduleDiscoverServices\" : true,\n  \"RepeatInterval\" : 494379917\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AccountDiscoverySchedule>>(exampleJson)
                        : default(List<AccountDiscoverySchedule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of partition change schedules across all partitions
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/ChangeSchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllChangeSchedulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PasswordChangeSchedule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllChangeSchedulesAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PasswordChangeSchedule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"RescheduleForUnscheduledPasswordUpdate\" : true,\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"UpdateComPlusOnPasswordChange\" : true,\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"RequireCurrentPassword\" : true,\n  \"UpdateIisPoolsOnPasswordChange\" : true,\n  \"UpdateWindowsServiceOnPasswordChange\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 41,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"UpdateWindowsTasksOnPasswordChange\" : true,\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"RestartWindowsServiceOnPasswordChange\" : true,\n  \"NotifyOwnersOnly\" : true,\n  \"AllowPasswordChangeWhenReleased\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}, {\n  \"RescheduleForUnscheduledPasswordUpdate\" : true,\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"UpdateComPlusOnPasswordChange\" : true,\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"RequireCurrentPassword\" : true,\n  \"UpdateIisPoolsOnPasswordChange\" : true,\n  \"UpdateWindowsServiceOnPasswordChange\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 41,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"UpdateWindowsTasksOnPasswordChange\" : true,\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"RestartWindowsServiceOnPasswordChange\" : true,\n  \"NotifyOwnersOnly\" : true,\n  \"AllowPasswordChangeWhenReleased\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<PasswordChangeSchedule>>(exampleJson)
                        : default(List<PasswordChangeSchedule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of partition password check schedules
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/CheckSchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllCheckSchedulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PasswordCheckSchedule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllCheckSchedulesAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PasswordCheckSchedule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"ResetPasswordOnMismatch\" : true,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}, {\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"ResetPasswordOnMismatch\" : true,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<PasswordCheckSchedule>>(exampleJson)
                        : default(List<PasswordCheckSchedule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets all asset partition&#x27;s discovered accounts
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/DiscoveredAccounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllDiscoveredAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredAssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllDiscoveredAccountsAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredAssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"Status\" : \"None\",\n  \"AssetPartitionId\" : 6,\n  \"AccountDiscoveryScheduleId\" : 1,\n  \"DomainName\" : \"DomainName\",\n  \"DiscoveredUserId\" : \"DiscoveredUserId\",\n  \"DiscoveredGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"AssetId\" : 0,\n  \"RuleName\" : \"RuleName\"\n}, {\n  \"Status\" : \"None\",\n  \"AssetPartitionId\" : 6,\n  \"AccountDiscoveryScheduleId\" : 1,\n  \"DomainName\" : \"DomainName\",\n  \"DiscoveredUserId\" : \"DiscoveredUserId\",\n  \"DiscoveredGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"AssetId\" : 0,\n  \"RuleName\" : \"RuleName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredAssetAccount>>(exampleJson)
                        : default(List<DiscoveredAssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets all asset partition&#x27;s discovered services
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/DiscoveredServices")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllDiscoveredServicesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredService>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllDiscoveredServicesAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredService>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 0,\n  \"AccountId\" : 1,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"IsServiceEnabled\" : true,\n  \"IsDependentAccount\" : true,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"DiscoveredAccount\" : \"DiscoveredAccount\",\n  \"AssetName\" : \"AssetName\",\n  \"ServiceDisplayName\" : \"ServiceDisplayName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AccountStatus\" : \"None\",\n  \"ServiceName\" : \"ServiceName\",\n  \"ServiceType\" : \"Unknown\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"IsIgnored\" : true\n}, {\n  \"AssetPartitionId\" : 0,\n  \"AccountId\" : 1,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"IsServiceEnabled\" : true,\n  \"IsDependentAccount\" : true,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"DiscoveredAccount\" : \"DiscoveredAccount\",\n  \"AssetName\" : \"AssetName\",\n  \"ServiceDisplayName\" : \"ServiceDisplayName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AccountStatus\" : \"None\",\n  \"ServiceName\" : \"ServiceName\",\n  \"ServiceType\" : \"Unknown\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"IsIgnored\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredService>>(exampleJson)
                        : default(List<DiscoveredService>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the discovered SSH keys for all asset partitions
        /// </summary>
        /// <param name="keyFormat">The format of the SSH private key (defaults to OpenSsh)&lt;br /&gt;&lt;br /&gt;              - OpenSsh - OpenSSH legacy PEM format&lt;br /&gt;              - Ssh2 - Tectia format for use with tools from SSH.com&lt;br /&gt;              - Putty - Putty format for use with PuTTY tools&lt;br /&gt;</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/DiscoveredSshKeys")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllDiscoveredSshKeysAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredSshKey>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllDiscoveredSshKeysAsync([FromQuery]SshKeyFormat keyFormat, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredSshKey>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 1,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Comment\" : \"Comment\",\n  \"Options\" : \"Options\",\n  \"Fingerprint\" : \"Fingerprint\",\n  \"AccountId\" : 0,\n  \"FingerprintSha256\" : \"FingerprintSha256\",\n  \"KeyType\" : \"Unknown\",\n  \"PublicKey\" : \"PublicKey\",\n  \"SshKeyProfileId\" : 5,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"KeyLength\" : 2,\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountStatus\" : \"None\",\n  \"SshKeyDiscoveryScheduleId\" : 5,\n  \"SshKeyDiscoveryScheduleName\" : \"SshKeyDiscoveryScheduleName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"IsManaged\" : true,\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"AssetPartitionId\" : 1,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Comment\" : \"Comment\",\n  \"Options\" : \"Options\",\n  \"Fingerprint\" : \"Fingerprint\",\n  \"AccountId\" : 0,\n  \"FingerprintSha256\" : \"FingerprintSha256\",\n  \"KeyType\" : \"Unknown\",\n  \"PublicKey\" : \"PublicKey\",\n  \"SshKeyProfileId\" : 5,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"KeyLength\" : 2,\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountStatus\" : \"None\",\n  \"SshKeyDiscoveryScheduleId\" : 5,\n  \"SshKeyDiscoveryScheduleName\" : \"SshKeyDiscoveryScheduleName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"IsManaged\" : true,\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredSshKey>>(exampleJson)
                        : default(List<DiscoveredSshKey>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of asset discovery jobs
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/DiscoveryJobs")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllDiscoveryJobsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetDiscoveryJob>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllDiscoveryJobsAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetDiscoveryJob>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"DirectoryDiscoveryProperties\" : {\n    \"DirectoryId\" : 5,\n    \"DirectoryPlatformDisplayName\" : \"DirectoryPlatformDisplayName\",\n    \"DirectoryPlatformType\" : \"Unknown\",\n    \"DirectoryPlatformId\" : 5,\n    \"DirectoryNetworkAddress\" : \"DirectoryNetworkAddress\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"TaskProperties\" : {\n    \"FailedAssetDiscoveryAttempts\" : 6,\n    \"NextAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasTaskFailure\" : true,\n    \"LastSuccessAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAssetDiscoveryTaskId\" : \"LastAssetDiscoveryTaskId\",\n    \"LastAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"DiscoveryType\" : \"Directory\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"NetworkDiscoveryProperties\" : {\n    \"ScanOptions\" : {\n      \"ScanTimeout\" : 2,\n      \"OsFingerPrint\" : false\n    },\n    \"ScanRules\" : [ {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    }, {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    } ]\n  },\n  \"Rules\" : [ {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  } ],\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1210617418\n}, {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"DirectoryDiscoveryProperties\" : {\n    \"DirectoryId\" : 5,\n    \"DirectoryPlatformDisplayName\" : \"DirectoryPlatformDisplayName\",\n    \"DirectoryPlatformType\" : \"Unknown\",\n    \"DirectoryPlatformId\" : 5,\n    \"DirectoryNetworkAddress\" : \"DirectoryNetworkAddress\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"TaskProperties\" : {\n    \"FailedAssetDiscoveryAttempts\" : 6,\n    \"NextAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasTaskFailure\" : true,\n    \"LastSuccessAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAssetDiscoveryTaskId\" : \"LastAssetDiscoveryTaskId\",\n    \"LastAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"DiscoveryType\" : \"Directory\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"NetworkDiscoveryProperties\" : {\n    \"ScanOptions\" : {\n      \"ScanTimeout\" : 2,\n      \"OsFingerPrint\" : false\n    },\n    \"ScanRules\" : [ {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    }, {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    } ]\n  },\n  \"Rules\" : [ {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  } ],\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1210617418\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetDiscoveryJob>>(exampleJson)
                        : default(List<AssetDiscoveryJob>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of password rules across all partitions
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/PasswordRules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllPasswordRulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AccountPasswordRule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllPasswordRulesAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AccountPasswordRule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"AllowedFirstCharacterType\" : \"All\",\n  \"Description\" : \"Description\",\n  \"AllowLowercaseCharacters\" : true,\n  \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n  \"NonAlphaNumericRestrictionType\" : \"Include\",\n  \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n  \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n  \"MinNumericCharacters\" : 51,\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n  \"CreatedByUserId\" : 1,\n  \"MaxConsecutiveUppercaseCharacters\" : 180,\n  \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n  \"AssetPartitionId\" : 6,\n  \"MaxConsecutiveLowercaseCharacters\" : 92,\n  \"MaxConsecutiveAlphabeticCharacters\" : 27,\n  \"MaxConsecutiveNumericCharacters\" : 106,\n  \"MinCharacters\" : 145,\n  \"MinLowercaseCharacters\" : 237,\n  \"AllowNonAlphaNumericCharacters\" : false,\n  \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n  \"AllowNumericCharacters\" : true,\n  \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n  \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n  \"AllowUppercaseCharacters\" : true,\n  \"MinUppercaseCharacters\" : 58,\n  \"MaxCharacters\" : 153,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 0,\n  \"MinNonAlphaNumericCharacters\" : 188,\n  \"IsSystemOwned\" : true\n}, {\n  \"AllowedFirstCharacterType\" : \"All\",\n  \"Description\" : \"Description\",\n  \"AllowLowercaseCharacters\" : true,\n  \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n  \"NonAlphaNumericRestrictionType\" : \"Include\",\n  \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n  \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n  \"MinNumericCharacters\" : 51,\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n  \"CreatedByUserId\" : 1,\n  \"MaxConsecutiveUppercaseCharacters\" : 180,\n  \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n  \"AssetPartitionId\" : 6,\n  \"MaxConsecutiveLowercaseCharacters\" : 92,\n  \"MaxConsecutiveAlphabeticCharacters\" : 27,\n  \"MaxConsecutiveNumericCharacters\" : 106,\n  \"MinCharacters\" : 145,\n  \"MinLowercaseCharacters\" : 237,\n  \"AllowNonAlphaNumericCharacters\" : false,\n  \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n  \"AllowNumericCharacters\" : true,\n  \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n  \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n  \"AllowUppercaseCharacters\" : true,\n  \"MinUppercaseCharacters\" : 58,\n  \"MaxCharacters\" : 153,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 0,\n  \"MinNonAlphaNumericCharacters\" : 188,\n  \"IsSystemOwned\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AccountPasswordRule>>(exampleJson)
                        : default(List<AccountPasswordRule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of profiles
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/Profiles")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllProfilesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PasswordProfile>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllProfilesAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PasswordProfile>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"AccountPasswordRule\" : {\n    \"AllowedFirstCharacterType\" : \"All\",\n    \"Description\" : \"Description\",\n    \"AllowLowercaseCharacters\" : true,\n    \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n    \"NonAlphaNumericRestrictionType\" : \"Include\",\n    \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n    \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n    \"MinNumericCharacters\" : 51,\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n    \"CreatedByUserId\" : 1,\n    \"MaxConsecutiveUppercaseCharacters\" : 180,\n    \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n    \"AssetPartitionId\" : 6,\n    \"MaxConsecutiveLowercaseCharacters\" : 92,\n    \"MaxConsecutiveAlphabeticCharacters\" : 27,\n    \"MaxConsecutiveNumericCharacters\" : 106,\n    \"MinCharacters\" : 145,\n    \"MinLowercaseCharacters\" : 237,\n    \"AllowNonAlphaNumericCharacters\" : false,\n    \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n    \"AllowNumericCharacters\" : true,\n    \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n    \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n    \"AllowUppercaseCharacters\" : true,\n    \"MinUppercaseCharacters\" : 58,\n    \"MaxCharacters\" : 153,\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 0,\n    \"MinNonAlphaNumericCharacters\" : 188,\n    \"IsSystemOwned\" : true\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"AccountPasswordRuleName\" : \"AccountPasswordRuleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"ResetPasswordOnMismatch\" : true,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"RescheduleForUnscheduledPasswordUpdate\" : true,\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"UpdateComPlusOnPasswordChange\" : true,\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"RequireCurrentPassword\" : true,\n    \"UpdateIisPoolsOnPasswordChange\" : true,\n    \"UpdateWindowsServiceOnPasswordChange\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 41,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"UpdateWindowsTasksOnPasswordChange\" : true,\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"RestartWindowsServiceOnPasswordChange\" : true,\n    \"NotifyOwnersOnly\" : true,\n    \"AllowPasswordChangeWhenReleased\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"CheckScheduleId\" : 5,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0,\n  \"AccountPasswordRuleId\" : 1\n}, {\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"AccountPasswordRule\" : {\n    \"AllowedFirstCharacterType\" : \"All\",\n    \"Description\" : \"Description\",\n    \"AllowLowercaseCharacters\" : true,\n    \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n    \"NonAlphaNumericRestrictionType\" : \"Include\",\n    \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n    \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n    \"MinNumericCharacters\" : 51,\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n    \"CreatedByUserId\" : 1,\n    \"MaxConsecutiveUppercaseCharacters\" : 180,\n    \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n    \"AssetPartitionId\" : 6,\n    \"MaxConsecutiveLowercaseCharacters\" : 92,\n    \"MaxConsecutiveAlphabeticCharacters\" : 27,\n    \"MaxConsecutiveNumericCharacters\" : 106,\n    \"MinCharacters\" : 145,\n    \"MinLowercaseCharacters\" : 237,\n    \"AllowNonAlphaNumericCharacters\" : false,\n    \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n    \"AllowNumericCharacters\" : true,\n    \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n    \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n    \"AllowUppercaseCharacters\" : true,\n    \"MinUppercaseCharacters\" : 58,\n    \"MaxCharacters\" : 153,\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 0,\n    \"MinNonAlphaNumericCharacters\" : 188,\n    \"IsSystemOwned\" : true\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"AccountPasswordRuleName\" : \"AccountPasswordRuleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"ResetPasswordOnMismatch\" : true,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"RescheduleForUnscheduledPasswordUpdate\" : true,\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"UpdateComPlusOnPasswordChange\" : true,\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"RequireCurrentPassword\" : true,\n    \"UpdateIisPoolsOnPasswordChange\" : true,\n    \"UpdateWindowsServiceOnPasswordChange\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 41,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"UpdateWindowsTasksOnPasswordChange\" : true,\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"RestartWindowsServiceOnPasswordChange\" : true,\n    \"NotifyOwnersOnly\" : true,\n    \"AllowPasswordChangeWhenReleased\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"CheckScheduleId\" : 5,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0,\n  \"AccountPasswordRuleId\" : 1\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<PasswordProfile>>(exampleJson)
                        : default(List<PasswordProfile>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a summary of all profiles schedules across all partitions
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have OperationsAdmin, AssetAdmin, ApplicationAuditor, SystemAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/ScheduleSummaries")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllScheduleSummariesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AllProfileSchedulesSummary>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have OperationsAdmin, AssetAdmin, ApplicationAuditor, SystemAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllScheduleSummariesAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AllProfileSchedulesSummary>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"AccountDiscoveryType\" : \"Directory\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 6,\n  \"AccountsCount\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"ProfileType\" : \"AccountDiscovery\",\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"AssetsCount\" : 1,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"AssetDiscoveryType\" : \"Directory\",\n  \"Id\" : 0,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1210617418\n}, {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"AccountDiscoveryType\" : \"Directory\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 6,\n  \"AccountsCount\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"ProfileType\" : \"AccountDiscovery\",\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"AssetsCount\" : 1,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"AssetDiscoveryType\" : \"Directory\",\n  \"Id\" : 0,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1210617418\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AllProfileSchedulesSummary>>(exampleJson)
                        : default(List<AllProfileSchedulesSummary>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of partition change schedules across all partitions
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/SshKeyChangeSchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllSshKeyChangeSchedulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SshKeyChangeSchedule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllSshKeyChangeSchedulesAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SshKeyChangeSchedule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"GeneratedKeyLength\" : 6,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"GeneratedKeyType\" : \"Unknown\",\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"NotifyOwnersOnly\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"AllowSshKeyChangeWhenReleased\" : true,\n  \"RepeatInterval\" : 1210617418\n}, {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"GeneratedKeyLength\" : 6,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"GeneratedKeyType\" : \"Unknown\",\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"NotifyOwnersOnly\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"AllowSshKeyChangeWhenReleased\" : true,\n  \"RepeatInterval\" : 1210617418\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SshKeyChangeSchedule>>(exampleJson)
                        : default(List<SshKeyChangeSchedule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of partition SSH key check schedules
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/SshKeyCheckSchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllSshKeyCheckSchedulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SshKeyCheckSchedule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllSshKeyCheckSchedulesAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SshKeyCheckSchedule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"ResetSshKeyOnMismatch\" : true,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}, {\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"ResetSshKeyOnMismatch\" : true,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SshKeyCheckSchedule>>(exampleJson)
                        : default(List<SshKeyCheckSchedule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of partition Discovery schedules across all partitions
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/SshKeyDiscoverySchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllSshKeyDiscoverySchedulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SshKeyDiscoverySchedule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllSshKeyDiscoverySchedulesAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SshKeyDiscoverySchedule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 21,\n  \"Description\" : \"Description\",\n  \"ProfilesCount\" : 6,\n  \"StartHour\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"AccountsCount\" : 1,\n  \"RepeatDayOfMonth\" : 22,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 494379917\n}, {\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 21,\n  \"Description\" : \"Description\",\n  \"ProfilesCount\" : 6,\n  \"StartHour\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"AccountsCount\" : 1,\n  \"RepeatDayOfMonth\" : 22,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 494379917\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SshKeyDiscoverySchedule>>(exampleJson)
                        : default(List<SshKeyDiscoverySchedule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets an SSH key profile
        /// </summary>
        /// <param name="id">Unique ID of SshKeyProfile</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">SshKeyProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/SshKeyProfiles/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllSshKeyProfileByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyProfile), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllSshKeyProfileByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyProfile));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"DiscoverySchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 21,\n    \"Description\" : \"Description\",\n    \"ProfilesCount\" : 6,\n    \"StartHour\" : 21,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"AccountsCount\" : 1,\n    \"RepeatDayOfMonth\" : 22,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 5,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 494379917\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"ResetSshKeyOnMismatch\" : true,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 16,\n    \"GeneratedKeyLength\" : 6,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"RepeatDayOfMonth\" : 7,\n    \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 54,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"GeneratedKeyType\" : \"Unknown\",\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"NotifyOwnersOnly\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 1,\n    \"TimeOfDayType\" : \"Instant\",\n    \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"AllowSshKeyChangeWhenReleased\" : true,\n    \"RepeatInterval\" : 1210617418\n  },\n  \"Owners\" : [ {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  }, {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"DiscoveryScheduleId\" : 5,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"DiscoveryScheduleName\" : \"DiscoveryScheduleName\",\n  \"CheckScheduleId\" : 1,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyProfile>(exampleJson)
                        : default(SshKeyProfile);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of SSH key profiles across all partitions
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/SshKeyProfiles")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllSshKeyProfilesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SshKeyProfile>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllSshKeyProfilesAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SshKeyProfile>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"DiscoverySchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 21,\n    \"Description\" : \"Description\",\n    \"ProfilesCount\" : 6,\n    \"StartHour\" : 21,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"AccountsCount\" : 1,\n    \"RepeatDayOfMonth\" : 22,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 5,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 494379917\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"ResetSshKeyOnMismatch\" : true,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 16,\n    \"GeneratedKeyLength\" : 6,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"RepeatDayOfMonth\" : 7,\n    \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 54,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"GeneratedKeyType\" : \"Unknown\",\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"NotifyOwnersOnly\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 1,\n    \"TimeOfDayType\" : \"Instant\",\n    \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"AllowSshKeyChangeWhenReleased\" : true,\n    \"RepeatInterval\" : 1210617418\n  },\n  \"Owners\" : [ {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  }, {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"DiscoveryScheduleId\" : 5,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"DiscoveryScheduleName\" : \"DiscoveryScheduleName\",\n  \"CheckScheduleId\" : 1,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0\n}, {\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"DiscoverySchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 21,\n    \"Description\" : \"Description\",\n    \"ProfilesCount\" : 6,\n    \"StartHour\" : 21,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"AccountsCount\" : 1,\n    \"RepeatDayOfMonth\" : 22,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 5,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 494379917\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"ResetSshKeyOnMismatch\" : true,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 16,\n    \"GeneratedKeyLength\" : 6,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"RepeatDayOfMonth\" : 7,\n    \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 54,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"GeneratedKeyType\" : \"Unknown\",\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"NotifyOwnersOnly\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 1,\n    \"TimeOfDayType\" : \"Instant\",\n    \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"AllowSshKeyChangeWhenReleased\" : true,\n    \"RepeatInterval\" : 1210617418\n  },\n  \"Owners\" : [ {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  }, {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"DiscoveryScheduleId\" : 5,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"DiscoveryScheduleName\" : \"DiscoveryScheduleName\",\n  \"CheckScheduleId\" : 1,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SshKeyProfile>>(exampleJson)
                        : default(List<SshKeyProfile>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of all SSH key sync groups
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/SshKeySyncGroups")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllSshKeySyncGroupsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SshKeySyncGroup>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllSshKeySyncGroupsAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SshKeySyncGroup>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}, {\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SshKeySyncGroup>>(exampleJson)
                        : default(List<SshKeySyncGroup>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a specific SSH key sync group
        /// </summary>
        /// <param name="id">Unique ID of the SSH key sync group</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/SshKeySyncGroups/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllSshKeySyncGroupsByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeySyncGroup), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllSshKeySyncGroupsByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeySyncGroup));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeySyncGroup>(exampleJson)
                        : default(SshKeySyncGroup);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of all partition sync groups
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/SyncGroups")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllSyncGroupsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PasswordSyncGroup>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllSyncGroupsAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PasswordSyncGroup>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}, {\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<PasswordSyncGroup>>(exampleJson)
                        : default(List<PasswordSyncGroup>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of partition tags across partitions
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, in, (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have PolicyAdmin, AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/Tags")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAllTagsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PartitionTag>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have PolicyAdmin, AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAllTagsAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PartitionTag>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 5,\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"Description\" : \"Description\",\n  \"AssetTaggingRule\" : {\n    \"RuleConditionGroup\" : {\n      \"Children\" : [ {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      }, {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      } ],\n      \"LogicalJoinType\" : \"And\"\n    },\n    \"Description\" : \"Description\",\n    \"Enabled\" : true\n  },\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n}, {\n  \"AssetPartitionId\" : 5,\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"Description\" : \"Description\",\n  \"AssetTaggingRule\" : {\n    \"RuleConditionGroup\" : {\n      \"Children\" : [ {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      }, {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      } ],\n      \"LogicalJoinType\" : \"And\"\n    },\n    \"Description\" : \"Description\",\n    \"Enabled\" : true\n  },\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<PartitionTag>>(exampleJson)
                        : default(List<PartitionTag>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets all accounts belonging to assets assigned to this partition
        /// </summary>
        /// <param name="id">Unique identifier of the AssetPartition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAssetAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAssetAccountsAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a single AssetPartition entity
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="401">Must be an authenticated user</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAssetPartitionByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetPartition), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Forbidden")]
        public virtual IActionResult AssetPartitionsGetAssetPartitionByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetPartition));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"CreatedByUserId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"DefaultProfileName\" : \"DefaultProfileName\",\n  \"DefaultSshKeyProfileId\" : 5,\n  \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"DefaultProfileId\" : 1,\n  \"Id\" : 0,\n  \"Name\" : \"Name\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetPartition>(exampleJson)
                        : default(AssetPartition);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of asset partitions
        /// </summary>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="401">Must be an authenticated user</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAssetPartitionsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetPartition>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Forbidden")]
        public virtual IActionResult AssetPartitionsGetAssetPartitionsAsync([FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetPartition>));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"CreatedByUserId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"DefaultProfileName\" : \"DefaultProfileName\",\n  \"DefaultSshKeyProfileId\" : 5,\n  \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"DefaultProfileId\" : 1,\n  \"Id\" : 0,\n  \"Name\" : \"Name\"\n}, {\n  \"CreatedByUserId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"DefaultProfileName\" : \"DefaultProfileName\",\n  \"DefaultSshKeyProfileId\" : 5,\n  \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"DefaultProfileId\" : 1,\n  \"Id\" : 0,\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetPartition>>(exampleJson)
                        : default(List<AssetPartition>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets all assets that belong to the specified partition
        /// </summary>
        /// <param name="id">Unique identifier of the AssetAccount to get tasks for</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Assets")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Asset>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetAssetsAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Asset>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}, {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Asset>>(exampleJson)
                        : default(List<Asset>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets accounts that the specified schedule is assigned to
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the profile schedule</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">profile schedule not found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/ChangeSchedules/{scheduleId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetChangeScheduleAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetChangeScheduleAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a single PartitionProfileChangeSchedule
        /// </summary>
        /// <param name="id">Unique ID of a PartitionProfileChangeSchedule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfileChangeSchedule does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/ChangeSchedules/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetChangeScheduleByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordChangeSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetChangeScheduleByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordChangeSchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"RescheduleForUnscheduledPasswordUpdate\" : true,\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"UpdateComPlusOnPasswordChange\" : true,\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"RequireCurrentPassword\" : true,\n  \"UpdateIisPoolsOnPasswordChange\" : true,\n  \"UpdateWindowsServiceOnPasswordChange\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 41,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"UpdateWindowsTasksOnPasswordChange\" : true,\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"RestartWindowsServiceOnPasswordChange\" : true,\n  \"NotifyOwnersOnly\" : true,\n  \"AllowPasswordChangeWhenReleased\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordChangeSchedule>(exampleJson)
                        : default(PasswordChangeSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets accounts that the specified schedule is assigned to
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the profile schedule</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">profile schedule not found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/CheckSchedules/{scheduleId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetCheckScheduleAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetCheckScheduleAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a single PartitionProfileCheckSchedule
        /// </summary>
        /// <param name="id">Unique ID of a PartitionProfileCheckSchedule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfileCheckSchedule does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/CheckSchedules/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetCheckScheduleByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordCheckSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetCheckScheduleByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordCheckSchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"ResetPasswordOnMismatch\" : true,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordCheckSchedule>(exampleJson)
                        : default(PasswordCheckSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets an asset partition&#x27;s discovered services
        /// </summary>
        /// <param name="id">Unique ID of a Partition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredServices")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetDiscoveredServicesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredService>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetDiscoveredServicesAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredService>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 0,\n  \"AccountId\" : 1,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"IsServiceEnabled\" : true,\n  \"IsDependentAccount\" : true,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"DiscoveredAccount\" : \"DiscoveredAccount\",\n  \"AssetName\" : \"AssetName\",\n  \"ServiceDisplayName\" : \"ServiceDisplayName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AccountStatus\" : \"None\",\n  \"ServiceName\" : \"ServiceName\",\n  \"ServiceType\" : \"Unknown\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"IsIgnored\" : true\n}, {\n  \"AssetPartitionId\" : 0,\n  \"AccountId\" : 1,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"IsServiceEnabled\" : true,\n  \"IsDependentAccount\" : true,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"DiscoveredAccount\" : \"DiscoveredAccount\",\n  \"AssetName\" : \"AssetName\",\n  \"ServiceDisplayName\" : \"ServiceDisplayName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AccountStatus\" : \"None\",\n  \"ServiceName\" : \"ServiceName\",\n  \"ServiceType\" : \"Unknown\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"IsIgnored\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredService>>(exampleJson)
                        : default(List<DiscoveredService>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets an asset&#x27;s discovered services
        /// </summary>
        /// <param name="id">Unique ID of a Partition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredServices/{assetId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetDiscoveredServicesByAssetAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredService>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetDiscoveredServicesByAssetAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredService>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 0,\n  \"AccountId\" : 1,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"IsServiceEnabled\" : true,\n  \"IsDependentAccount\" : true,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"DiscoveredAccount\" : \"DiscoveredAccount\",\n  \"AssetName\" : \"AssetName\",\n  \"ServiceDisplayName\" : \"ServiceDisplayName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AccountStatus\" : \"None\",\n  \"ServiceName\" : \"ServiceName\",\n  \"ServiceType\" : \"Unknown\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"IsIgnored\" : true\n}, {\n  \"AssetPartitionId\" : 0,\n  \"AccountId\" : 1,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"IsServiceEnabled\" : true,\n  \"IsDependentAccount\" : true,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"DiscoveredAccount\" : \"DiscoveredAccount\",\n  \"AssetName\" : \"AssetName\",\n  \"ServiceDisplayName\" : \"ServiceDisplayName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AccountStatus\" : \"None\",\n  \"ServiceName\" : \"ServiceName\",\n  \"ServiceType\" : \"Unknown\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"IsIgnored\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredService>>(exampleJson)
                        : default(List<DiscoveredService>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets an asset&#x27;s discovered services
        /// </summary>
        /// <param name="id">Unique ID of a Partition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="serviceName">Name of a discovered service. For directory accounts you must also specify the domain name e.g., {accountName}@{domainName}</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredServices/{assetId}/{serviceName}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetDiscoveredServicesByServiceNameAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredService>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetDiscoveredServicesByServiceNameAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromRoute][Required]string serviceName, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredService>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 0,\n  \"AccountId\" : 1,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"IsServiceEnabled\" : true,\n  \"IsDependentAccount\" : true,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"DiscoveredAccount\" : \"DiscoveredAccount\",\n  \"AssetName\" : \"AssetName\",\n  \"ServiceDisplayName\" : \"ServiceDisplayName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AccountStatus\" : \"None\",\n  \"ServiceName\" : \"ServiceName\",\n  \"ServiceType\" : \"Unknown\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"IsIgnored\" : true\n}, {\n  \"AssetPartitionId\" : 0,\n  \"AccountId\" : 1,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"IsServiceEnabled\" : true,\n  \"IsDependentAccount\" : true,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"DiscoveredAccount\" : \"DiscoveredAccount\",\n  \"AssetName\" : \"AssetName\",\n  \"ServiceDisplayName\" : \"ServiceDisplayName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AccountStatus\" : \"None\",\n  \"ServiceName\" : \"ServiceName\",\n  \"ServiceType\" : \"Unknown\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"IsIgnored\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredService>>(exampleJson)
                        : default(List<DiscoveredService>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets an discovered SSH key
        /// </summary>
        /// <param name="id">Unique ID of a Partition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="accountId">Unique ID of an account</param>
        /// <param name="fingerprint">MD5 fingerprint of SSH Key</param>
        /// <param name="keyFormat">The format of the SSH private key (defaults to OpenSsh)&lt;br /&gt;&lt;br /&gt;              - OpenSsh - OpenSSH legacy PEM format&lt;br /&gt;              - Ssh2 - Tectia format for use with tools from SSH.com&lt;br /&gt;              - Putty - Putty format for use with PuTTY tools&lt;br /&gt;</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredSshKeys/{assetId}/{accountId}/{fingerprint}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetDiscoveredSshKeyByFingerprintAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(DiscoveredSshKey), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetDiscoveredSshKeyByFingerprintAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromRoute][Required]int? accountId, [FromRoute][Required]string fingerprint, [FromQuery]SshKeyFormat keyFormat, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DiscoveredSshKey));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 1,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Comment\" : \"Comment\",\n  \"Options\" : \"Options\",\n  \"Fingerprint\" : \"Fingerprint\",\n  \"AccountId\" : 0,\n  \"FingerprintSha256\" : \"FingerprintSha256\",\n  \"KeyType\" : \"Unknown\",\n  \"PublicKey\" : \"PublicKey\",\n  \"SshKeyProfileId\" : 5,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"KeyLength\" : 2,\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountStatus\" : \"None\",\n  \"SshKeyDiscoveryScheduleId\" : 5,\n  \"SshKeyDiscoveryScheduleName\" : \"SshKeyDiscoveryScheduleName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"IsManaged\" : true,\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<DiscoveredSshKey>(exampleJson)
                        : default(DiscoveredSshKey);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the discovered SSH keys for an asset partition
        /// </summary>
        /// <param name="id">Unique ID of the asset</param>
        /// <param name="keyFormat">The format of the SSH private key (defaults to OpenSsh)&lt;br /&gt;&lt;br /&gt;              - OpenSsh - OpenSSH legacy PEM format&lt;br /&gt;              - Ssh2 - Tectia format for use with tools from SSH.com&lt;br /&gt;              - Putty - Putty format for use with PuTTY tools&lt;br /&gt;</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredSshKeys")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetDiscoveredSshKeysAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredSshKey>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetDiscoveredSshKeysAsync([FromRoute][Required]int? id, [FromQuery]SshKeyFormat keyFormat, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredSshKey>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 1,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Comment\" : \"Comment\",\n  \"Options\" : \"Options\",\n  \"Fingerprint\" : \"Fingerprint\",\n  \"AccountId\" : 0,\n  \"FingerprintSha256\" : \"FingerprintSha256\",\n  \"KeyType\" : \"Unknown\",\n  \"PublicKey\" : \"PublicKey\",\n  \"SshKeyProfileId\" : 5,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"KeyLength\" : 2,\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountStatus\" : \"None\",\n  \"SshKeyDiscoveryScheduleId\" : 5,\n  \"SshKeyDiscoveryScheduleName\" : \"SshKeyDiscoveryScheduleName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"IsManaged\" : true,\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"AssetPartitionId\" : 1,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Comment\" : \"Comment\",\n  \"Options\" : \"Options\",\n  \"Fingerprint\" : \"Fingerprint\",\n  \"AccountId\" : 0,\n  \"FingerprintSha256\" : \"FingerprintSha256\",\n  \"KeyType\" : \"Unknown\",\n  \"PublicKey\" : \"PublicKey\",\n  \"SshKeyProfileId\" : 5,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"KeyLength\" : 2,\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountStatus\" : \"None\",\n  \"SshKeyDiscoveryScheduleId\" : 5,\n  \"SshKeyDiscoveryScheduleName\" : \"SshKeyDiscoveryScheduleName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"IsManaged\" : true,\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredSshKey>>(exampleJson)
                        : default(List<DiscoveredSshKey>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets discovered SSH keys for an account
        /// </summary>
        /// <param name="id">Unique ID of a Partition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="accountId">Unique ID of an account</param>
        /// <param name="keyFormat">The format of the SSH private key (defaults to OpenSsh)&lt;br /&gt;&lt;br /&gt;              - OpenSsh - OpenSSH legacy PEM format&lt;br /&gt;              - Ssh2 - Tectia format for use with tools from SSH.com&lt;br /&gt;              - Putty - Putty format for use with PuTTY tools&lt;br /&gt;</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredSshKeys/{assetId}/{accountId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetDiscoveredSshKeysByAccountAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredSshKey>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetDiscoveredSshKeysByAccountAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromRoute][Required]int? accountId, [FromQuery]SshKeyFormat keyFormat, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredSshKey>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 1,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Comment\" : \"Comment\",\n  \"Options\" : \"Options\",\n  \"Fingerprint\" : \"Fingerprint\",\n  \"AccountId\" : 0,\n  \"FingerprintSha256\" : \"FingerprintSha256\",\n  \"KeyType\" : \"Unknown\",\n  \"PublicKey\" : \"PublicKey\",\n  \"SshKeyProfileId\" : 5,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"KeyLength\" : 2,\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountStatus\" : \"None\",\n  \"SshKeyDiscoveryScheduleId\" : 5,\n  \"SshKeyDiscoveryScheduleName\" : \"SshKeyDiscoveryScheduleName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"IsManaged\" : true,\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"AssetPartitionId\" : 1,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Comment\" : \"Comment\",\n  \"Options\" : \"Options\",\n  \"Fingerprint\" : \"Fingerprint\",\n  \"AccountId\" : 0,\n  \"FingerprintSha256\" : \"FingerprintSha256\",\n  \"KeyType\" : \"Unknown\",\n  \"PublicKey\" : \"PublicKey\",\n  \"SshKeyProfileId\" : 5,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"KeyLength\" : 2,\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountStatus\" : \"None\",\n  \"SshKeyDiscoveryScheduleId\" : 5,\n  \"SshKeyDiscoveryScheduleName\" : \"SshKeyDiscoveryScheduleName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"IsManaged\" : true,\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredSshKey>>(exampleJson)
                        : default(List<DiscoveredSshKey>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets discovered SSH keys for an asset
        /// </summary>
        /// <param name="id">Unique ID of a Partition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="keyFormat">The format of the SSH private key (defaults to OpenSsh)&lt;br /&gt;&lt;br /&gt;              - OpenSsh - OpenSSH legacy PEM format&lt;br /&gt;              - Ssh2 - Tectia format for use with tools from SSH.com&lt;br /&gt;              - Putty - Putty format for use with PuTTY tools&lt;br /&gt;</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredSshKeys/{assetId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetDiscoveredSshKeysByAssetAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredSshKey>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetDiscoveredSshKeysByAssetAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromQuery]SshKeyFormat keyFormat, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredSshKey>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 1,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Comment\" : \"Comment\",\n  \"Options\" : \"Options\",\n  \"Fingerprint\" : \"Fingerprint\",\n  \"AccountId\" : 0,\n  \"FingerprintSha256\" : \"FingerprintSha256\",\n  \"KeyType\" : \"Unknown\",\n  \"PublicKey\" : \"PublicKey\",\n  \"SshKeyProfileId\" : 5,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"KeyLength\" : 2,\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountStatus\" : \"None\",\n  \"SshKeyDiscoveryScheduleId\" : 5,\n  \"SshKeyDiscoveryScheduleName\" : \"SshKeyDiscoveryScheduleName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"IsManaged\" : true,\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n}, {\n  \"AssetPartitionId\" : 1,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Comment\" : \"Comment\",\n  \"Options\" : \"Options\",\n  \"Fingerprint\" : \"Fingerprint\",\n  \"AccountId\" : 0,\n  \"FingerprintSha256\" : \"FingerprintSha256\",\n  \"KeyType\" : \"Unknown\",\n  \"PublicKey\" : \"PublicKey\",\n  \"SshKeyProfileId\" : 5,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"KeyLength\" : 2,\n  \"AssetName\" : \"AssetName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountStatus\" : \"None\",\n  \"SshKeyDiscoveryScheduleId\" : 5,\n  \"SshKeyDiscoveryScheduleName\" : \"SshKeyDiscoveryScheduleName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"IsManaged\" : true,\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredSshKey>>(exampleJson)
                        : default(List<DiscoveredSshKey>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a specific asset discovery job
        /// </summary>
        /// <param name="id">Unique ID of the asset discovery job</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/DiscoveryJobs/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetDiscoveryJobByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetDiscoveryJob), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetDiscoveryJobByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetDiscoveryJob));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"DirectoryDiscoveryProperties\" : {\n    \"DirectoryId\" : 5,\n    \"DirectoryPlatformDisplayName\" : \"DirectoryPlatformDisplayName\",\n    \"DirectoryPlatformType\" : \"Unknown\",\n    \"DirectoryPlatformId\" : 5,\n    \"DirectoryNetworkAddress\" : \"DirectoryNetworkAddress\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"TaskProperties\" : {\n    \"FailedAssetDiscoveryAttempts\" : 6,\n    \"NextAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasTaskFailure\" : true,\n    \"LastSuccessAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAssetDiscoveryTaskId\" : \"LastAssetDiscoveryTaskId\",\n    \"LastAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"DiscoveryType\" : \"Directory\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"NetworkDiscoveryProperties\" : {\n    \"ScanOptions\" : {\n      \"ScanTimeout\" : 2,\n      \"OsFingerPrint\" : false\n    },\n    \"ScanRules\" : [ {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    }, {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    } ]\n  },\n  \"Rules\" : [ {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  } ],\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1210617418\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetDiscoveryJob>(exampleJson)
                        : default(AssetDiscoveryJob);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets all rules that belong to an asset discovery rule
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="jobId">Unique identifier of the AssetDiscoveryJob</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">AssetDiscoveryJob does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveryJobs/{jobId}/Rules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetDiscoveryJobRulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetDiscoveryRule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetDiscoveryJobRulesAsync([FromRoute][Required]int? id, [FromRoute][Required]int? jobId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetDiscoveryRule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetTemplate\" : {\n    \"AccountDiscoveryScheduleId\" : 0,\n    \"ManagedNetworkName\" : \"ManagedNetworkName\",\n    \"ConnectionProperties\" : {\n      \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n      \"ServiceAccountSshKeyProfileId\" : 1,\n      \"ServiceAccountHasSshKey\" : true,\n      \"RegisteredConnectorId\" : 1,\n      \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n      \"UseNamedPipeForServiceAccountConnection\" : true,\n      \"Instance\" : \"Instance\",\n      \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n      \"Port\" : 48874,\n      \"ServiceAccountSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ServiceAccountId\" : 6,\n      \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n      \"HasSecretKey\" : true,\n      \"TacacsSecret\" : \"TacacsSecret\",\n      \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n      \"CommandTimeout\" : 13584,\n      \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n      \"EnablePassword\" : \"EnablePassword\",\n      \"WorkstationId\" : \"WorkstationId\",\n      \"SslThumbprint\" : \"SslThumbprint\",\n      \"EnableHasPassword\" : true,\n      \"ClientId\" : 737,\n      \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n      \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n      \"ServiceAccountCredentialType\" : \"None\",\n      \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n      \"ServiceAccountHasPassword\" : true,\n      \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n      \"UseSslEncryption\" : true,\n      \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n      \"HasTacacsSecret\" : true,\n      \"UseTopSecretInterval\" : true,\n      \"ServiceAccountName\" : \"ServiceAccountName\",\n      \"VerifySslCertificate\" : true,\n      \"OraclePrivileges\" : \"OraclePrivileges\",\n      \"SecretKey\" : \"SecretKey\",\n      \"ServiceAccountAssetPlatformId\" : 4,\n      \"ServiceAccountProfileId\" : 1,\n      \"ServiceName\" : \"ServiceName\",\n      \"AccessKeyId\" : \"AccessKeyId\",\n      \"ServiceAccountAssetId\" : 1,\n      \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n      \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n    },\n    \"SessionAccessProperties\" : {\n      \"RemoteDesktopSessionPort\" : 21975,\n      \"AllowSessionRequests\" : true,\n      \"TelnetSessionPort\" : 20275,\n      \"SshSessionPort\" : 43935\n    },\n    \"PasswordProfile\" : {\n      \"Id\" : 8,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"ManagedNetworkId\" : 6,\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"PlatformFamily\" : \"None\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 6,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"PlatformId\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ]\n  },\n  \"Conditions\" : [ {\n    \"SearchScope\" : \"OneLevel\",\n    \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n    \"SearchBase\" : \"SearchBase\",\n    \"ConditionType\" : \"FindAll\",\n    \"PropertyConstraints\" : [ {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    }, {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    } ],\n    \"LdapFilter\" : \"LdapFilter\"\n  }, {\n    \"SearchScope\" : \"OneLevel\",\n    \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n    \"SearchBase\" : \"SearchBase\",\n    \"ConditionType\" : \"FindAll\",\n    \"PropertyConstraints\" : [ {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    }, {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    } ],\n    \"LdapFilter\" : \"LdapFilter\"\n  } ],\n  \"Name\" : \"Name\"\n}, {\n  \"AssetTemplate\" : {\n    \"AccountDiscoveryScheduleId\" : 0,\n    \"ManagedNetworkName\" : \"ManagedNetworkName\",\n    \"ConnectionProperties\" : {\n      \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n      \"ServiceAccountSshKeyProfileId\" : 1,\n      \"ServiceAccountHasSshKey\" : true,\n      \"RegisteredConnectorId\" : 1,\n      \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n      \"UseNamedPipeForServiceAccountConnection\" : true,\n      \"Instance\" : \"Instance\",\n      \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n      \"Port\" : 48874,\n      \"ServiceAccountSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ServiceAccountId\" : 6,\n      \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n      \"HasSecretKey\" : true,\n      \"TacacsSecret\" : \"TacacsSecret\",\n      \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n      \"CommandTimeout\" : 13584,\n      \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n      \"EnablePassword\" : \"EnablePassword\",\n      \"WorkstationId\" : \"WorkstationId\",\n      \"SslThumbprint\" : \"SslThumbprint\",\n      \"EnableHasPassword\" : true,\n      \"ClientId\" : 737,\n      \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n      \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n      \"ServiceAccountCredentialType\" : \"None\",\n      \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n      \"ServiceAccountHasPassword\" : true,\n      \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n      \"UseSslEncryption\" : true,\n      \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n      \"HasTacacsSecret\" : true,\n      \"UseTopSecretInterval\" : true,\n      \"ServiceAccountName\" : \"ServiceAccountName\",\n      \"VerifySslCertificate\" : true,\n      \"OraclePrivileges\" : \"OraclePrivileges\",\n      \"SecretKey\" : \"SecretKey\",\n      \"ServiceAccountAssetPlatformId\" : 4,\n      \"ServiceAccountProfileId\" : 1,\n      \"ServiceName\" : \"ServiceName\",\n      \"AccessKeyId\" : \"AccessKeyId\",\n      \"ServiceAccountAssetId\" : 1,\n      \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n      \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n    },\n    \"SessionAccessProperties\" : {\n      \"RemoteDesktopSessionPort\" : 21975,\n      \"AllowSessionRequests\" : true,\n      \"TelnetSessionPort\" : 20275,\n      \"SshSessionPort\" : 43935\n    },\n    \"PasswordProfile\" : {\n      \"Id\" : 8,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"ManagedNetworkId\" : 6,\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"PlatformFamily\" : \"None\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 6,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"PlatformId\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ]\n  },\n  \"Conditions\" : [ {\n    \"SearchScope\" : \"OneLevel\",\n    \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n    \"SearchBase\" : \"SearchBase\",\n    \"ConditionType\" : \"FindAll\",\n    \"PropertyConstraints\" : [ {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    }, {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    } ],\n    \"LdapFilter\" : \"LdapFilter\"\n  }, {\n    \"SearchScope\" : \"OneLevel\",\n    \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n    \"SearchBase\" : \"SearchBase\",\n    \"ConditionType\" : \"FindAll\",\n    \"PropertyConstraints\" : [ {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    }, {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    } ],\n    \"LdapFilter\" : \"LdapFilter\"\n  } ],\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetDiscoveryRule>>(exampleJson)
                        : default(List<AssetDiscoveryRule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the tagged objects
        /// </summary>
        /// <param name="id">Unique ID of the partition</param>
        /// <param name="tagId">Unique ID of the tag</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, in, (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Tag does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Tags/{tagId}/Occurrences")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetObjectsWithTagAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ObjectWithTag>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetObjectsWithTagAsync([FromRoute][Required]int? id, [FromRoute][Required]int? tagId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ObjectWithTag>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Type\" : \"Asset\",\n  \"DomainName\" : \"DomainName\",\n  \"Id\" : 0,\n  \"IsStatic\" : true,\n  \"AssetId\" : 6,\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\"\n}, {\n  \"Type\" : \"Asset\",\n  \"DomainName\" : \"DomainName\",\n  \"Id\" : 0,\n  \"IsStatic\" : true,\n  \"AssetId\" : 6,\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<ObjectWithTag>>(exampleJson)
                        : default(List<ObjectWithTag>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of PartitionProfileAccountDiscoverySchedules
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/AccountDiscoverySchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionAccountDiscoveryAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AccountDiscoverySchedule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionAccountDiscoveryAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AccountDiscoverySchedule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 21,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 22,\n  \"DiscoveryType\" : \"Directory\",\n  \"DirectoryName\" : \"DirectoryName\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"AutoConfigureDependentSystems\" : true,\n  \"DirectoryId\" : 6,\n  \"AccountDiscoveryRules\" : [ {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  }, {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  } ],\n  \"AssetsCount\" : 1,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"ScheduleDiscoverServices\" : true,\n  \"RepeatInterval\" : 494379917\n}, {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 21,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 22,\n  \"DiscoveryType\" : \"Directory\",\n  \"DirectoryName\" : \"DirectoryName\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"AutoConfigureDependentSystems\" : true,\n  \"DirectoryId\" : 6,\n  \"AccountDiscoveryRules\" : [ {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  }, {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  } ],\n  \"AssetsCount\" : 1,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"ScheduleDiscoverServices\" : true,\n  \"RepeatInterval\" : 494379917\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AccountDiscoverySchedule>>(exampleJson)
                        : default(List<AccountDiscoverySchedule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a PartitionProfileAccountDiscoverySchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique ID of PartitionProfileAccountDiscoverySchedule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/AccountDiscoverySchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionAccountDiscoveryScheduleByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AccountDiscoverySchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionAccountDiscoveryScheduleByIdAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AccountDiscoverySchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 21,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 22,\n  \"DiscoveryType\" : \"Directory\",\n  \"DirectoryName\" : \"DirectoryName\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"AutoConfigureDependentSystems\" : true,\n  \"DirectoryId\" : 6,\n  \"AccountDiscoveryRules\" : [ {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  }, {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  } ],\n  \"AssetsCount\" : 1,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"ScheduleDiscoverServices\" : true,\n  \"RepeatInterval\" : 494379917\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AccountDiscoverySchedule>(exampleJson)
                        : default(AccountDiscoverySchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a single PartitionProfileChangeSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique ID of a PartitionProfileChangeSchedule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfileChangeSchedule does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/ChangeSchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionChangeScheduleByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordChangeSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionChangeScheduleByIdAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordChangeSchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"RescheduleForUnscheduledPasswordUpdate\" : true,\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"UpdateComPlusOnPasswordChange\" : true,\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"RequireCurrentPassword\" : true,\n  \"UpdateIisPoolsOnPasswordChange\" : true,\n  \"UpdateWindowsServiceOnPasswordChange\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 41,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"UpdateWindowsTasksOnPasswordChange\" : true,\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"RestartWindowsServiceOnPasswordChange\" : true,\n  \"NotifyOwnersOnly\" : true,\n  \"AllowPasswordChangeWhenReleased\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordChangeSchedule>(exampleJson)
                        : default(PasswordChangeSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of partition change schedules
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/ChangeSchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionChangeSchedulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PasswordChangeSchedule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionChangeSchedulesAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PasswordChangeSchedule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"RescheduleForUnscheduledPasswordUpdate\" : true,\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"UpdateComPlusOnPasswordChange\" : true,\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"RequireCurrentPassword\" : true,\n  \"UpdateIisPoolsOnPasswordChange\" : true,\n  \"UpdateWindowsServiceOnPasswordChange\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 41,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"UpdateWindowsTasksOnPasswordChange\" : true,\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"RestartWindowsServiceOnPasswordChange\" : true,\n  \"NotifyOwnersOnly\" : true,\n  \"AllowPasswordChangeWhenReleased\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}, {\n  \"RescheduleForUnscheduledPasswordUpdate\" : true,\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"UpdateComPlusOnPasswordChange\" : true,\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"RequireCurrentPassword\" : true,\n  \"UpdateIisPoolsOnPasswordChange\" : true,\n  \"UpdateWindowsServiceOnPasswordChange\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 41,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"UpdateWindowsTasksOnPasswordChange\" : true,\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"RestartWindowsServiceOnPasswordChange\" : true,\n  \"NotifyOwnersOnly\" : true,\n  \"AllowPasswordChangeWhenReleased\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<PasswordChangeSchedule>>(exampleJson)
                        : default(List<PasswordChangeSchedule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a single PartitionProfileCheckSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique ID of a PartitionProfileCheckSchedule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfileCheckSchedule does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/CheckSchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionCheckScheduleByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordCheckSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionCheckScheduleByIdAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordCheckSchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"ResetPasswordOnMismatch\" : true,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordCheckSchedule>(exampleJson)
                        : default(PasswordCheckSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of partition password check schedules
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/CheckSchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionCheckSchedulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PasswordCheckSchedule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionCheckSchedulesAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PasswordCheckSchedule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"ResetPasswordOnMismatch\" : true,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}, {\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"ResetPasswordOnMismatch\" : true,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<PasswordCheckSchedule>>(exampleJson)
                        : default(List<PasswordCheckSchedule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a discovered account
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="accountName">Name of a discovered account. For directory accounts you must also specify the domain name e.g., {accountName}@{domainName}</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredAssetAccount does not belong to the given AssetPartition</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredAccounts/{assetId}/{accountName}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionDiscoveredAccountAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(DiscoveredAssetAccount), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionDiscoveredAccountAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromRoute][Required]string accountName, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DiscoveredAssetAccount));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"Status\" : \"None\",\n  \"AssetPartitionId\" : 6,\n  \"AccountDiscoveryScheduleId\" : 1,\n  \"DomainName\" : \"DomainName\",\n  \"DiscoveredUserId\" : \"DiscoveredUserId\",\n  \"DiscoveredGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"AssetId\" : 0,\n  \"RuleName\" : \"RuleName\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<DiscoveredAssetAccount>(exampleJson)
                        : default(DiscoveredAssetAccount);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets an asset partition&#x27;s discovered accounts
        /// </summary>
        /// <param name="id">Unique ID of a Partition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredAccounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionDiscoveredAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredAssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionDiscoveredAccountsAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredAssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Status\" : \"None\",\n  \"AssetPartitionId\" : 6,\n  \"AccountDiscoveryScheduleId\" : 1,\n  \"DomainName\" : \"DomainName\",\n  \"DiscoveredUserId\" : \"DiscoveredUserId\",\n  \"DiscoveredGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"AssetId\" : 0,\n  \"RuleName\" : \"RuleName\"\n}, {\n  \"Status\" : \"None\",\n  \"AssetPartitionId\" : 6,\n  \"AccountDiscoveryScheduleId\" : 1,\n  \"DomainName\" : \"DomainName\",\n  \"DiscoveredUserId\" : \"DiscoveredUserId\",\n  \"DiscoveredGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"AssetId\" : 0,\n  \"RuleName\" : \"RuleName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredAssetAccount>>(exampleJson)
                        : default(List<DiscoveredAssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets an asset&#x27;s discovered accounts
        /// </summary>
        /// <param name="id">Unique ID of a Partition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredAccounts/{assetId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionDiscoveredAccountsByAssetAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredAssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionDiscoveredAccountsByAssetAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredAssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Status\" : \"None\",\n  \"AssetPartitionId\" : 6,\n  \"AccountDiscoveryScheduleId\" : 1,\n  \"DomainName\" : \"DomainName\",\n  \"DiscoveredUserId\" : \"DiscoveredUserId\",\n  \"DiscoveredGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"AssetId\" : 0,\n  \"RuleName\" : \"RuleName\"\n}, {\n  \"Status\" : \"None\",\n  \"AssetPartitionId\" : 6,\n  \"AccountDiscoveryScheduleId\" : 1,\n  \"DomainName\" : \"DomainName\",\n  \"DiscoveredUserId\" : \"DiscoveredUserId\",\n  \"DiscoveredGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"AssetId\" : 0,\n  \"RuleName\" : \"RuleName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredAssetAccount>>(exampleJson)
                        : default(List<DiscoveredAssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a specific asset discovery job
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="jobId">Unique ID of the asset discovery job</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveryJobs/{jobId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionDiscoveryJobAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetDiscoveryJob), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionDiscoveryJobAsync([FromRoute][Required]int? id, [FromRoute][Required]int? jobId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetDiscoveryJob));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"DirectoryDiscoveryProperties\" : {\n    \"DirectoryId\" : 5,\n    \"DirectoryPlatformDisplayName\" : \"DirectoryPlatformDisplayName\",\n    \"DirectoryPlatformType\" : \"Unknown\",\n    \"DirectoryPlatformId\" : 5,\n    \"DirectoryNetworkAddress\" : \"DirectoryNetworkAddress\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"TaskProperties\" : {\n    \"FailedAssetDiscoveryAttempts\" : 6,\n    \"NextAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasTaskFailure\" : true,\n    \"LastSuccessAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAssetDiscoveryTaskId\" : \"LastAssetDiscoveryTaskId\",\n    \"LastAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"DiscoveryType\" : \"Directory\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"NetworkDiscoveryProperties\" : {\n    \"ScanOptions\" : {\n      \"ScanTimeout\" : 2,\n      \"OsFingerPrint\" : false\n    },\n    \"ScanRules\" : [ {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    }, {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    } ]\n  },\n  \"Rules\" : [ {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  } ],\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1210617418\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetDiscoveryJob>(exampleJson)
                        : default(AssetDiscoveryJob);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of asset discovery jobs
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveryJobs")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionDiscoveryJobsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetDiscoveryJob>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionDiscoveryJobsAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetDiscoveryJob>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"DirectoryDiscoveryProperties\" : {\n    \"DirectoryId\" : 5,\n    \"DirectoryPlatformDisplayName\" : \"DirectoryPlatformDisplayName\",\n    \"DirectoryPlatformType\" : \"Unknown\",\n    \"DirectoryPlatformId\" : 5,\n    \"DirectoryNetworkAddress\" : \"DirectoryNetworkAddress\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"TaskProperties\" : {\n    \"FailedAssetDiscoveryAttempts\" : 6,\n    \"NextAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasTaskFailure\" : true,\n    \"LastSuccessAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAssetDiscoveryTaskId\" : \"LastAssetDiscoveryTaskId\",\n    \"LastAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"DiscoveryType\" : \"Directory\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"NetworkDiscoveryProperties\" : {\n    \"ScanOptions\" : {\n      \"ScanTimeout\" : 2,\n      \"OsFingerPrint\" : false\n    },\n    \"ScanRules\" : [ {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    }, {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    } ]\n  },\n  \"Rules\" : [ {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  } ],\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1210617418\n}, {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"DirectoryDiscoveryProperties\" : {\n    \"DirectoryId\" : 5,\n    \"DirectoryPlatformDisplayName\" : \"DirectoryPlatformDisplayName\",\n    \"DirectoryPlatformType\" : \"Unknown\",\n    \"DirectoryPlatformId\" : 5,\n    \"DirectoryNetworkAddress\" : \"DirectoryNetworkAddress\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"TaskProperties\" : {\n    \"FailedAssetDiscoveryAttempts\" : 6,\n    \"NextAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasTaskFailure\" : true,\n    \"LastSuccessAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAssetDiscoveryTaskId\" : \"LastAssetDiscoveryTaskId\",\n    \"LastAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"DiscoveryType\" : \"Directory\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"NetworkDiscoveryProperties\" : {\n    \"ScanOptions\" : {\n      \"ScanTimeout\" : 2,\n      \"OsFingerPrint\" : false\n    },\n    \"ScanRules\" : [ {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    }, {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    } ]\n  },\n  \"Rules\" : [ {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  } ],\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1210617418\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetDiscoveryJob>>(exampleJson)
                        : default(List<AssetDiscoveryJob>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets all owners of the specified partition
        /// </summary>
        /// <param name="id">Unique identifier of the AssetAccount to get tasks for</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/ManagedBy")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionManagedByAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Identity>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionManagedByAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Identity>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n}, {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Identity>>(exampleJson)
                        : default(List<Identity>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of PartitionProfile</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionProfileByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordProfile), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionProfileByIdAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordProfile));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"AccountPasswordRule\" : {\n    \"AllowedFirstCharacterType\" : \"All\",\n    \"Description\" : \"Description\",\n    \"AllowLowercaseCharacters\" : true,\n    \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n    \"NonAlphaNumericRestrictionType\" : \"Include\",\n    \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n    \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n    \"MinNumericCharacters\" : 51,\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n    \"CreatedByUserId\" : 1,\n    \"MaxConsecutiveUppercaseCharacters\" : 180,\n    \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n    \"AssetPartitionId\" : 6,\n    \"MaxConsecutiveLowercaseCharacters\" : 92,\n    \"MaxConsecutiveAlphabeticCharacters\" : 27,\n    \"MaxConsecutiveNumericCharacters\" : 106,\n    \"MinCharacters\" : 145,\n    \"MinLowercaseCharacters\" : 237,\n    \"AllowNonAlphaNumericCharacters\" : false,\n    \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n    \"AllowNumericCharacters\" : true,\n    \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n    \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n    \"AllowUppercaseCharacters\" : true,\n    \"MinUppercaseCharacters\" : 58,\n    \"MaxCharacters\" : 153,\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 0,\n    \"MinNonAlphaNumericCharacters\" : 188,\n    \"IsSystemOwned\" : true\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"AccountPasswordRuleName\" : \"AccountPasswordRuleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"ResetPasswordOnMismatch\" : true,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"RescheduleForUnscheduledPasswordUpdate\" : true,\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"UpdateComPlusOnPasswordChange\" : true,\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"RequireCurrentPassword\" : true,\n    \"UpdateIisPoolsOnPasswordChange\" : true,\n    \"UpdateWindowsServiceOnPasswordChange\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 41,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"UpdateWindowsTasksOnPasswordChange\" : true,\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"RestartWindowsServiceOnPasswordChange\" : true,\n    \"NotifyOwnersOnly\" : true,\n    \"AllowPasswordChangeWhenReleased\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"CheckScheduleId\" : 5,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0,\n  \"AccountPasswordRuleId\" : 1\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordProfile>(exampleJson)
                        : default(PasswordProfile);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of profiles for a specific partition
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionProfilesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PasswordProfile>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionProfilesAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PasswordProfile>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"AccountPasswordRule\" : {\n    \"AllowedFirstCharacterType\" : \"All\",\n    \"Description\" : \"Description\",\n    \"AllowLowercaseCharacters\" : true,\n    \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n    \"NonAlphaNumericRestrictionType\" : \"Include\",\n    \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n    \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n    \"MinNumericCharacters\" : 51,\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n    \"CreatedByUserId\" : 1,\n    \"MaxConsecutiveUppercaseCharacters\" : 180,\n    \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n    \"AssetPartitionId\" : 6,\n    \"MaxConsecutiveLowercaseCharacters\" : 92,\n    \"MaxConsecutiveAlphabeticCharacters\" : 27,\n    \"MaxConsecutiveNumericCharacters\" : 106,\n    \"MinCharacters\" : 145,\n    \"MinLowercaseCharacters\" : 237,\n    \"AllowNonAlphaNumericCharacters\" : false,\n    \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n    \"AllowNumericCharacters\" : true,\n    \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n    \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n    \"AllowUppercaseCharacters\" : true,\n    \"MinUppercaseCharacters\" : 58,\n    \"MaxCharacters\" : 153,\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 0,\n    \"MinNonAlphaNumericCharacters\" : 188,\n    \"IsSystemOwned\" : true\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"AccountPasswordRuleName\" : \"AccountPasswordRuleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"ResetPasswordOnMismatch\" : true,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"RescheduleForUnscheduledPasswordUpdate\" : true,\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"UpdateComPlusOnPasswordChange\" : true,\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"RequireCurrentPassword\" : true,\n    \"UpdateIisPoolsOnPasswordChange\" : true,\n    \"UpdateWindowsServiceOnPasswordChange\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 41,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"UpdateWindowsTasksOnPasswordChange\" : true,\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"RestartWindowsServiceOnPasswordChange\" : true,\n    \"NotifyOwnersOnly\" : true,\n    \"AllowPasswordChangeWhenReleased\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"CheckScheduleId\" : 5,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0,\n  \"AccountPasswordRuleId\" : 1\n}, {\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"AccountPasswordRule\" : {\n    \"AllowedFirstCharacterType\" : \"All\",\n    \"Description\" : \"Description\",\n    \"AllowLowercaseCharacters\" : true,\n    \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n    \"NonAlphaNumericRestrictionType\" : \"Include\",\n    \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n    \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n    \"MinNumericCharacters\" : 51,\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n    \"CreatedByUserId\" : 1,\n    \"MaxConsecutiveUppercaseCharacters\" : 180,\n    \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n    \"AssetPartitionId\" : 6,\n    \"MaxConsecutiveLowercaseCharacters\" : 92,\n    \"MaxConsecutiveAlphabeticCharacters\" : 27,\n    \"MaxConsecutiveNumericCharacters\" : 106,\n    \"MinCharacters\" : 145,\n    \"MinLowercaseCharacters\" : 237,\n    \"AllowNonAlphaNumericCharacters\" : false,\n    \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n    \"AllowNumericCharacters\" : true,\n    \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n    \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n    \"AllowUppercaseCharacters\" : true,\n    \"MinUppercaseCharacters\" : 58,\n    \"MaxCharacters\" : 153,\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 0,\n    \"MinNonAlphaNumericCharacters\" : 188,\n    \"IsSystemOwned\" : true\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"AccountPasswordRuleName\" : \"AccountPasswordRuleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"ResetPasswordOnMismatch\" : true,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"RescheduleForUnscheduledPasswordUpdate\" : true,\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"UpdateComPlusOnPasswordChange\" : true,\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"RequireCurrentPassword\" : true,\n    \"UpdateIisPoolsOnPasswordChange\" : true,\n    \"UpdateWindowsServiceOnPasswordChange\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 41,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"UpdateWindowsTasksOnPasswordChange\" : true,\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"RestartWindowsServiceOnPasswordChange\" : true,\n    \"NotifyOwnersOnly\" : true,\n    \"AllowPasswordChangeWhenReleased\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"CheckScheduleId\" : 5,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0,\n  \"AccountPasswordRuleId\" : 1\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<PasswordProfile>>(exampleJson)
                        : default(List<PasswordProfile>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a single SshKeyChangeSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique ID of a SshKeyChangeSchedule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">SshKeyChangeSchedule does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyChangeSchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionSshKeyChangeScheduleByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyChangeSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionSshKeyChangeScheduleByIdAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyChangeSchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"GeneratedKeyLength\" : 6,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"GeneratedKeyType\" : \"Unknown\",\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"NotifyOwnersOnly\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"AllowSshKeyChangeWhenReleased\" : true,\n  \"RepeatInterval\" : 1210617418\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyChangeSchedule>(exampleJson)
                        : default(SshKeyChangeSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of partition change schedules
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyChangeSchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionSshKeyChangeSchedulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SshKeyChangeSchedule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionSshKeyChangeSchedulesAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SshKeyChangeSchedule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"GeneratedKeyLength\" : 6,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"GeneratedKeyType\" : \"Unknown\",\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"NotifyOwnersOnly\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"AllowSshKeyChangeWhenReleased\" : true,\n  \"RepeatInterval\" : 1210617418\n}, {\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"GeneratedKeyLength\" : 6,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"GeneratedKeyType\" : \"Unknown\",\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"NotifyOwnersOnly\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"AllowSshKeyChangeWhenReleased\" : true,\n  \"RepeatInterval\" : 1210617418\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SshKeyChangeSchedule>>(exampleJson)
                        : default(List<SshKeyChangeSchedule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a single SshKeyCheckSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique ID of a SshKeyCheckSchedule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">SshKeyCheckSchedule does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyCheckSchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionSshKeyCheckScheduleByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyCheckSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionSshKeyCheckScheduleByIdAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyCheckSchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"ResetSshKeyOnMismatch\" : true,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyCheckSchedule>(exampleJson)
                        : default(SshKeyCheckSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a single SshKeyDiscoverySchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique ID of a SshKeyDiscoverySchedule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">SshKeyDiscoverySchedule does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyDiscoverySchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionSshKeyDiscoveryScheduleByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyDiscoverySchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionSshKeyDiscoveryScheduleByIdAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyDiscoverySchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 21,\n  \"Description\" : \"Description\",\n  \"ProfilesCount\" : 6,\n  \"StartHour\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"AccountsCount\" : 1,\n  \"RepeatDayOfMonth\" : 22,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 494379917\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyDiscoverySchedule>(exampleJson)
                        : default(SshKeyDiscoverySchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of partition Discovery schedules
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyDiscoverySchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionSshKeyDiscoverySchedulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SshKeyDiscoverySchedule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionSshKeyDiscoverySchedulesAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SshKeyDiscoverySchedule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 21,\n  \"Description\" : \"Description\",\n  \"ProfilesCount\" : 6,\n  \"StartHour\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"AccountsCount\" : 1,\n  \"RepeatDayOfMonth\" : 22,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 494379917\n}, {\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 21,\n  \"Description\" : \"Description\",\n  \"ProfilesCount\" : 6,\n  \"StartHour\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"AccountsCount\" : 1,\n  \"RepeatDayOfMonth\" : 22,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 494379917\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SshKeyDiscoverySchedule>>(exampleJson)
                        : default(List<SshKeyDiscoverySchedule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a partition tag
        /// </summary>
        /// <param name="id">Unique ID of the partition</param>
        /// <param name="tagId">Unique ID of the tag</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have PolicyAdmin, AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Tag does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Tags/{tagId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionTagByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PartitionTag), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have PolicyAdmin, AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionTagByIdAsync([FromRoute][Required]int? id, [FromRoute][Required]int? tagId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PartitionTag));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 5,\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"Description\" : \"Description\",\n  \"AssetTaggingRule\" : {\n    \"RuleConditionGroup\" : {\n      \"Children\" : [ {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      }, {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      } ],\n      \"LogicalJoinType\" : \"And\"\n    },\n    \"Description\" : \"Description\",\n    \"Enabled\" : true\n  },\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PartitionTag>(exampleJson)
                        : default(PartitionTag);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a partition tag managed by
        /// </summary>
        /// <param name="id">Unique ID of the tag</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have PolicyAdmin, AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Tag does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/Tags/{id}/ManagedBy")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionTagManagedByAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Identity>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have PolicyAdmin, AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionTagManagedByAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Identity>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n}, {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Identity>>(exampleJson)
                        : default(List<Identity>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of partition tags
        /// </summary>
        /// <param name="id">Unique ID of partition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, in, (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have PolicyAdmin, AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Tags")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPartitionTagsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PartitionTag>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have PolicyAdmin, AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPartitionTagsAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PartitionTag>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 5,\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"Description\" : \"Description\",\n  \"AssetTaggingRule\" : {\n    \"RuleConditionGroup\" : {\n      \"Children\" : [ {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      }, {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      } ],\n      \"LogicalJoinType\" : \"And\"\n    },\n    \"Description\" : \"Description\",\n    \"Enabled\" : true\n  },\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n}, {\n  \"AssetPartitionId\" : 5,\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"Description\" : \"Description\",\n  \"AssetTaggingRule\" : {\n    \"RuleConditionGroup\" : {\n      \"Children\" : [ {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      }, {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      } ],\n      \"LogicalJoinType\" : \"And\"\n    },\n    \"Description\" : \"Description\",\n    \"Enabled\" : true\n  },\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<PartitionTag>>(exampleJson)
                        : default(List<PartitionTag>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets accounts that the specified rule is assigned to
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="ruleId">Unique identifier of the password rule</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">profile schedule not found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/PasswordRules/{ruleId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPasswordRuleAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPasswordRuleAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? ruleId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a specific password rule
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="ruleId">Unique ID of a PasswordRule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">AccountPasswordRule does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/PasswordRules/{ruleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPasswordRuleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AccountPasswordRule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPasswordRuleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? ruleId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AccountPasswordRule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AllowedFirstCharacterType\" : \"All\",\n  \"Description\" : \"Description\",\n  \"AllowLowercaseCharacters\" : true,\n  \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n  \"NonAlphaNumericRestrictionType\" : \"Include\",\n  \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n  \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n  \"MinNumericCharacters\" : 51,\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n  \"CreatedByUserId\" : 1,\n  \"MaxConsecutiveUppercaseCharacters\" : 180,\n  \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n  \"AssetPartitionId\" : 6,\n  \"MaxConsecutiveLowercaseCharacters\" : 92,\n  \"MaxConsecutiveAlphabeticCharacters\" : 27,\n  \"MaxConsecutiveNumericCharacters\" : 106,\n  \"MinCharacters\" : 145,\n  \"MinLowercaseCharacters\" : 237,\n  \"AllowNonAlphaNumericCharacters\" : false,\n  \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n  \"AllowNumericCharacters\" : true,\n  \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n  \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n  \"AllowUppercaseCharacters\" : true,\n  \"MinUppercaseCharacters\" : 58,\n  \"MaxCharacters\" : 153,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 0,\n  \"MinNonAlphaNumericCharacters\" : 188,\n  \"IsSystemOwned\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AccountPasswordRule>(exampleJson)
                        : default(AccountPasswordRule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a specific password rule
        /// </summary>
        /// <param name="ruleId">Unique ID of a PasswordRule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">AccountPasswordRule does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/PasswordRules/{ruleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPasswordRuleByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AccountPasswordRule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPasswordRuleByIdAsync([FromRoute][Required]int? ruleId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AccountPasswordRule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AllowedFirstCharacterType\" : \"All\",\n  \"Description\" : \"Description\",\n  \"AllowLowercaseCharacters\" : true,\n  \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n  \"NonAlphaNumericRestrictionType\" : \"Include\",\n  \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n  \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n  \"MinNumericCharacters\" : 51,\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n  \"CreatedByUserId\" : 1,\n  \"MaxConsecutiveUppercaseCharacters\" : 180,\n  \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n  \"AssetPartitionId\" : 6,\n  \"MaxConsecutiveLowercaseCharacters\" : 92,\n  \"MaxConsecutiveAlphabeticCharacters\" : 27,\n  \"MaxConsecutiveNumericCharacters\" : 106,\n  \"MinCharacters\" : 145,\n  \"MinLowercaseCharacters\" : 237,\n  \"AllowNonAlphaNumericCharacters\" : false,\n  \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n  \"AllowNumericCharacters\" : true,\n  \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n  \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n  \"AllowUppercaseCharacters\" : true,\n  \"MinUppercaseCharacters\" : 58,\n  \"MaxCharacters\" : 153,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 0,\n  \"MinNonAlphaNumericCharacters\" : 188,\n  \"IsSystemOwned\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AccountPasswordRule>(exampleJson)
                        : default(AccountPasswordRule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of password rules
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/PasswordRules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetPasswordRulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AccountPasswordRule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetPasswordRulesAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AccountPasswordRule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AllowedFirstCharacterType\" : \"All\",\n  \"Description\" : \"Description\",\n  \"AllowLowercaseCharacters\" : true,\n  \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n  \"NonAlphaNumericRestrictionType\" : \"Include\",\n  \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n  \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n  \"MinNumericCharacters\" : 51,\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n  \"CreatedByUserId\" : 1,\n  \"MaxConsecutiveUppercaseCharacters\" : 180,\n  \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n  \"AssetPartitionId\" : 6,\n  \"MaxConsecutiveLowercaseCharacters\" : 92,\n  \"MaxConsecutiveAlphabeticCharacters\" : 27,\n  \"MaxConsecutiveNumericCharacters\" : 106,\n  \"MinCharacters\" : 145,\n  \"MinLowercaseCharacters\" : 237,\n  \"AllowNonAlphaNumericCharacters\" : false,\n  \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n  \"AllowNumericCharacters\" : true,\n  \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n  \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n  \"AllowUppercaseCharacters\" : true,\n  \"MinUppercaseCharacters\" : 58,\n  \"MaxCharacters\" : 153,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 0,\n  \"MinNonAlphaNumericCharacters\" : 188,\n  \"IsSystemOwned\" : true\n}, {\n  \"AllowedFirstCharacterType\" : \"All\",\n  \"Description\" : \"Description\",\n  \"AllowLowercaseCharacters\" : true,\n  \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n  \"NonAlphaNumericRestrictionType\" : \"Include\",\n  \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n  \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n  \"MinNumericCharacters\" : 51,\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n  \"CreatedByUserId\" : 1,\n  \"MaxConsecutiveUppercaseCharacters\" : 180,\n  \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n  \"AssetPartitionId\" : 6,\n  \"MaxConsecutiveLowercaseCharacters\" : 92,\n  \"MaxConsecutiveAlphabeticCharacters\" : 27,\n  \"MaxConsecutiveNumericCharacters\" : 106,\n  \"MinCharacters\" : 145,\n  \"MinLowercaseCharacters\" : 237,\n  \"AllowNonAlphaNumericCharacters\" : false,\n  \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n  \"AllowNumericCharacters\" : true,\n  \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n  \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n  \"AllowUppercaseCharacters\" : true,\n  \"MinUppercaseCharacters\" : 58,\n  \"MaxCharacters\" : 153,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 0,\n  \"MinNonAlphaNumericCharacters\" : 188,\n  \"IsSystemOwned\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AccountPasswordRule>>(exampleJson)
                        : default(List<AccountPasswordRule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the account password rule on the selected partition profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the PartitionProfile</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/PasswordRule")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetProfileAccountPasswordRuleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AccountPasswordRule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetProfileAccountPasswordRuleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AccountPasswordRule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AllowedFirstCharacterType\" : \"All\",\n  \"Description\" : \"Description\",\n  \"AllowLowercaseCharacters\" : true,\n  \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n  \"NonAlphaNumericRestrictionType\" : \"Include\",\n  \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n  \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n  \"MinNumericCharacters\" : 51,\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n  \"CreatedByUserId\" : 1,\n  \"MaxConsecutiveUppercaseCharacters\" : 180,\n  \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n  \"AssetPartitionId\" : 6,\n  \"MaxConsecutiveLowercaseCharacters\" : 92,\n  \"MaxConsecutiveAlphabeticCharacters\" : 27,\n  \"MaxConsecutiveNumericCharacters\" : 106,\n  \"MinCharacters\" : 145,\n  \"MinLowercaseCharacters\" : 237,\n  \"AllowNonAlphaNumericCharacters\" : false,\n  \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n  \"AllowNumericCharacters\" : true,\n  \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n  \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n  \"AllowUppercaseCharacters\" : true,\n  \"MinUppercaseCharacters\" : 58,\n  \"MaxCharacters\" : 153,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 0,\n  \"MinNonAlphaNumericCharacters\" : 188,\n  \"IsSystemOwned\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AccountPasswordRule>(exampleJson)
                        : default(AccountPasswordRule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the accounts that are explicitly using this profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the PartitionProfile</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetProfileAssetAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetProfileAssetAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the Assets that are explicitly using this profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the PartitionProfile</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/Assets")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetProfileAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Asset>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetProfileAssetsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Asset>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}, {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Asset>>(exampleJson)
                        : default(List<Asset>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a profile
        /// </summary>
        /// <param name="id">Unique ID of PartitionProfile</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/Profiles/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetProfileByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordProfile), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetProfileByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordProfile));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"AccountPasswordRule\" : {\n    \"AllowedFirstCharacterType\" : \"All\",\n    \"Description\" : \"Description\",\n    \"AllowLowercaseCharacters\" : true,\n    \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n    \"NonAlphaNumericRestrictionType\" : \"Include\",\n    \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n    \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n    \"MinNumericCharacters\" : 51,\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n    \"CreatedByUserId\" : 1,\n    \"MaxConsecutiveUppercaseCharacters\" : 180,\n    \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n    \"AssetPartitionId\" : 6,\n    \"MaxConsecutiveLowercaseCharacters\" : 92,\n    \"MaxConsecutiveAlphabeticCharacters\" : 27,\n    \"MaxConsecutiveNumericCharacters\" : 106,\n    \"MinCharacters\" : 145,\n    \"MinLowercaseCharacters\" : 237,\n    \"AllowNonAlphaNumericCharacters\" : false,\n    \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n    \"AllowNumericCharacters\" : true,\n    \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n    \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n    \"AllowUppercaseCharacters\" : true,\n    \"MinUppercaseCharacters\" : 58,\n    \"MaxCharacters\" : 153,\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 0,\n    \"MinNonAlphaNumericCharacters\" : 188,\n    \"IsSystemOwned\" : true\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"AccountPasswordRuleName\" : \"AccountPasswordRuleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"ResetPasswordOnMismatch\" : true,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"RescheduleForUnscheduledPasswordUpdate\" : true,\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"UpdateComPlusOnPasswordChange\" : true,\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"RequireCurrentPassword\" : true,\n    \"UpdateIisPoolsOnPasswordChange\" : true,\n    \"UpdateWindowsServiceOnPasswordChange\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 41,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"UpdateWindowsTasksOnPasswordChange\" : true,\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"RestartWindowsServiceOnPasswordChange\" : true,\n    \"NotifyOwnersOnly\" : true,\n    \"AllowPasswordChangeWhenReleased\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"CheckScheduleId\" : 5,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0,\n  \"AccountPasswordRuleId\" : 1\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordProfile>(exampleJson)
                        : default(PasswordProfile);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the change schedule on the selected partition profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the PartitionProfile</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/ChangeSchedule")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetProfileChangeScheduleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordChangeSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetProfileChangeScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordChangeSchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"RescheduleForUnscheduledPasswordUpdate\" : true,\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"UpdateComPlusOnPasswordChange\" : true,\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"RequireCurrentPassword\" : true,\n  \"UpdateIisPoolsOnPasswordChange\" : true,\n  \"UpdateWindowsServiceOnPasswordChange\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 41,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"UpdateWindowsTasksOnPasswordChange\" : true,\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"RestartWindowsServiceOnPasswordChange\" : true,\n  \"NotifyOwnersOnly\" : true,\n  \"AllowPasswordChangeWhenReleased\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordChangeSchedule>(exampleJson)
                        : default(PasswordChangeSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the check schedule on the selected partition profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the PartitionProfile</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/CheckSchedule")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetProfileCheckScheduleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordCheckSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetProfileCheckScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordCheckSchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"ResetPasswordOnMismatch\" : true,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordCheckSchedule>(exampleJson)
                        : default(PasswordCheckSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a specific profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/SyncGroups/{syncGroupId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetProfileSyncGroupByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordSyncGroup), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetProfileSyncGroupByIdAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordSyncGroup));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordSyncGroup>(exampleJson)
                        : default(PasswordSyncGroup);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of sync groups for a specific profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/SyncGroups")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetProfileSyncGroupsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PasswordSyncGroup>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetProfileSyncGroupsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PasswordSyncGroup>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}, {\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<PasswordSyncGroup>>(exampleJson)
                        : default(List<PasswordSyncGroup>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets accounts that the specified schedule is assigned to
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the profile schedule</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">profile schedule not found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyChangeSchedules/{scheduleId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyChangeScheduleAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyChangeScheduleAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the change schedule on the selected partition profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the SshKeyProfile</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">SshKeyProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/ChangeSchedule")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyChangeScheduleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyChangeSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyChangeScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyChangeSchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"GeneratedKeyLength\" : 6,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"GeneratedKeyType\" : \"Unknown\",\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"NotifyOwnersOnly\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"AllowSshKeyChangeWhenReleased\" : true,\n  \"RepeatInterval\" : 1210617418\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyChangeSchedule>(exampleJson)
                        : default(SshKeyChangeSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a single SshKeyChangeSchedule
        /// </summary>
        /// <param name="id">Unique ID of a SshKeyChangeSchedule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">SshKeyChangeSchedule does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/SshKeyChangeSchedules/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyChangeScheduleByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyChangeSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyChangeScheduleByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyChangeSchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"GeneratedKeyLength\" : 6,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"GeneratedKeyType\" : \"Unknown\",\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"NotifyOwnersOnly\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"AllowSshKeyChangeWhenReleased\" : true,\n  \"RepeatInterval\" : 1210617418\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyChangeSchedule>(exampleJson)
                        : default(SshKeyChangeSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets accounts that the specified schedule is assigned to
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the profile schedule</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">profile schedule not found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyCheckSchedules/{scheduleId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyCheckScheduleAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyCheckScheduleAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the check schedule on the selected partition profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the SshKeyProfile</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">SshKeyProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/CheckSchedule")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyCheckScheduleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyCheckSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyCheckScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyCheckSchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"ResetSshKeyOnMismatch\" : true,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyCheckSchedule>(exampleJson)
                        : default(SshKeyCheckSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a single SshKeyCheckSchedule
        /// </summary>
        /// <param name="id">Unique ID of a SshKeyCheckSchedule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">SshKeyCheckSchedule does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/SshKeyCheckSchedules/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyCheckScheduleByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyCheckSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyCheckScheduleByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyCheckSchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"ResetSshKeyOnMismatch\" : true,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyCheckSchedule>(exampleJson)
                        : default(SshKeyCheckSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of partition SSH key check schedules
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyCheckSchedules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyCheckSchedulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SshKeyCheckSchedule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyCheckSchedulesAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SshKeyCheckSchedule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"ResetSshKeyOnMismatch\" : true,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}, {\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"ResetSshKeyOnMismatch\" : true,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SshKeyCheckSchedule>>(exampleJson)
                        : default(List<SshKeyCheckSchedule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets accounts that the specified schedule is assigned to
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the profile schedule</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], (). Use \\ to escape quotes in strings.</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">profile schedule not found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyDiscoverySchedules/{scheduleId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyDiscoveryScheduleAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyDiscoveryScheduleAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a single SshKeyDiscoverySchedule
        /// </summary>
        /// <param name="id">Unique ID of a SshKeyDiscoverySchedule</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">SshKeyDiscoverySchedule does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/SshKeyDiscoverySchedules/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyDiscoveryScheduleByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyDiscoverySchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyDiscoveryScheduleByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyDiscoverySchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 21,\n  \"Description\" : \"Description\",\n  \"ProfilesCount\" : 6,\n  \"StartHour\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"AccountsCount\" : 1,\n  \"RepeatDayOfMonth\" : 22,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 494379917\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyDiscoverySchedule>(exampleJson)
                        : default(SshKeyDiscoverySchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the accounts that are explicitly using this SSH key profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the PartitionProfile</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyProfileAssetAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyProfileAssetAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the Assets that are explicitly using this SSH key profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the SshKeyProfile</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">SshKeyProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/Assets")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyProfileAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Asset>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyProfileAssetsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Asset>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}, {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Asset>>(exampleJson)
                        : default(List<Asset>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets an SSH key profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of SshKeyProfile</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">SshKeyProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyProfileByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyProfile), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyProfileByIdAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyProfile));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"DiscoverySchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 21,\n    \"Description\" : \"Description\",\n    \"ProfilesCount\" : 6,\n    \"StartHour\" : 21,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"AccountsCount\" : 1,\n    \"RepeatDayOfMonth\" : 22,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 5,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 494379917\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"ResetSshKeyOnMismatch\" : true,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 16,\n    \"GeneratedKeyLength\" : 6,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"RepeatDayOfMonth\" : 7,\n    \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 54,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"GeneratedKeyType\" : \"Unknown\",\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"NotifyOwnersOnly\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 1,\n    \"TimeOfDayType\" : \"Instant\",\n    \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"AllowSshKeyChangeWhenReleased\" : true,\n    \"RepeatInterval\" : 1210617418\n  },\n  \"Owners\" : [ {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  }, {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"DiscoveryScheduleId\" : 5,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"DiscoveryScheduleName\" : \"DiscoveryScheduleName\",\n  \"CheckScheduleId\" : 1,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyProfile>(exampleJson)
                        : default(SshKeyProfile);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets the discovery schedule on the selected partition profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the SshKeyProfile</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">SshKeyProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/DiscoverySchedule")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyProfileDiscoveryScheduleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyDiscoverySchedule), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyProfileDiscoveryScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyDiscoverySchedule));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 21,\n  \"Description\" : \"Description\",\n  \"ProfilesCount\" : 6,\n  \"StartHour\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"AccountsCount\" : 1,\n  \"RepeatDayOfMonth\" : 22,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 494379917\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyDiscoverySchedule>(exampleJson)
                        : default(SshKeyDiscoverySchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of SSH key profiles for a specific partition
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeyProfilesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SshKeyProfile>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeyProfilesAsync([FromRoute][Required]int? id, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SshKeyProfile>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"DiscoverySchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 21,\n    \"Description\" : \"Description\",\n    \"ProfilesCount\" : 6,\n    \"StartHour\" : 21,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"AccountsCount\" : 1,\n    \"RepeatDayOfMonth\" : 22,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 5,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 494379917\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"ResetSshKeyOnMismatch\" : true,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 16,\n    \"GeneratedKeyLength\" : 6,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"RepeatDayOfMonth\" : 7,\n    \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 54,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"GeneratedKeyType\" : \"Unknown\",\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"NotifyOwnersOnly\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 1,\n    \"TimeOfDayType\" : \"Instant\",\n    \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"AllowSshKeyChangeWhenReleased\" : true,\n    \"RepeatInterval\" : 1210617418\n  },\n  \"Owners\" : [ {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  }, {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"DiscoveryScheduleId\" : 5,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"DiscoveryScheduleName\" : \"DiscoveryScheduleName\",\n  \"CheckScheduleId\" : 1,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0\n}, {\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"DiscoverySchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 21,\n    \"Description\" : \"Description\",\n    \"ProfilesCount\" : 6,\n    \"StartHour\" : 21,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"AccountsCount\" : 1,\n    \"RepeatDayOfMonth\" : 22,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 5,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 494379917\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"ResetSshKeyOnMismatch\" : true,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 16,\n    \"GeneratedKeyLength\" : 6,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"RepeatDayOfMonth\" : 7,\n    \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 54,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"GeneratedKeyType\" : \"Unknown\",\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"NotifyOwnersOnly\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 1,\n    \"TimeOfDayType\" : \"Instant\",\n    \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"AllowSshKeyChangeWhenReleased\" : true,\n    \"RepeatInterval\" : 1210617418\n  },\n  \"Owners\" : [ {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  }, {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"DiscoveryScheduleId\" : 5,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"DiscoveryScheduleName\" : \"DiscoveryScheduleName\",\n  \"CheckScheduleId\" : 1,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SshKeyProfile>>(exampleJson)
                        : default(List<SshKeyProfile>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets all accounts that belong to a profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/SshKeySyncGroups/{syncGroupId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeySyncGroupAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SshKeySyncGroupAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeySyncGroupAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SshKeySyncGroupAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IsServiceAccount\" : true,\n  \"Description\" : \"Description\",\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"IsSynchronized\" : true,\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SyncPriority\" : 171976544,\n  \"LinkedUsersCount\" : 5,\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"AccountType\" : \"Asset\",\n  \"Name\" : \"Name\",\n  \"NotifyOwnersOnly\" : true,\n  \"HasSshKey\" : true,\n  \"TaskProperties\" : {\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 1,\n  \"Disabled\" : true,\n  \"HasPassword\" : true\n}, {\n  \"IsServiceAccount\" : true,\n  \"Description\" : \"Description\",\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"IsSynchronized\" : true,\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SyncPriority\" : 171976544,\n  \"LinkedUsersCount\" : 5,\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"AccountType\" : \"Asset\",\n  \"Name\" : \"Name\",\n  \"NotifyOwnersOnly\" : true,\n  \"HasSshKey\" : true,\n  \"TaskProperties\" : {\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 1,\n  \"Disabled\" : true,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SshKeySyncGroupAccount>>(exampleJson)
                        : default(List<SshKeySyncGroupAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a specific profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/SshKeySyncGroups/{syncGroupId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeySyncGroupByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeySyncGroup), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeySyncGroupByIdAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeySyncGroup));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeySyncGroup>(exampleJson)
                        : default(SshKeySyncGroup);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a list of sync groups for a specific profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/SshKeySyncGroups")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSshKeySyncGroupsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SshKeySyncGroup>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSshKeySyncGroupsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SshKeySyncGroup>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}, {\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SshKeySyncGroup>>(exampleJson)
                        : default(List<SshKeySyncGroup>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets all accounts that belong to a profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="filter">Filter results. Available operators: eq, ne, gt, ge, lt, le, and, or, not, contains, ieq, icontains, in [ {item1}, {item2}, etc], ()</param>
        /// <param name="page">Which page (starting with 0) of data to return</param>
        /// <param name="limit">The size of a page of data</param>
        /// <param name="count">When specified, the method will return a single integer value representing the total number of items that match the given filter criteria. If specified, the fields and orderby parameter values are ignored.</param>
        /// <param name="fields">List of property names (comma-separated) to include in entity output. Prepend list with - to exclude from output.</param>
        /// <param name="orderby">List of property names (comma-separated) to sort entities by. Prepend properties with - for  descending.</param>
        /// <param name="q">Search all string fields for the specified value</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/SyncGroups/{syncGroupId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSyncGroupAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SyncGroupAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSyncGroupAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromQuery]string filter, [FromQuery]int? page, [FromQuery]int? limit, [FromQuery]bool? count, [FromQuery]string fields, [FromQuery]string orderby, [FromQuery]string q)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SyncGroupAccount>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IsServiceAccount\" : true,\n  \"Description\" : \"Description\",\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"IsSynchronized\" : true,\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SyncPriority\" : 171976544,\n  \"LinkedUsersCount\" : 5,\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"AccountType\" : \"Asset\",\n  \"Name\" : \"Name\",\n  \"NotifyOwnersOnly\" : true,\n  \"HasSshKey\" : true,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"FailedPasswordChangeAttempts\" : 6,\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 1,\n  \"Disabled\" : true,\n  \"HasPassword\" : true\n}, {\n  \"IsServiceAccount\" : true,\n  \"Description\" : \"Description\",\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"IsSynchronized\" : true,\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SyncPriority\" : 171976544,\n  \"LinkedUsersCount\" : 5,\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"AccountType\" : \"Asset\",\n  \"Name\" : \"Name\",\n  \"NotifyOwnersOnly\" : true,\n  \"HasSshKey\" : true,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"FailedPasswordChangeAttempts\" : 6,\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 1,\n  \"Disabled\" : true,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SyncGroupAccount>>(exampleJson)
                        : default(List<SyncGroupAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a specific profile sync group
        /// </summary>
        /// <param name="id">Unique ID of the sync group</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/SyncGroups/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetSyncGroupsByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordSyncGroup), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetSyncGroupsByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordSyncGroup));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordSyncGroup>(exampleJson)
                        : default(PasswordSyncGroup);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a partition tag
        /// </summary>
        /// <param name="id">Unique ID of the tag</param>
        /// <param name="fields">List of property names to include in entity output</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have PolicyAdmin, AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission</response>
        /// <response code="404">Tag does not exist</response>
        [HttpGet]
        [Route("/service/core/v4/AssetPartitions/Tags/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsGetTagByIdAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PartitionTag), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have PolicyAdmin, AssetAdmin, PartitionAdmin, ApplicationAuditor or Auditor permission")]
        public virtual IActionResult AssetPartitionsGetTagByIdAsync([FromRoute][Required]int? id, [FromQuery]string fields)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PartitionTag));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 5,\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"Description\" : \"Description\",\n  \"AssetTaggingRule\" : {\n    \"RuleConditionGroup\" : {\n      \"Children\" : [ {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      }, {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      } ],\n      \"LogicalJoinType\" : \"And\"\n    },\n    \"Description\" : \"Description\",\n    \"Enabled\" : true\n  },\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PartitionTag>(exampleJson)
                        : default(PartitionTag);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Marks a discovered service as ignored
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="serviceName">Name of a discovered service. For directory accounts you must also specify the domain name e.g., {accountName}@{domainName}</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredService does not belong to the given AssetPartition</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredServices/{assetId}/{serviceName}/Ignore")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsIgnoreDiscoveredServiceAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(DiscoveredService), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsIgnoreDiscoveredServiceAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromRoute][Required]string serviceName)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DiscoveredService));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"AccountId\" : 1,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"IsServiceEnabled\" : true,\n  \"IsDependentAccount\" : true,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"DiscoveredAccount\" : \"DiscoveredAccount\",\n  \"AssetName\" : \"AssetName\",\n  \"ServiceDisplayName\" : \"ServiceDisplayName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AccountStatus\" : \"None\",\n  \"ServiceName\" : \"ServiceName\",\n  \"ServiceType\" : \"Unknown\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"IsIgnored\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<DiscoveredService>(exampleJson)
                        : default(DiscoveredService);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Processes multiple asset account ignore requests
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="body">Discovered asset accounts to process</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredAccounts/BatchIgnore")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsIgnoreMultipleAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredAssetAccountBatchResponse>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsIgnoreMultipleAccountsAsync([FromRoute][Required]int? id, [FromBody]List<DiscoveredAssetAccount> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredAssetAccountBatchResponse>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Response\" : {\n    \"Status\" : \"None\",\n    \"AssetPartitionId\" : 6,\n    \"AccountDiscoveryScheduleId\" : 1,\n    \"DomainName\" : \"DomainName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"AssetName\" : \"AssetName\",\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"AssetId\" : 0,\n    \"RuleName\" : \"RuleName\"\n  },\n  \"StatusCodeNumber\" : 0,\n  \"IsSuccess\" : true,\n  \"Error\" : {\n    \"Message\" : \"Message\",\n    \"Code\" : 6\n  },\n  \"StatusCode\" : \"Continue\"\n}, {\n  \"Response\" : {\n    \"Status\" : \"None\",\n    \"AssetPartitionId\" : 6,\n    \"AccountDiscoveryScheduleId\" : 1,\n    \"DomainName\" : \"DomainName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"AssetName\" : \"AssetName\",\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"AssetId\" : 0,\n    \"RuleName\" : \"RuleName\"\n  },\n  \"StatusCodeNumber\" : 0,\n  \"IsSuccess\" : true,\n  \"Error\" : {\n    \"Message\" : \"Message\",\n    \"Code\" : 6\n  },\n  \"StatusCode\" : \"Continue\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredAssetAccountBatchResponse>>(exampleJson)
                        : default(List<DiscoveredAssetAccountBatchResponse>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Marks a discovered account as ignored
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="accountName">Name of a discovered account. For directory accounts you must also specify the domain name e.g., {accountName}@{domainName}</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredAssetAccount does not belong to the given AssetPartition</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredAccounts/{assetId}/{accountName}/Ignore")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsIgnorePartitionDiscoveredAccountAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(DiscoveredAssetAccount), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsIgnorePartitionDiscoveredAccountAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromRoute][Required]string accountName)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DiscoveredAssetAccount));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"Status\" : \"None\",\n  \"AssetPartitionId\" : 6,\n  \"AccountDiscoveryScheduleId\" : 1,\n  \"DomainName\" : \"DomainName\",\n  \"DiscoveredUserId\" : \"DiscoveredUserId\",\n  \"DiscoveredGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"AssetId\" : 0,\n  \"RuleName\" : \"RuleName\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<DiscoveredAssetAccount>(exampleJson)
                        : default(DiscoveredAssetAccount);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Processes multiple asset account manage requests
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="body">Parameters for managing multiple discovered accounts</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredAccounts/BatchManage")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsManageMultipleAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ManagedDiscoveredAssetAccountBatchResponse>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsManageMultipleAccountsAsync([FromRoute][Required]int? id, [FromBody]BatchManageParameters body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ManagedDiscoveredAssetAccountBatchResponse>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Response\" : {\n    \"Description\" : \"Description\",\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"Name\" : \"Name\",\n    \"PasswordProfile\" : {\n      \"Id\" : 5,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 5,\n      \"Name\" : \"Name\"\n    },\n    \"CreatedByUserId\" : 6,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedRestoreAccountAttempts\" : 5,\n      \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedSshKeyRevokeAttempts\" : 1,\n      \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n      \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedPasswordChangeAttempts\" : 1,\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"FailedPasswordCheckAttempts\" : 1,\n      \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n      \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedSuspendAccountAttempts\" : 4,\n      \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n      \"HasAccountTaskFailure\" : true,\n      \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedSshKeyCheckAttempts\" : 1,\n      \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n      \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedSshKeyDiscoveryAttempts\" : 7,\n      \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SshKeySyncGroup\" : {\n      \"Priority\" : 7,\n      \"Id\" : 4,\n      \"Disabled\" : true,\n      \"Name\" : \"Name\"\n    },\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"Disabled\" : true,\n    \"SyncGroup\" : {\n      \"Priority\" : 2,\n      \"Id\" : 3,\n      \"Disabled\" : true,\n      \"Name\" : \"Name\"\n    },\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ],\n    \"IsServiceAccount\" : true,\n    \"DiscoveredProperties\" : {\n      \"AccountDiscoveryScheduleId\" : 9,\n      \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"DiscoveredUserId\" : \"DiscoveredUserId\",\n      \"DiscoveredGroups\" : [ {\n        \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n        \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n        \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n      }, {\n        \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n        \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n        \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n      } ]\n    },\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"DomainName\" : \"DomainName\",\n    \"DirectoryProperties\" : {\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\"\n    },\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"SharedServiceAccount\" : true,\n    \"HasSshKey\" : true,\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 2,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 7,\n      \"Name\" : \"Name\"\n    },\n    \"Id\" : 0,\n    \"HasPassword\" : true\n  },\n  \"StatusCodeNumber\" : 0,\n  \"IsSuccess\" : true,\n  \"Request\" : {\n    \"Status\" : \"None\",\n    \"AssetPartitionId\" : 6,\n    \"AccountDiscoveryScheduleId\" : 1,\n    \"DomainName\" : \"DomainName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"AssetName\" : \"AssetName\",\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"AssetId\" : 0,\n    \"RuleName\" : \"RuleName\"\n  },\n  \"Error\" : {\n    \"Message\" : \"Message\",\n    \"Code\" : 6\n  },\n  \"StatusCode\" : \"Continue\"\n}, {\n  \"Response\" : {\n    \"Description\" : \"Description\",\n    \"ManagedBy\" : [ {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    }, {\n      \"IdentityProviderId\" : 4,\n      \"FullDisplayName\" : \"FullDisplayName\",\n      \"DomainName\" : \"DomainName\",\n      \"DisplayName\" : \"DisplayName\",\n      \"IdentityProviderName\" : \"IdentityProviderName\",\n      \"Id\" : 0,\n      \"EmailAddress\" : \"EmailAddress\",\n      \"IsSystemOwned\" : true,\n      \"Name\" : \"Name\"\n    } ],\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"Name\" : \"Name\",\n    \"PasswordProfile\" : {\n      \"Id\" : 5,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 5,\n      \"Name\" : \"Name\"\n    },\n    \"CreatedByUserId\" : 6,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedRestoreAccountAttempts\" : 5,\n      \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedSshKeyRevokeAttempts\" : 1,\n      \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n      \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedPasswordChangeAttempts\" : 1,\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"FailedPasswordCheckAttempts\" : 1,\n      \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n      \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedSuspendAccountAttempts\" : 4,\n      \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n      \"HasAccountTaskFailure\" : true,\n      \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedSshKeyCheckAttempts\" : 1,\n      \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n      \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"FailedSshKeyDiscoveryAttempts\" : 7,\n      \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SshKeySyncGroup\" : {\n      \"Priority\" : 7,\n      \"Id\" : 4,\n      \"Disabled\" : true,\n      \"Name\" : \"Name\"\n    },\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"Disabled\" : true,\n    \"SyncGroup\" : {\n      \"Priority\" : 2,\n      \"Id\" : 3,\n      \"Disabled\" : true,\n      \"Name\" : \"Name\"\n    },\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ],\n    \"IsServiceAccount\" : true,\n    \"DiscoveredProperties\" : {\n      \"AccountDiscoveryScheduleId\" : 9,\n      \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"DiscoveredUserId\" : \"DiscoveredUserId\",\n      \"DiscoveredGroups\" : [ {\n        \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n        \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n        \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n      }, {\n        \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n        \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n        \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n      } ]\n    },\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"DomainName\" : \"DomainName\",\n    \"DirectoryProperties\" : {\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\"\n    },\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"SharedServiceAccount\" : true,\n    \"HasSshKey\" : true,\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 2,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 7,\n      \"Name\" : \"Name\"\n    },\n    \"Id\" : 0,\n    \"HasPassword\" : true\n  },\n  \"StatusCodeNumber\" : 0,\n  \"IsSuccess\" : true,\n  \"Request\" : {\n    \"Status\" : \"None\",\n    \"AssetPartitionId\" : 6,\n    \"AccountDiscoveryScheduleId\" : 1,\n    \"DomainName\" : \"DomainName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"AssetName\" : \"AssetName\",\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"AssetId\" : 0,\n    \"RuleName\" : \"RuleName\"\n  },\n  \"Error\" : {\n    \"Message\" : \"Message\",\n    \"Code\" : 6\n  },\n  \"StatusCode\" : \"Continue\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<ManagedDiscoveredAssetAccountBatchResponse>>(exampleJson)
                        : default(List<ManagedDiscoveredAssetAccountBatchResponse>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Brings a discovered account under management
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="accountName">Name of a discovered account. For directory accounts you must also specify the domain name e.g., {accountName}@{domainName}</param>
        /// <param name="body">Additional optional parameters for configuring the new account</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredAssetAccount does not belong to the given AssetPartition</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredAccounts/{assetId}/{accountName}/Manage")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsManagePartitionDiscoveredAccountAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetAccount), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsManagePartitionDiscoveredAccountAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromRoute][Required]string accountName, [FromBody]AccountTemplate body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetAccount));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetAccount>(exampleJson)
                        : default(AssetAccount);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add/Remove assets assigned to an existing account discovery schedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the account discovery schedule</param>
        /// <param name="operation">Operation to perform on the list</param>
        /// <param name="body">Users to assign to the account discovery schedule</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Updated assets not found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/AccountDiscoverySchedules/{scheduleId}/Assets/{operation}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsModifyAccountDiscoveryAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Asset>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsModifyAccountDiscoveryAssetsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromRoute][Required]ListOperation operation, [FromBody]List<Asset> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Asset>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}, {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Asset>>(exampleJson)
                        : default(List<Asset>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add/Remove profile schedule&#x27;s rules
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the profile schedule</param>
        /// <param name="operation">Operation to perform on the list</param>
        /// <param name="body">rules to assign to the profile schedule</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Updated rules not found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/AccountDiscoverySchedules/{scheduleId}/Rules/{operation}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsModifyAccountDiscoveryRulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AccountDiscoveryRule>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsModifyAccountDiscoveryRulesAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromRoute][Required]ListOperation operation, [FromBody]List<AccountDiscoveryRule> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AccountDiscoveryRule>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"UnixAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"GroupFilter\" : \"GroupFilter\",\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n      \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"AutoManageDiscoveredAccounts\" : true,\n  \"DirectoryAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n      \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n      \"GroupFilter\" : \"GroupFilter\",\n      \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n    },\n    \"SearchName\" : \"SearchName\",\n    \"Groups\" : [ \"Groups\", \"Groups\" ],\n    \"SearchScope\" : \"OneLevel\",\n    \"SearchBase\" : \"SearchBase\",\n    \"SearchNameType\" : \"StartsWith\",\n    \"RuleType\" : \"Name\",\n    \"LdapFilter\" : \"LdapFilter\"\n  },\n  \"StarlingConnectAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"GroupFilter\" : \"GroupFilter\",\n      \"RoleFilter\" : \"RoleFilter\"\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"WindowsAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n      \"GroupFilter\" : \"GroupFilter\",\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"Name\" : \"Name\",\n  \"AccountTemplate\" : {\n    \"ProfileId\" : 0,\n    \"SshKeyProfileName\" : \"SshKeyProfileName\",\n    \"InitialPassword\" : \"InitialPassword\",\n    \"SshKeySyncGroupPriority\" : 2,\n    \"Description\" : \"Description\",\n    \"AllowSessionRelease\" : true,\n    \"SshKeySyncGroupId\" : 5,\n    \"SyncGroupName\" : \"SyncGroupName\",\n    \"InitialSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ProfileName\" : \"ProfileName\",\n    \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n    \"SharedServiceAccount\" : false,\n    \"SshKeyProfileId\" : 6,\n    \"AllowPasswordRelease\" : true,\n    \"HasInitialPassword\" : true,\n    \"AllowSshKeyRelease\" : true,\n    \"SyncGroupId\" : 1,\n    \"SetInitialSshKey\" : true,\n    \"SetInitialPassword\" : true,\n    \"SyncGroupPriority\" : 5,\n    \"HasInitialSshKey\" : true,\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ]\n  }\n}, {\n  \"UnixAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"GroupFilter\" : \"GroupFilter\",\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n      \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"AutoManageDiscoveredAccounts\" : true,\n  \"DirectoryAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n      \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n      \"GroupFilter\" : \"GroupFilter\",\n      \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n    },\n    \"SearchName\" : \"SearchName\",\n    \"Groups\" : [ \"Groups\", \"Groups\" ],\n    \"SearchScope\" : \"OneLevel\",\n    \"SearchBase\" : \"SearchBase\",\n    \"SearchNameType\" : \"StartsWith\",\n    \"RuleType\" : \"Name\",\n    \"LdapFilter\" : \"LdapFilter\"\n  },\n  \"StarlingConnectAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"GroupFilter\" : \"GroupFilter\",\n      \"RoleFilter\" : \"RoleFilter\"\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"WindowsAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n      \"GroupFilter\" : \"GroupFilter\",\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"Name\" : \"Name\",\n  \"AccountTemplate\" : {\n    \"ProfileId\" : 0,\n    \"SshKeyProfileName\" : \"SshKeyProfileName\",\n    \"InitialPassword\" : \"InitialPassword\",\n    \"SshKeySyncGroupPriority\" : 2,\n    \"Description\" : \"Description\",\n    \"AllowSessionRelease\" : true,\n    \"SshKeySyncGroupId\" : 5,\n    \"SyncGroupName\" : \"SyncGroupName\",\n    \"InitialSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ProfileName\" : \"ProfileName\",\n    \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n    \"SharedServiceAccount\" : false,\n    \"SshKeyProfileId\" : 6,\n    \"AllowPasswordRelease\" : true,\n    \"HasInitialPassword\" : true,\n    \"AllowSshKeyRelease\" : true,\n    \"SyncGroupId\" : 1,\n    \"SetInitialSshKey\" : true,\n    \"SetInitialPassword\" : true,\n    \"SyncGroupPriority\" : 5,\n    \"HasInitialSshKey\" : true,\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ]\n  }\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AccountDiscoveryRule>>(exampleJson)
                        : default(List<AccountDiscoveryRule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add/Remove accounts assigned to this group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="operation">Operation to perform on the list</param>
        /// <param name="body">Accounts to assign to the AccountGroup</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - &#x27;accounts&#x27; parameter was missing</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/SyncGroups/{syncGroupId}/Accounts/{operation}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsModifyAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SyncGroupAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60103 - &#x27;accounts&#x27; parameter was missing")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsModifyAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromRoute][Required]ListOperation operation, [FromBody]List<SyncGroupAccount> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SyncGroupAccount>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IsServiceAccount\" : true,\n  \"Description\" : \"Description\",\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"IsSynchronized\" : true,\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SyncPriority\" : 171976544,\n  \"LinkedUsersCount\" : 5,\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"AccountType\" : \"Asset\",\n  \"Name\" : \"Name\",\n  \"NotifyOwnersOnly\" : true,\n  \"HasSshKey\" : true,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"FailedPasswordChangeAttempts\" : 6,\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 1,\n  \"Disabled\" : true,\n  \"HasPassword\" : true\n}, {\n  \"IsServiceAccount\" : true,\n  \"Description\" : \"Description\",\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"IsSynchronized\" : true,\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SyncPriority\" : 171976544,\n  \"LinkedUsersCount\" : 5,\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"AccountType\" : \"Asset\",\n  \"Name\" : \"Name\",\n  \"NotifyOwnersOnly\" : true,\n  \"HasSshKey\" : true,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"FailedPasswordChangeAttempts\" : 6,\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 1,\n  \"Disabled\" : true,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SyncGroupAccount>>(exampleJson)
                        : default(List<SyncGroupAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add/Remove rules assigned to an asset discovery job
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="jobId">Unique identifier of the AssetDiscoveryJob</param>
        /// <param name="operation">Operation to perform on the list</param>
        /// <param name="body">Accounts to assign to the AssetDiscoveryJob</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - &#x27;rules&#x27; parameter was missing</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">AccountGroup does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveryJobs/{jobId}/Rules/{operation}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsModifyDiscoveryJobRulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetDiscoveryRule>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60103 - &#x27;rules&#x27; parameter was missing")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsModifyDiscoveryJobRulesAsync([FromRoute][Required]int? id, [FromRoute][Required]int? jobId, [FromRoute][Required]ListOperation operation, [FromBody]List<AssetDiscoveryRule> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetDiscoveryRule>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetTemplate\" : {\n    \"AccountDiscoveryScheduleId\" : 0,\n    \"ManagedNetworkName\" : \"ManagedNetworkName\",\n    \"ConnectionProperties\" : {\n      \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n      \"ServiceAccountSshKeyProfileId\" : 1,\n      \"ServiceAccountHasSshKey\" : true,\n      \"RegisteredConnectorId\" : 1,\n      \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n      \"UseNamedPipeForServiceAccountConnection\" : true,\n      \"Instance\" : \"Instance\",\n      \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n      \"Port\" : 48874,\n      \"ServiceAccountSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ServiceAccountId\" : 6,\n      \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n      \"HasSecretKey\" : true,\n      \"TacacsSecret\" : \"TacacsSecret\",\n      \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n      \"CommandTimeout\" : 13584,\n      \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n      \"EnablePassword\" : \"EnablePassword\",\n      \"WorkstationId\" : \"WorkstationId\",\n      \"SslThumbprint\" : \"SslThumbprint\",\n      \"EnableHasPassword\" : true,\n      \"ClientId\" : 737,\n      \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n      \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n      \"ServiceAccountCredentialType\" : \"None\",\n      \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n      \"ServiceAccountHasPassword\" : true,\n      \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n      \"UseSslEncryption\" : true,\n      \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n      \"HasTacacsSecret\" : true,\n      \"UseTopSecretInterval\" : true,\n      \"ServiceAccountName\" : \"ServiceAccountName\",\n      \"VerifySslCertificate\" : true,\n      \"OraclePrivileges\" : \"OraclePrivileges\",\n      \"SecretKey\" : \"SecretKey\",\n      \"ServiceAccountAssetPlatformId\" : 4,\n      \"ServiceAccountProfileId\" : 1,\n      \"ServiceName\" : \"ServiceName\",\n      \"AccessKeyId\" : \"AccessKeyId\",\n      \"ServiceAccountAssetId\" : 1,\n      \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n      \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n    },\n    \"SessionAccessProperties\" : {\n      \"RemoteDesktopSessionPort\" : 21975,\n      \"AllowSessionRequests\" : true,\n      \"TelnetSessionPort\" : 20275,\n      \"SshSessionPort\" : 43935\n    },\n    \"PasswordProfile\" : {\n      \"Id\" : 8,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"ManagedNetworkId\" : 6,\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"PlatformFamily\" : \"None\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 6,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"PlatformId\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ]\n  },\n  \"Conditions\" : [ {\n    \"SearchScope\" : \"OneLevel\",\n    \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n    \"SearchBase\" : \"SearchBase\",\n    \"ConditionType\" : \"FindAll\",\n    \"PropertyConstraints\" : [ {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    }, {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    } ],\n    \"LdapFilter\" : \"LdapFilter\"\n  }, {\n    \"SearchScope\" : \"OneLevel\",\n    \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n    \"SearchBase\" : \"SearchBase\",\n    \"ConditionType\" : \"FindAll\",\n    \"PropertyConstraints\" : [ {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    }, {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    } ],\n    \"LdapFilter\" : \"LdapFilter\"\n  } ],\n  \"Name\" : \"Name\"\n}, {\n  \"AssetTemplate\" : {\n    \"AccountDiscoveryScheduleId\" : 0,\n    \"ManagedNetworkName\" : \"ManagedNetworkName\",\n    \"ConnectionProperties\" : {\n      \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n      \"ServiceAccountSshKeyProfileId\" : 1,\n      \"ServiceAccountHasSshKey\" : true,\n      \"RegisteredConnectorId\" : 1,\n      \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n      \"UseNamedPipeForServiceAccountConnection\" : true,\n      \"Instance\" : \"Instance\",\n      \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n      \"Port\" : 48874,\n      \"ServiceAccountSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ServiceAccountId\" : 6,\n      \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n      \"HasSecretKey\" : true,\n      \"TacacsSecret\" : \"TacacsSecret\",\n      \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n      \"CommandTimeout\" : 13584,\n      \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n      \"EnablePassword\" : \"EnablePassword\",\n      \"WorkstationId\" : \"WorkstationId\",\n      \"SslThumbprint\" : \"SslThumbprint\",\n      \"EnableHasPassword\" : true,\n      \"ClientId\" : 737,\n      \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n      \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n      \"ServiceAccountCredentialType\" : \"None\",\n      \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n      \"ServiceAccountHasPassword\" : true,\n      \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n      \"UseSslEncryption\" : true,\n      \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n      \"HasTacacsSecret\" : true,\n      \"UseTopSecretInterval\" : true,\n      \"ServiceAccountName\" : \"ServiceAccountName\",\n      \"VerifySslCertificate\" : true,\n      \"OraclePrivileges\" : \"OraclePrivileges\",\n      \"SecretKey\" : \"SecretKey\",\n      \"ServiceAccountAssetPlatformId\" : 4,\n      \"ServiceAccountProfileId\" : 1,\n      \"ServiceName\" : \"ServiceName\",\n      \"AccessKeyId\" : \"AccessKeyId\",\n      \"ServiceAccountAssetId\" : 1,\n      \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n      \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n    },\n    \"SessionAccessProperties\" : {\n      \"RemoteDesktopSessionPort\" : 21975,\n      \"AllowSessionRequests\" : true,\n      \"TelnetSessionPort\" : 20275,\n      \"SshSessionPort\" : 43935\n    },\n    \"PasswordProfile\" : {\n      \"Id\" : 8,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"ManagedNetworkId\" : 6,\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"PlatformFamily\" : \"None\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 6,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"PlatformId\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ]\n  },\n  \"Conditions\" : [ {\n    \"SearchScope\" : \"OneLevel\",\n    \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n    \"SearchBase\" : \"SearchBase\",\n    \"ConditionType\" : \"FindAll\",\n    \"PropertyConstraints\" : [ {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    }, {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    } ],\n    \"LdapFilter\" : \"LdapFilter\"\n  }, {\n    \"SearchScope\" : \"OneLevel\",\n    \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n    \"SearchBase\" : \"SearchBase\",\n    \"ConditionType\" : \"FindAll\",\n    \"PropertyConstraints\" : [ {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    }, {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    } ],\n    \"LdapFilter\" : \"LdapFilter\"\n  } ],\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetDiscoveryRule>>(exampleJson)
                        : default(List<AssetDiscoveryRule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add/Remove assigned owners of this partition
        /// </summary>
        /// <param name="id">Unique identifier of the AssetPartition</param>
        /// <param name="operation">Operation to perform on the list</param>
        /// <param name="body">List of owners to assign to this partition</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - Invalid owners list provided</response>
        /// <response code="403">Must have AssetAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/ManagedBy/{operation}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsModifyManagedByAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Identity>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60103 - Invalid owners list provided")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin permission")]
        public virtual IActionResult AssetPartitionsModifyManagedByAsync([FromRoute][Required]int? id, [FromRoute][Required]ListOperation operation, [FromBody]List<Identity> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Identity>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n}, {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Identity>>(exampleJson)
                        : default(List<Identity>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add/Remove accounts to an existing profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the PartitionProfile</param>
        /// <param name="operation">Operation to perform on the list</param>
        /// <param name="body">Users to assign to the profile</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Updated accounts not found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/Accounts/{operation}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsModifyProfileAssetAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsModifyProfileAssetAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]ListOperation operation, [FromBody]List<AssetAccount> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add/Remove assets to an existing profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the PartitionProfile</param>
        /// <param name="operation">Operation to perform on the list</param>
        /// <param name="body">Users to assign to the profile</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Updated assets not found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/Assets/{operation}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsModifyProfileAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Asset>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsModifyProfileAssetsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]ListOperation operation, [FromBody]List<Asset> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Asset>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}, {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Asset>>(exampleJson)
                        : default(List<Asset>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add/Remove accounts assigned to this group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="operation">Operation to perform on the list</param>
        /// <param name="body">Accounts to assign to the AccountGroup</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - &#x27;accounts&#x27; parameter was missing</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/SshKeySyncGroups/{syncGroupId}/Accounts/{operation}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsModifySshKeyAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SshKeySyncGroupAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60103 - &#x27;accounts&#x27; parameter was missing")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsModifySshKeyAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromRoute][Required]ListOperation operation, [FromBody]List<SshKeySyncGroupAccount> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SshKeySyncGroupAccount>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IsServiceAccount\" : true,\n  \"Description\" : \"Description\",\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"IsSynchronized\" : true,\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SyncPriority\" : 171976544,\n  \"LinkedUsersCount\" : 5,\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"AccountType\" : \"Asset\",\n  \"Name\" : \"Name\",\n  \"NotifyOwnersOnly\" : true,\n  \"HasSshKey\" : true,\n  \"TaskProperties\" : {\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 1,\n  \"Disabled\" : true,\n  \"HasPassword\" : true\n}, {\n  \"IsServiceAccount\" : true,\n  \"Description\" : \"Description\",\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"IsSynchronized\" : true,\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SyncPriority\" : 171976544,\n  \"LinkedUsersCount\" : 5,\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"AccountType\" : \"Asset\",\n  \"Name\" : \"Name\",\n  \"NotifyOwnersOnly\" : true,\n  \"HasSshKey\" : true,\n  \"TaskProperties\" : {\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 1,\n  \"Disabled\" : true,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SshKeySyncGroupAccount>>(exampleJson)
                        : default(List<SshKeySyncGroupAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add/Remove accounts to an existing SSH key profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the SshKeyProfile</param>
        /// <param name="operation">Operation to perform on the list</param>
        /// <param name="body">Users to assign to the profile</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Updated accounts not found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/Accounts/{operation}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsModifySshKeyProfileAssetAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsModifySshKeyProfileAssetAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]ListOperation operation, [FromBody]List<AssetAccount> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add/Remove accounts to an existing SSH key profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the SshKeyProfile</param>
        /// <param name="operation">Operation to perform on the list</param>
        /// <param name="body">Users to assign to the profile</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Updated assets not found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/Assets/{operation}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsModifySshKeyProfileAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Asset>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsModifySshKeyProfileAssetsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]ListOperation operation, [FromBody]List<Asset> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Asset>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}, {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Asset>>(exampleJson)
                        : default(List<Asset>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Run asset discovery job now
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="jobId">Database ID of asset discovery job</param>
        /// <param name="extendedLogging">Whether to include extended logging for the platform operation</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveryJobs/{jobId}/RunDiscovery")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsRunDiscoveryJobAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetDiscoveryLog), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsRunDiscoveryJobAsync([FromRoute][Required]int? id, [FromRoute][Required]int? jobId, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetDiscoveryLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 1,\n  \"AssetDiscoveryJobId\" : 6,\n  \"DiscoveredAssets\" : [ {\n    \"Description\" : \"Description\",\n    \"Platform\" : \"Platform\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"OperatingSystemVersion\" : \"OperatingSystemVersion\",\n    \"Name\" : \"Name\",\n    \"PasswordProfile\" : {\n      \"Id\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"RelativeId\" : \"RelativeId\",\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"PlatformId\" : 2,\n    \"TestConnectionMessage\" : \"TestConnectionMessage\",\n    \"RuleName\" : \"RuleName\",\n    \"OperatingSystemName\" : \"OperatingSystemName\",\n    \"Architecture\" : \"Architecture\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"DomainName\" : \"DomainName\",\n    \"TestConnectionState\" : \"Unknown\",\n    \"ComputerCategory\" : \"ComputerCategory\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"TestConnectionLogId\" : \"TestConnectionLogId\",\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"Id\" : 7,\n    \"Location\" : \"Location\"\n  }, {\n    \"Description\" : \"Description\",\n    \"Platform\" : \"Platform\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"OperatingSystemVersion\" : \"OperatingSystemVersion\",\n    \"Name\" : \"Name\",\n    \"PasswordProfile\" : {\n      \"Id\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"RelativeId\" : \"RelativeId\",\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"PlatformId\" : 2,\n    \"TestConnectionMessage\" : \"TestConnectionMessage\",\n    \"RuleName\" : \"RuleName\",\n    \"OperatingSystemName\" : \"OperatingSystemName\",\n    \"Architecture\" : \"Architecture\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"DomainName\" : \"DomainName\",\n    \"TestConnectionState\" : \"Unknown\",\n    \"ComputerCategory\" : \"ComputerCategory\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"TestConnectionLogId\" : \"TestConnectionLogId\",\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"Id\" : 7,\n    \"Location\" : \"Location\"\n  } ],\n  \"ApplianceName\" : \"ApplianceName\",\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"EventName\" : \"Unknown\",\n  \"CustomScriptParameters\" : [ {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"NetworkDiscoveryProperties\" : {\n    \"ScanOptions\" : {\n      \"ScanTimeout\" : 2,\n      \"OsFingerPrint\" : false\n    },\n    \"ScanRules\" : [ {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    }, {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    } ]\n  },\n  \"DirectoryDiscoveryProperties\" : {\n    \"DirectoryId\" : 5,\n    \"DirectoryPlatformDisplayName\" : \"DirectoryPlatformDisplayName\",\n    \"DirectoryPlatformType\" : \"Unknown\",\n    \"DirectoryPlatformId\" : 5,\n    \"DirectoryNetworkAddress\" : \"DirectoryNetworkAddress\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Unknown\",\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"UserId\" : 0,\n  \"AssetDiscoveryType\" : \"Directory\",\n  \"Id\" : \"Id\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"AssetId\" : 4,\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetDiscoveryLog>(exampleJson)
                        : default(AssetDiscoveryLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Sets the assets that are assigned to this account discovery schedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the account discovery schedule</param>
        /// <param name="body">Users to assign to the account discovery schedule</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Updated assets not found</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/AccountDiscoverySchedules/{scheduleId}/Assets")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsSetAccountDiscoveryAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Asset>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsSetAccountDiscoveryAssetsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromBody]List<Asset> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Asset>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}, {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Asset>>(exampleJson)
                        : default(List<Asset>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Sets the accounts assigned to this group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="body">Accounts to assign to the AccountGroup</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - &#x27;accounts&#x27; parameter was missing</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/SyncGroups/{syncGroupId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsSetAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SyncGroupAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60103 - &#x27;accounts&#x27; parameter was missing")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsSetAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromBody]List<SyncGroupAccount> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SyncGroupAccount>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IsServiceAccount\" : true,\n  \"Description\" : \"Description\",\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"IsSynchronized\" : true,\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SyncPriority\" : 171976544,\n  \"LinkedUsersCount\" : 5,\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"AccountType\" : \"Asset\",\n  \"Name\" : \"Name\",\n  \"NotifyOwnersOnly\" : true,\n  \"HasSshKey\" : true,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"FailedPasswordChangeAttempts\" : 6,\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 1,\n  \"Disabled\" : true,\n  \"HasPassword\" : true\n}, {\n  \"IsServiceAccount\" : true,\n  \"Description\" : \"Description\",\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"IsSynchronized\" : true,\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SyncPriority\" : 171976544,\n  \"LinkedUsersCount\" : 5,\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"AccountType\" : \"Asset\",\n  \"Name\" : \"Name\",\n  \"NotifyOwnersOnly\" : true,\n  \"HasSshKey\" : true,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"FailedPasswordChangeAttempts\" : 6,\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 1,\n  \"Disabled\" : true,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SyncGroupAccount>>(exampleJson)
                        : default(List<SyncGroupAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Sets the rules assigned to an asset discovery job
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="jobId">Unique identifier of the AssetDiscoveryJob</param>
        /// <param name="body">Accounts to assign to the AssetDiscoveryJob</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - &#x27;rules&#x27; parameter was missing</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">AccountGroup does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveryJobs/{jobId}/Rules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsSetDiscoveryJobRulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetDiscoveryRule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsSetDiscoveryJobRulesAsync([FromRoute][Required]int? id, [FromRoute][Required]int? jobId, [FromBody]List<AssetDiscoveryRule> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetDiscoveryRule>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AssetTemplate\" : {\n    \"AccountDiscoveryScheduleId\" : 0,\n    \"ManagedNetworkName\" : \"ManagedNetworkName\",\n    \"ConnectionProperties\" : {\n      \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n      \"ServiceAccountSshKeyProfileId\" : 1,\n      \"ServiceAccountHasSshKey\" : true,\n      \"RegisteredConnectorId\" : 1,\n      \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n      \"UseNamedPipeForServiceAccountConnection\" : true,\n      \"Instance\" : \"Instance\",\n      \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n      \"Port\" : 48874,\n      \"ServiceAccountSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ServiceAccountId\" : 6,\n      \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n      \"HasSecretKey\" : true,\n      \"TacacsSecret\" : \"TacacsSecret\",\n      \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n      \"CommandTimeout\" : 13584,\n      \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n      \"EnablePassword\" : \"EnablePassword\",\n      \"WorkstationId\" : \"WorkstationId\",\n      \"SslThumbprint\" : \"SslThumbprint\",\n      \"EnableHasPassword\" : true,\n      \"ClientId\" : 737,\n      \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n      \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n      \"ServiceAccountCredentialType\" : \"None\",\n      \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n      \"ServiceAccountHasPassword\" : true,\n      \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n      \"UseSslEncryption\" : true,\n      \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n      \"HasTacacsSecret\" : true,\n      \"UseTopSecretInterval\" : true,\n      \"ServiceAccountName\" : \"ServiceAccountName\",\n      \"VerifySslCertificate\" : true,\n      \"OraclePrivileges\" : \"OraclePrivileges\",\n      \"SecretKey\" : \"SecretKey\",\n      \"ServiceAccountAssetPlatformId\" : 4,\n      \"ServiceAccountProfileId\" : 1,\n      \"ServiceName\" : \"ServiceName\",\n      \"AccessKeyId\" : \"AccessKeyId\",\n      \"ServiceAccountAssetId\" : 1,\n      \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n      \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n    },\n    \"SessionAccessProperties\" : {\n      \"RemoteDesktopSessionPort\" : 21975,\n      \"AllowSessionRequests\" : true,\n      \"TelnetSessionPort\" : 20275,\n      \"SshSessionPort\" : 43935\n    },\n    \"PasswordProfile\" : {\n      \"Id\" : 8,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"ManagedNetworkId\" : 6,\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"PlatformFamily\" : \"None\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 6,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"PlatformId\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ]\n  },\n  \"Conditions\" : [ {\n    \"SearchScope\" : \"OneLevel\",\n    \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n    \"SearchBase\" : \"SearchBase\",\n    \"ConditionType\" : \"FindAll\",\n    \"PropertyConstraints\" : [ {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    }, {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    } ],\n    \"LdapFilter\" : \"LdapFilter\"\n  }, {\n    \"SearchScope\" : \"OneLevel\",\n    \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n    \"SearchBase\" : \"SearchBase\",\n    \"ConditionType\" : \"FindAll\",\n    \"PropertyConstraints\" : [ {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    }, {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    } ],\n    \"LdapFilter\" : \"LdapFilter\"\n  } ],\n  \"Name\" : \"Name\"\n}, {\n  \"AssetTemplate\" : {\n    \"AccountDiscoveryScheduleId\" : 0,\n    \"ManagedNetworkName\" : \"ManagedNetworkName\",\n    \"ConnectionProperties\" : {\n      \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n      \"ServiceAccountSshKeyProfileId\" : 1,\n      \"ServiceAccountHasSshKey\" : true,\n      \"RegisteredConnectorId\" : 1,\n      \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n      \"UseNamedPipeForServiceAccountConnection\" : true,\n      \"Instance\" : \"Instance\",\n      \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n      \"Port\" : 48874,\n      \"ServiceAccountSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ServiceAccountId\" : 6,\n      \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n      \"HasSecretKey\" : true,\n      \"TacacsSecret\" : \"TacacsSecret\",\n      \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n      \"CommandTimeout\" : 13584,\n      \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n      \"EnablePassword\" : \"EnablePassword\",\n      \"WorkstationId\" : \"WorkstationId\",\n      \"SslThumbprint\" : \"SslThumbprint\",\n      \"EnableHasPassword\" : true,\n      \"ClientId\" : 737,\n      \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n      \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n      \"ServiceAccountCredentialType\" : \"None\",\n      \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n      \"ServiceAccountHasPassword\" : true,\n      \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n      \"UseSslEncryption\" : true,\n      \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n      \"HasTacacsSecret\" : true,\n      \"UseTopSecretInterval\" : true,\n      \"ServiceAccountName\" : \"ServiceAccountName\",\n      \"VerifySslCertificate\" : true,\n      \"OraclePrivileges\" : \"OraclePrivileges\",\n      \"SecretKey\" : \"SecretKey\",\n      \"ServiceAccountAssetPlatformId\" : 4,\n      \"ServiceAccountProfileId\" : 1,\n      \"ServiceName\" : \"ServiceName\",\n      \"AccessKeyId\" : \"AccessKeyId\",\n      \"ServiceAccountAssetId\" : 1,\n      \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n      \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n    },\n    \"SessionAccessProperties\" : {\n      \"RemoteDesktopSessionPort\" : 21975,\n      \"AllowSessionRequests\" : true,\n      \"TelnetSessionPort\" : 20275,\n      \"SshSessionPort\" : 43935\n    },\n    \"PasswordProfile\" : {\n      \"Id\" : 8,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"ManagedNetworkId\" : 6,\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"PlatformFamily\" : \"None\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 6,\n      \"EffectiveName\" : \"EffectiveName\",\n      \"EffectiveId\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"PlatformId\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ]\n  },\n  \"Conditions\" : [ {\n    \"SearchScope\" : \"OneLevel\",\n    \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n    \"SearchBase\" : \"SearchBase\",\n    \"ConditionType\" : \"FindAll\",\n    \"PropertyConstraints\" : [ {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    }, {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    } ],\n    \"LdapFilter\" : \"LdapFilter\"\n  }, {\n    \"SearchScope\" : \"OneLevel\",\n    \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n    \"SearchBase\" : \"SearchBase\",\n    \"ConditionType\" : \"FindAll\",\n    \"PropertyConstraints\" : [ {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    }, {\n      \"Operator\" : \"Equals\",\n      \"PropertyName\" : \"Name\",\n      \"Value\" : \"Value\"\n    } ],\n    \"LdapFilter\" : \"LdapFilter\"\n  } ],\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetDiscoveryRule>>(exampleJson)
                        : default(List<AssetDiscoveryRule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates the assigned owners of this partition
        /// </summary>
        /// <param name="id">Unique identifier of the AssetPartition</param>
        /// <param name="body">List of owners to assign to this partition</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - Invalid owners list provided</response>
        /// <response code="403">Must have AssetAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/ManagedBy")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsSetPartitionManagedByAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Identity>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60103 - Invalid owners list provided")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin permission")]
        public virtual IActionResult AssetPartitionsSetPartitionManagedByAsync([FromRoute][Required]int? id, [FromBody]List<Identity> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Identity>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n}, {\n  \"IdentityProviderId\" : 4,\n  \"FullDisplayName\" : \"FullDisplayName\",\n  \"DomainName\" : \"DomainName\",\n  \"DisplayName\" : \"DisplayName\",\n  \"IdentityProviderName\" : \"IdentityProviderName\",\n  \"Id\" : 0,\n  \"EmailAddress\" : \"EmailAddress\",\n  \"IsSystemOwned\" : true,\n  \"Name\" : \"Name\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Identity>>(exampleJson)
                        : default(List<Identity>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Sets the sync group password
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="body">Password to set for this sync group</param>
        /// <response code="204">Success - No Content</response>
        /// <response code="400">60027 - Invalid password provided</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Sync group does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/SyncGroups/{syncGroupId}/Password")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsSetPasswordAsync")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60027 - Invalid password provided")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsSetPasswordAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromBody]string body)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Sets the accounts that are explicitly using this profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the PartitionProfile</param>
        /// <param name="body">Users to assign to the profile</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Updated accounts not found</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsSetProfileAssetAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsSetProfileAssetAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromBody]List<AssetAccount> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Sets the assets that are explicitly using this profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the PartitionProfile</param>
        /// <param name="body">Users to assign to the profile</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Updated assets not found</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/Assets")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsSetProfileAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Asset>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsSetProfileAssetsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromBody]List<Asset> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Asset>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}, {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Asset>>(exampleJson)
                        : default(List<Asset>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Sets the accounts assigned to this group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="body">Accounts to assign to the AccountGroup</param>
        /// <response code="200">Success</response>
        /// <response code="400">60103 - &#x27;accounts&#x27; parameter was missing</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/SshKeySyncGroups/{syncGroupId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsSetSshKeyAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SshKeySyncGroupAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60103 - &#x27;accounts&#x27; parameter was missing")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsSetSshKeyAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromBody]List<SshKeySyncGroupAccount> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<SshKeySyncGroupAccount>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"IsServiceAccount\" : true,\n  \"Description\" : \"Description\",\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"IsSynchronized\" : true,\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SyncPriority\" : 171976544,\n  \"LinkedUsersCount\" : 5,\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"AccountType\" : \"Asset\",\n  \"Name\" : \"Name\",\n  \"NotifyOwnersOnly\" : true,\n  \"HasSshKey\" : true,\n  \"TaskProperties\" : {\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 1,\n  \"Disabled\" : true,\n  \"HasPassword\" : true\n}, {\n  \"IsServiceAccount\" : true,\n  \"Description\" : \"Description\",\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"IsSynchronized\" : true,\n  \"DomainName\" : \"DomainName\",\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"SyncPriority\" : 171976544,\n  \"LinkedUsersCount\" : 5,\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"AccountType\" : \"Asset\",\n  \"Name\" : \"Name\",\n  \"NotifyOwnersOnly\" : true,\n  \"HasSshKey\" : true,\n  \"TaskProperties\" : {\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"NetBiosName\" : \"NetBiosName\",\n  \"Id\" : 1,\n  \"Disabled\" : true,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<SshKeySyncGroupAccount>>(exampleJson)
                        : default(List<SshKeySyncGroupAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Sets the sync group SSH key
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="body">SSH keyto set for this sync group</param>
        /// <param name="keyFormat">The format of the SSH private key (defaults to OpenSsh)&lt;br /&gt;&lt;br /&gt;              - OpenSsh - OpenSSH legacy PEM format&lt;br /&gt;              - Ssh2 - Tectia format for use with tools from SSH.com&lt;br /&gt;              - Putty - Putty format for use with PuTTY tools&lt;br /&gt;</param>
        /// <response code="200">Success</response>
        /// <response code="204">Success</response>
        /// <response code="400">60027 - Invalid password provided</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Sync group does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/SshKeySyncGroups/{syncGroupId}/SshKey")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsSetSshKeyAsync")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60027 - Invalid password provided")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsSetSshKeyAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromBody]AccountSshKey body, [FromQuery]SshKeyFormat keyFormat)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Sets the accounts that are explicitly using this SSH key profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the SshKeyProfile</param>
        /// <param name="body">Users to assign to the profile</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Updated accounts not found</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/Accounts")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsSetSshKeyProfileAssetAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AssetAccount>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsSetSshKeyProfileAssetAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromBody]List<AssetAccount> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AssetAccount>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n}, {\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Platform\" : {\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 6,\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PlatformType\" : \"Unknown\",\n    \"SupportsSessionManagement\" : true\n  },\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 5,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 5,\n    \"Name\" : \"Name\"\n  },\n  \"CreatedByUserId\" : 6,\n  \"TaskProperties\" : {\n    \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedRestoreAccountAttempts\" : 5,\n    \"NextSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyRevokeAttempts\" : 1,\n    \"NextSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuspendAccountTaskId\" : \"LastSuspendAccountTaskId\",\n    \"LastFailurePasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryTaskId\" : \"LastSshKeyDiscoveryTaskId\",\n    \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n    \"NextSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedPasswordChangeAttempts\" : 1,\n    \"FailedSshKeyChangeAttempts\" : 6,\n    \"FailedPasswordCheckAttempts\" : 1,\n    \"LastRestoreAccountTaskId\" : \"LastRestoreAccountTaskId\",\n    \"LastSuccessPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckTaskId\" : \"LastPasswordCheckTaskId\",\n    \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n    \"LastSuccessSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSuspendAccountAttempts\" : 4,\n    \"LastFailureSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyRevokeTaskId\" : \"LastSshKeyRevokeTaskId\",\n    \"HasAccountTaskFailure\" : true,\n    \"NextPasswordCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyCheckAttempts\" : 1,\n    \"NextRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSshKeyCheckTaskId\" : \"LastSshKeyCheckTaskId\",\n    \"LastSuccessSshKeyCheckDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessSshKeyRevokeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedSshKeyDiscoveryAttempts\" : 7,\n    \"LastSuccessSuspendAccountDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureRestoreAccountDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"SshKeySyncGroup\" : {\n    \"Priority\" : 7,\n    \"Id\" : 4,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"AltLoginName\" : \"AltLoginName\",\n  \"Asset\" : {\n    \"AssetPartitionId\" : 6,\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"Id\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Disabled\" : true,\n  \"SyncGroup\" : {\n    \"Priority\" : 2,\n    \"Id\" : 3,\n    \"Disabled\" : true,\n    \"Name\" : \"Name\"\n  },\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsServiceAccount\" : true,\n  \"DiscoveredProperties\" : {\n    \"AccountDiscoveryScheduleId\" : 9,\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ]\n  },\n  \"DistinguishedName\" : \"DistinguishedName\",\n  \"DomainName\" : \"DomainName\",\n  \"DirectoryProperties\" : {\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\"\n  },\n  \"RequestProperties\" : {\n    \"AllowPasswordRequest\" : true,\n    \"AllowSshKeyRequest\" : true,\n    \"AllowSessionRequest\" : true\n  },\n  \"SharedServiceAccount\" : true,\n  \"HasSshKey\" : true,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 2,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 7,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0,\n  \"HasPassword\" : true\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AssetAccount>>(exampleJson)
                        : default(List<AssetAccount>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Sets the assets that are explicitly using this SSH key profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the SshKeyProfile</param>
        /// <param name="body">Users to assign to the profile</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Updated assets not found</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/Assets")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsSetSshKeyProfileAssetsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Asset>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsSetSshKeyProfileAssetsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromBody]List<Asset> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Asset>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n}, {\n  \"AccountDiscoveryScheduleId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"IsDirectory\" : true,\n  \"Platform\" : {\n    \"Description\" : \"Description\",\n    \"Architecture\" : \"Architecture\",\n    \"DeviceClass\" : \"Unknown\",\n    \"ConnectionProperties\" : {\n      \"SupportsSslCertificateVerification\" : true,\n      \"SupportsNamedPipeForServiceAccountConnection\" : true,\n      \"SupportsPasswordAuthentication\" : true,\n      \"SupportsSshKeyAuthentication\" : true,\n      \"SupportsServiceName\" : true,\n      \"SupportsAccessKeyAuthentication\" : true,\n      \"SupportsLocalhostPasswordAuthentication\" : true,\n      \"RequiresDistinguishedName\" : true,\n      \"SupportsInstance\" : true,\n      \"SupportsOraclePrivileges\" : true,\n      \"SupportsDirectorySync\" : true,\n      \"SupportsClientId\" : true,\n      \"DefaultPort\" : 6,\n      \"SupportsDirectoryPasswordAuthentication\" : true,\n      \"SupportsWorkstationId\" : true,\n      \"SupportsTimeout\" : true,\n      \"SupportsPrivilegedAccount\" : true,\n      \"SupportsDirectoryAssetDiscovery\" : true,\n      \"SupportsLdap\" : true,\n      \"SupportsPrivilegeElevationCommand\" : true,\n      \"SupportsSslEncryption\" : true,\n      \"SupportsStarlingConnectAuthentication\" : true,\n      \"SupportsAccountPasswordAuthentication\" : true,\n      \"SupportsSshTransport\" : true,\n      \"SupportsTopSecretInterval\" : true,\n      \"DefaultSslPort\" : 7,\n      \"SupportsSslThumbprint\" : true,\n      \"AllowCustomPort\" : true,\n      \"SupportsEnablePassword\" : true,\n      \"PrivilegedAccountName\" : \"PrivilegedAccountName\",\n      \"SupportsTacacsSecret\" : true\n    },\n    \"IsAcctNameCaseSensitive\" : true,\n    \"PasswordFeatureProperties\" : {\n      \"SupportsPasswordManagement\" : true,\n      \"SupportsSshKeyManagement\" : true,\n      \"RequireNetworkAddress\" : true,\n      \"SupportsDependentSystemTasks\" : true,\n      \"AllowRequireCurrentPassword\" : true,\n      \"SupportsSuspendRestoreAccount\" : true,\n      \"SupportsAccountDiscovery\" : true,\n      \"SupportsServiceDiscovery\" : true,\n      \"SupportsUsePasswordHash\" : true\n    },\n    \"CustomScriptProperties\" : {\n      \"Parameters\" : [ {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      }, {\n        \"DefaultValue\" : \"DefaultValue\",\n        \"Type\" : \"String\",\n        \"Description\" : \"Description\",\n        \"Name\" : \"Name\"\n      } ],\n      \"HasScript\" : true\n    },\n    \"Name\" : \"Name\",\n    \"Version\" : \"Version\",\n    \"SupportedOperations\" : [ \"Unknown\", \"Unknown\" ],\n    \"SessionFeatureProperties\" : {\n      \"DefaultRemoteDesktopSessionPort\" : 4,\n      \"DefaultTelnetSessionPort\" : 5,\n      \"SupportsSessionManagement\" : true,\n      \"DefaultSshSessionPort\" : 1\n    },\n    \"PlatformFamily\" : \"None\",\n    \"DisplayName\" : \"DisplayName\",\n    \"Id\" : 1,\n    \"PlatformType\" : \"Unknown\",\n    \"IsSystemOwned\" : true\n  },\n  \"ManagedNetworkName\" : \"ManagedNetworkName\",\n  \"DiscoveredDirectoryGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"RegisteredConnector\" : {\n    \"StarlingConnectorId\" : \"StarlingConnectorId\",\n    \"RegisteredConnectorId\" : \"RegisteredConnectorId\",\n    \"VisibleToPartitions\" : [ {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    }, {\n      \"CreatedByUserId\" : 6,\n      \"Description\" : \"Description\",\n      \"ManagedBy\" : [ {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      }, {\n        \"IdentityProviderId\" : 4,\n        \"FullDisplayName\" : \"FullDisplayName\",\n        \"DomainName\" : \"DomainName\",\n        \"DisplayName\" : \"DisplayName\",\n        \"IdentityProviderName\" : \"IdentityProviderName\",\n        \"Id\" : 0,\n        \"EmailAddress\" : \"EmailAddress\",\n        \"IsSystemOwned\" : true,\n        \"Name\" : \"Name\"\n      } ],\n      \"DefaultProfileName\" : \"DefaultProfileName\",\n      \"DefaultSshKeyProfileId\" : 5,\n      \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n      \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n      \"DefaultProfileId\" : 1,\n      \"Id\" : 0,\n      \"Name\" : \"Name\"\n    } ],\n    \"RegisteredConnectorDisplayName\" : \"RegisteredConnectorDisplayName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"StarlingConnectorVersion\" : \"StarlingConnectorVersion\",\n    \"Id\" : 9,\n    \"VisibleToAllPartitions\" : true\n  },\n  \"CustomScriptParameters\" : [ {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"LicenseClass\" : \"System\",\n  \"Name\" : \"Name\",\n  \"PasswordProfile\" : {\n    \"Id\" : 8,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 9,\n    \"Name\" : \"Name\"\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 5,\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"ManagedNetworkId\" : 1,\n  \"TaskProperties\" : {\n    \"LastFailureDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedAccountDiscoveryAttempts\" : 7,\n    \"FailedTestConnectionAttempts\" : 3,\n    \"LastDependentServiceUpdateTaskId\" : \"LastDependentServiceUpdateTaskId\",\n    \"LastSuccessDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasAssetTaskFailure\" : true,\n    \"LastSuccessAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryTaskId\" : \"LastAccountDiscoveryTaskId\",\n    \"LastSuccessTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryTaskId\" : \"LastServiceDiscoveryTaskId\",\n    \"LastFailureServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastTestConnectionDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"FailedServiceDiscoveryAttempts\" : 9,\n    \"LastTestConnectionTaskId\" : \"LastTestConnectionTaskId\",\n    \"FailedDependentServiceUpdateAttempts\" : 2,\n    \"NextAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastDependentServiceUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSuccessServiceDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAccountDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"PlatformId\" : 6,\n  \"Disabled\" : true,\n  \"Tags\" : [ {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  }, {\n    \"Description\" : \"Description\",\n    \"AdminAssigned\" : true,\n    \"Id\" : 1,\n    \"Name\" : \"Name\"\n  } ],\n  \"AssetPartitionId\" : 5,\n  \"AssetDiscoveryJobId\" : 9,\n  \"DirectoryProperties\" : {\n    \"DirectoryId\" : 2,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"NetbiosName\" : \"NetbiosName\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"DirectoryAssetProperties\" : {\n    \"FailedSyncAttempts\" : 1,\n    \"LastDirectoryDeleteSyncTaskId\" : \"LastDirectoryDeleteSyncTaskId\",\n    \"LastDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DomainName\" : \"DomainName\",\n    \"LastFailureSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"ForestRootDomain\" : \"ForestRootDomain\",\n    \"DomainControllers\" : [ {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    }, {\n      \"ServerType\" : \"DomainController\",\n      \"IsWritable\" : true,\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"DomainName\" : \"DomainName\"\n    } ],\n    \"UsePasswordHash\" : true,\n    \"SchemaProperties\" : {\n      \"UserProperties\" : {\n        \"AltLoginNameAttribute\" : \"AltLoginNameAttribute\",\n        \"UserNameAttribute\" : \"UserNameAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"UserClassType\" : [ \"UserClassType\", \"UserClassType\" ],\n        \"PasswordAttribute\" : \"PasswordAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"ComputerProperties\" : {\n        \"ComputerClassType\" : [ \"ComputerClassType\", \"ComputerClassType\" ],\n        \"NetworkAddressAttribute\" : \"NetworkAddressAttribute\",\n        \"DescriptionAttribute\" : \"DescriptionAttribute\",\n        \"OperatingSystemAttribute\" : \"OperatingSystemAttribute\",\n        \"OperatingSystemVersionAttribute\" : \"OperatingSystemVersionAttribute\",\n        \"NameAttribute\" : \"NameAttribute\",\n        \"MemberOfAttribute\" : \"MemberOfAttribute\"\n      },\n      \"GroupProperties\" : {\n        \"MemberAttribute\" : \"MemberAttribute\",\n        \"GroupClassType\" : [ \"GroupClassType\", \"GroupClassType\" ],\n        \"NameAttribute\" : \"NameAttribute\"\n      }\n    },\n    \"Domains\" : [ {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    }, {\n      \"DomainName\" : \"DomainName\",\n      \"DomainUniqueId\" : \"DomainUniqueId\",\n      \"NetBiosName\" : \"NetBiosName\",\n      \"NamingContext\" : \"NamingContext\"\n    } ],\n    \"LastSuccessDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"DeleteSyncIntervalMinutes\" : 1586191969,\n    \"FailedDeleteSyncAttempts\" : 1,\n    \"LastSuccessSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AllowSharedSearch\" : true,\n    \"LastFailureDeleteSyncDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"NextSynchronizedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"SynchronizationIntervalMinutes\" : 890262545,\n    \"LastDirectorySyncTaskId\" : \"LastDirectorySyncTaskId\"\n  },\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SessionAccessProperties\" : {\n    \"RemoteDesktopSessionPort\" : 21975,\n    \"AllowSessionRequests\" : true,\n    \"TelnetSessionPort\" : 20275,\n    \"SshSessionPort\" : 43935\n  },\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"SshHostKey\" : {\n    \"Fingerprint\" : \"Fingerprint\",\n    \"SshHostKey\" : \"SshHostKey\",\n    \"FingerprintSha256\" : \"FingerprintSha256\"\n  },\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"SshKeyProfile\" : {\n    \"Id\" : 6,\n    \"EffectiveName\" : \"EffectiveName\",\n    \"EffectiveId\" : 3,\n    \"Name\" : \"Name\"\n  },\n  \"Id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Asset>>(exampleJson)
                        : default(List<Asset>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Marks a discovered service as visible
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="serviceName">Name of a discovered service. For directory accounts you must also specify the domain name e.g., {accountName}@{domainName}</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredService does not belong to the given AssetPartition</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredServices/{assetId}/{serviceName}/Show")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsShowDiscoveredServiceAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(DiscoveredService), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsShowDiscoveredServiceAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromRoute][Required]string serviceName)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DiscoveredService));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"AccountId\" : 1,\n  \"AccountAssetName\" : \"AccountAssetName\",\n  \"IsServiceEnabled\" : true,\n  \"IsDependentAccount\" : true,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"DiscoveredAccount\" : \"DiscoveredAccount\",\n  \"AssetName\" : \"AssetName\",\n  \"ServiceDisplayName\" : \"ServiceDisplayName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"AccountAssetId\" : 5,\n  \"AccountStatus\" : \"None\",\n  \"ServiceName\" : \"ServiceName\",\n  \"ServiceType\" : \"Unknown\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"IsIgnored\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<DiscoveredService>(exampleJson)
                        : default(DiscoveredService);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Processes multiple asset account show requests
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="body">Discovered asset accounts to process</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredAccounts/BatchShow")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsShowMultipleAccountsAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DiscoveredAssetAccountBatchResponse>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsShowMultipleAccountsAsync([FromRoute][Required]int? id, [FromBody]List<DiscoveredAssetAccount> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DiscoveredAssetAccountBatchResponse>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"Response\" : {\n    \"Status\" : \"None\",\n    \"AssetPartitionId\" : 6,\n    \"AccountDiscoveryScheduleId\" : 1,\n    \"DomainName\" : \"DomainName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"AssetName\" : \"AssetName\",\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"AssetId\" : 0,\n    \"RuleName\" : \"RuleName\"\n  },\n  \"StatusCodeNumber\" : 0,\n  \"IsSuccess\" : true,\n  \"Error\" : {\n    \"Message\" : \"Message\",\n    \"Code\" : 6\n  },\n  \"StatusCode\" : \"Continue\"\n}, {\n  \"Response\" : {\n    \"Status\" : \"None\",\n    \"AssetPartitionId\" : 6,\n    \"AccountDiscoveryScheduleId\" : 1,\n    \"DomainName\" : \"DomainName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"AssetName\" : \"AssetName\",\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n    \"AssetId\" : 0,\n    \"RuleName\" : \"RuleName\"\n  },\n  \"StatusCodeNumber\" : 0,\n  \"IsSuccess\" : true,\n  \"Error\" : {\n    \"Message\" : \"Message\",\n    \"Code\" : 6\n  },\n  \"StatusCode\" : \"Continue\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DiscoveredAssetAccountBatchResponse>>(exampleJson)
                        : default(List<DiscoveredAssetAccountBatchResponse>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Marks a discovered account as visible
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="assetId">Unique ID of an Asset</param>
        /// <param name="accountName">Name of a discovered account. For directory accounts you must also specify the domain name e.g., {accountName}@{domainName}</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Asset partition does not exist or DiscoveredAssetAccount does not belong to the given AssetPartition</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveredAccounts/{assetId}/{accountName}/Show")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsShowPartitionDiscoveredAccountAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(DiscoveredAssetAccount), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsShowPartitionDiscoveredAccountAsync([FromRoute][Required]int? id, [FromRoute][Required]int? assetId, [FromRoute][Required]string accountName)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DiscoveredAssetAccount));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"Status\" : \"None\",\n  \"AssetPartitionId\" : 6,\n  \"AccountDiscoveryScheduleId\" : 1,\n  \"DomainName\" : \"DomainName\",\n  \"DiscoveredUserId\" : \"DiscoveredUserId\",\n  \"DiscoveredGroups\" : [ {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  }, {\n    \"DiscoveredGroupDistinguishedName\" : \"DiscoveredGroupDistinguishedName\",\n    \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n    \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n  } ],\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"AssetId\" : 0,\n  \"RuleName\" : \"RuleName\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<DiscoveredAssetAccount>(exampleJson)
                        : default(DiscoveredAssetAccount);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Sync credentials for all accounts in sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="201">Created</response>
        /// <response code="202">Accepted</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Sync group does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/SyncGroups/{syncGroupId}/Sync")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsSyncAccountsAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(PasswordActivityLog), description: "Created")]
        [SwaggerResponse(statusCode: 202, type: typeof(PasswordActivityLog), description: "Accepted")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsSyncAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 9,\n  \"ApplianceName\" : \"ApplianceName\",\n  \"AccountId\" : 5,\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"SyncGroupName\" : \"SyncGroupName\",\n  \"ProfileName\" : \"ProfileName\",\n  \"SshKeyFingerprint\" : \"SshKeyFingerprint\",\n  \"CustomScriptParameters\" : [ {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"SshKeyProfileId\" : 3,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"Name\" : \"Unknown\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"PlatformId\" : 1,\n  \"InstallSshKeyFingerprint\" : \"InstallSshKeyFingerprint\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"AssetPartitionId\" : 7,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"SshKeySyncGroupId\" : 2,\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n  \"EventName\" : \"Unknown\",\n  \"AccountDistinguishedName\" : \"AccountDistinguishedName\",\n  \"AssetName\" : \"AssetName\",\n  \"SyncGroupId\" : 5,\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"UserId\" : 0,\n  \"Id\" : \"Id\",\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"AccountNetBiosName\" : \"AccountNetBiosName\",\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordActivityLog>(exampleJson)
                        : default(PasswordActivityLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Sync credentials for all accounts in sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="201">Created</response>
        /// <response code="202">Accepted</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Sync group does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/SshKeySyncGroups/{syncGroupId}/Sync")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsSyncSshKeyAccountsAsync")]
        [SwaggerResponse(statusCode: 201, type: typeof(PasswordActivityLog), description: "Created")]
        [SwaggerResponse(statusCode: 202, type: typeof(PasswordActivityLog), description: "Accepted")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsSyncSshKeyAccountsAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(PasswordActivityLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 9,\n  \"ApplianceName\" : \"ApplianceName\",\n  \"AccountId\" : 5,\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"SyncGroupName\" : \"SyncGroupName\",\n  \"ProfileName\" : \"ProfileName\",\n  \"SshKeyFingerprint\" : \"SshKeyFingerprint\",\n  \"CustomScriptParameters\" : [ {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"SshKeyProfileId\" : 3,\n  \"AccountDomainName\" : \"AccountDomainName\",\n  \"Name\" : \"Unknown\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"PlatformId\" : 1,\n  \"InstallSshKeyFingerprint\" : \"InstallSshKeyFingerprint\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"AssetPartitionId\" : 7,\n  \"SshKeyProfileName\" : \"SshKeyProfileName\",\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"SshKeySyncGroupId\" : 2,\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n  \"EventName\" : \"Unknown\",\n  \"AccountDistinguishedName\" : \"AccountDistinguishedName\",\n  \"AssetName\" : \"AssetName\",\n  \"SyncGroupId\" : 5,\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"UserId\" : 0,\n  \"Id\" : \"Id\",\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 6,\n  \"AccountName\" : \"AccountName\",\n  \"AccountNetBiosName\" : \"AccountNetBiosName\",\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordActivityLog>(exampleJson)
                        : default(PasswordActivityLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Runs Discovery on the given PartitionProfileAccountDiscoverySchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="body">Discovery parameters</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/AccountDiscoverySchedules/TestDiscovery")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsTestAccountDiscoveryAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AccountDiscoveryLog), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsTestAccountDiscoveryAsync([FromRoute][Required]int? id, [FromBody]CustomPartitionDiscoverAccountsParameters body, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AccountDiscoveryLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 5,\n  \"AccountDiscoveryScheduleId\" : 5,\n  \"ApplianceName\" : \"ApplianceName\",\n  \"IsDirectory\" : true,\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ProfileName\" : \"ProfileName\",\n  \"CustomScriptParameters\" : [ {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"Name\" : \"Unknown\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"PlatformId\" : 6,\n  \"DiscoveredAccounts\" : [ {\n    \"Status\" : \"None\",\n    \"DomainName\" : \"DomainName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"Name\" : \"Name\"\n  }, {\n    \"Status\" : \"None\",\n    \"DomainName\" : \"DomainName\",\n    \"DiscoveredUserId\" : \"DiscoveredUserId\",\n    \"DiscoveredGroups\" : [ {\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    }, {\n      \"DiscoveredGroupId\" : \"DiscoveredGroupId\",\n      \"DiscoveredGroupName\" : \"DiscoveredGroupName\"\n    } ],\n    \"Name\" : \"Name\"\n  } ],\n  \"InstallSshKeyFingerprint\" : \"InstallSshKeyFingerprint\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"AssetPartitionId\" : 1,\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"EventName\" : \"Unknown\",\n  \"AssetName\" : \"AssetName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"UserId\" : 2,\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"Id\" : \"Id\",\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 0,\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AccountDiscoveryLog>(exampleJson)
                        : default(AccountDiscoveryLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Tests an asset account partition tagging rule change against partition asset accounts
        /// </summary>
        /// <param name="id">Unique ID of the partition</param>
        /// <param name="body">Tagging rule to test</param>
        /// <param name="operationalOnly">Do not return no-op results</param>
        /// <param name="limit">Limit response to this number of results</param>
        /// <response code="200">Success</response>
        /// <response code="201">Tested</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">The partition or partition tag does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/Tags/TestAssetAccountRule")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsTestAssetAccountRuleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DynamicTaggingRuleTestResult>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsTestAssetAccountRuleAsync([FromRoute][Required]int? id, [FromBody]TaggingGroupingRule body, [FromQuery]bool? operationalOnly, [FromQuery]int? limit)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DynamicTaggingRuleTestResult>));

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"ObjectId\" : 0,\n  \"TaggingRuleAction\" : \"AddTag\",\n  \"DomainName\" : \"DomainName\",\n  \"AssetId\" : 6,\n  \"AssetName\" : \"AssetName\",\n  \"ObjectName\" : \"ObjectName\"\n}, {\n  \"ObjectId\" : 0,\n  \"TaggingRuleAction\" : \"AddTag\",\n  \"DomainName\" : \"DomainName\",\n  \"AssetId\" : 6,\n  \"AssetName\" : \"AssetName\",\n  \"ObjectName\" : \"ObjectName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DynamicTaggingRuleTestResult>>(exampleJson)
                        : default(List<DynamicTaggingRuleTestResult>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Tests an asset partition tagging rule change against partition assets
        /// </summary>
        /// <param name="id">Unique ID of the partition</param>
        /// <param name="body">Tagging rule to test</param>
        /// <param name="operationalOnly">Do not return no-op results</param>
        /// <param name="limit">Limit response to this number of results</param>
        /// <response code="200">Success</response>
        /// <response code="201">Tested</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">The partition or partition tag does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/Tags/TestAssetRule")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsTestAssetRuleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DynamicTaggingRuleTestResult>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsTestAssetRuleAsync([FromRoute][Required]int? id, [FromBody]TaggingGroupingRule body, [FromQuery]bool? operationalOnly, [FromQuery]int? limit)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DynamicTaggingRuleTestResult>));

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"ObjectId\" : 0,\n  \"TaggingRuleAction\" : \"AddTag\",\n  \"DomainName\" : \"DomainName\",\n  \"AssetId\" : 6,\n  \"AssetName\" : \"AssetName\",\n  \"ObjectName\" : \"ObjectName\"\n}, {\n  \"ObjectId\" : 0,\n  \"TaggingRuleAction\" : \"AddTag\",\n  \"DomainName\" : \"DomainName\",\n  \"AssetId\" : 6,\n  \"AssetName\" : \"AssetName\",\n  \"ObjectName\" : \"ObjectName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DynamicTaggingRuleTestResult>>(exampleJson)
                        : default(List<DynamicTaggingRuleTestResult>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Tests the set of specific asset discovery conditions. Assets will only be discovered but not added to the database.
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="body">Parameters for testing asset discovery conditions</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveryJobs/TestDiscovery")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsTestDiscoveryAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetDiscoveryLog), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsTestDiscoveryAsync([FromRoute][Required]int? id, [FromBody]TestAssetDiscoveryParameters body, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetDiscoveryLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 1,\n  \"AssetDiscoveryJobId\" : 6,\n  \"DiscoveredAssets\" : [ {\n    \"Description\" : \"Description\",\n    \"Platform\" : \"Platform\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"OperatingSystemVersion\" : \"OperatingSystemVersion\",\n    \"Name\" : \"Name\",\n    \"PasswordProfile\" : {\n      \"Id\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"RelativeId\" : \"RelativeId\",\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"PlatformId\" : 2,\n    \"TestConnectionMessage\" : \"TestConnectionMessage\",\n    \"RuleName\" : \"RuleName\",\n    \"OperatingSystemName\" : \"OperatingSystemName\",\n    \"Architecture\" : \"Architecture\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"DomainName\" : \"DomainName\",\n    \"TestConnectionState\" : \"Unknown\",\n    \"ComputerCategory\" : \"ComputerCategory\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"TestConnectionLogId\" : \"TestConnectionLogId\",\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"Id\" : 7,\n    \"Location\" : \"Location\"\n  }, {\n    \"Description\" : \"Description\",\n    \"Platform\" : \"Platform\",\n    \"ObjectSid\" : \"ObjectSid\",\n    \"OperatingSystemVersion\" : \"OperatingSystemVersion\",\n    \"Name\" : \"Name\",\n    \"PasswordProfile\" : {\n      \"Id\" : 9,\n      \"Name\" : \"Name\"\n    },\n    \"NetworkAddress\" : \"NetworkAddress\",\n    \"RelativeId\" : \"RelativeId\",\n    \"DiscoveredDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"PlatformId\" : 2,\n    \"TestConnectionMessage\" : \"TestConnectionMessage\",\n    \"RuleName\" : \"RuleName\",\n    \"OperatingSystemName\" : \"OperatingSystemName\",\n    \"Architecture\" : \"Architecture\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"DomainName\" : \"DomainName\",\n    \"TestConnectionState\" : \"Unknown\",\n    \"ComputerCategory\" : \"ComputerCategory\",\n    \"ObjectGuid\" : \"ObjectGuid\",\n    \"TestConnectionLogId\" : \"TestConnectionLogId\",\n    \"PlatformDisplayName\" : \"PlatformDisplayName\",\n    \"SshKeyProfile\" : {\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"Id\" : 7,\n    \"Location\" : \"Location\"\n  } ],\n  \"ApplianceName\" : \"ApplianceName\",\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"EventName\" : \"Unknown\",\n  \"CustomScriptParameters\" : [ {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"NetworkDiscoveryProperties\" : {\n    \"ScanOptions\" : {\n      \"ScanTimeout\" : 2,\n      \"OsFingerPrint\" : false\n    },\n    \"ScanRules\" : [ {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    }, {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    } ]\n  },\n  \"DirectoryDiscoveryProperties\" : {\n    \"DirectoryId\" : 5,\n    \"DirectoryPlatformDisplayName\" : \"DirectoryPlatformDisplayName\",\n    \"DirectoryPlatformType\" : \"Unknown\",\n    \"DirectoryPlatformId\" : 5,\n    \"DirectoryNetworkAddress\" : \"DirectoryNetworkAddress\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"AssetName\" : \"AssetName\",\n  \"Name\" : \"Unknown\",\n  \"AssetDiscoveryJobName\" : \"AssetDiscoveryJobName\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"UserId\" : 0,\n  \"AssetDiscoveryType\" : \"Directory\",\n  \"Id\" : \"Id\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"AssetId\" : 4,\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetDiscoveryLog>(exampleJson)
                        : default(AssetDiscoveryLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Runs Service Discovery on the given PartitionProfileAccountDiscoverySchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="body">Discovery parameters</param>
        /// <param name="extendedLogging">Generate debug task log for action</param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/AccountDiscoverySchedules/TestServiceDiscovery")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsTestServiceDiscoveryAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(ServiceDiscoveryLog), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsTestServiceDiscoveryAsync([FromRoute][Required]int? id, [FromBody]CustomPartitionDiscoverAccountsParameters body, [FromQuery]bool? extendedLogging)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ServiceDiscoveryLog));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 5,\n  \"AccountDiscoveryScheduleId\" : 5,\n  \"ApplianceName\" : \"ApplianceName\",\n  \"IsDirectory\" : true,\n  \"EventDisplayName\" : \"EventDisplayName\",\n  \"LogTime\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"ProfileName\" : \"ProfileName\",\n  \"CustomScriptParameters\" : [ {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  }, {\n    \"Type\" : \"String\",\n    \"Value\" : \"Value\",\n    \"Name\" : \"Name\"\n  } ],\n  \"Name\" : \"Unknown\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"NetworkAddress\" : \"NetworkAddress\",\n  \"PlatformId\" : 6,\n  \"InstallSshKeyFingerprint\" : \"InstallSshKeyFingerprint\",\n  \"ApplianceId\" : \"ApplianceId\",\n  \"AssetPartitionId\" : 1,\n  \"Log\" : [ {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"Status\" : \"Unknown\",\n    \"Message\" : \"Message\",\n    \"Timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ],\n  \"ConnectionProperties\" : {\n    \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n    \"ServiceAccountSshKeyProfileId\" : 1,\n    \"ServiceAccountHasSshKey\" : true,\n    \"RegisteredConnectorId\" : 1,\n    \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n    \"UseNamedPipeForServiceAccountConnection\" : true,\n    \"Instance\" : \"Instance\",\n    \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n    \"Port\" : 48874,\n    \"ServiceAccountSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ServiceAccountId\" : 6,\n    \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n    \"HasSecretKey\" : true,\n    \"TacacsSecret\" : \"TacacsSecret\",\n    \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n    \"CommandTimeout\" : 13584,\n    \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n    \"EnablePassword\" : \"EnablePassword\",\n    \"WorkstationId\" : \"WorkstationId\",\n    \"SslThumbprint\" : \"SslThumbprint\",\n    \"EnableHasPassword\" : true,\n    \"ClientId\" : 737,\n    \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n    \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n    \"ServiceAccountCredentialType\" : \"None\",\n    \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n    \"ServiceAccountHasPassword\" : true,\n    \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n    \"UseSslEncryption\" : true,\n    \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n    \"HasTacacsSecret\" : true,\n    \"UseTopSecretInterval\" : true,\n    \"ServiceAccountName\" : \"ServiceAccountName\",\n    \"VerifySslCertificate\" : true,\n    \"OraclePrivileges\" : \"OraclePrivileges\",\n    \"SecretKey\" : \"SecretKey\",\n    \"ServiceAccountAssetPlatformId\" : 4,\n    \"ServiceAccountProfileId\" : 1,\n    \"ServiceName\" : \"ServiceName\",\n    \"AccessKeyId\" : \"AccessKeyId\",\n    \"ServiceAccountAssetId\" : 1,\n    \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n    \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n  },\n  \"DiscoveredServices\" : [ {\n    \"AccountAssetId\" : 9,\n    \"AccountId\" : 7,\n    \"ServiceName\" : \"ServiceName\",\n    \"ServiceType\" : \"Unknown\",\n    \"AccountAssetName\" : \"AccountAssetName\",\n    \"IsServiceEnabled\" : true,\n    \"AccountDomainName\" : \"AccountDomainName\",\n    \"DiscoveredAccount\" : \"DiscoveredAccount\",\n    \"ServiceDisplayName\" : \"ServiceDisplayName\",\n    \"AccountName\" : \"AccountName\"\n  }, {\n    \"AccountAssetId\" : 9,\n    \"AccountId\" : 7,\n    \"ServiceName\" : \"ServiceName\",\n    \"ServiceType\" : \"Unknown\",\n    \"AccountAssetName\" : \"AccountAssetName\",\n    \"IsServiceEnabled\" : true,\n    \"AccountDomainName\" : \"AccountDomainName\",\n    \"DiscoveredAccount\" : \"DiscoveredAccount\",\n    \"ServiceDisplayName\" : \"ServiceDisplayName\",\n    \"AccountName\" : \"AccountName\"\n  } ],\n  \"EventName\" : \"Unknown\",\n  \"AssetName\" : \"AssetName\",\n  \"PlatformDisplayName\" : \"PlatformDisplayName\",\n  \"UserProperties\" : {\n    \"UserWasHelpdeskAdmin\" : true,\n    \"UserName\" : \"UserName\",\n    \"UserWasPartitionOwner\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"UserWasSystemAuditor\" : true,\n    \"UserWasAuditor\" : true,\n    \"UserWasApplianceAdmin\" : true,\n    \"UserWasGlobalAdmin\" : true,\n    \"UserWasDirectoryAdmin\" : true,\n    \"UserWasOperationsAdmin\" : true,\n    \"UserWasApplicationAuditor\" : true,\n    \"ClientIpAddress\" : \"ClientIpAddress\",\n    \"UserWasAssetAdmin\" : true,\n    \"UserWasUserAdmin\" : true,\n    \"UserDisplayName\" : \"UserDisplayName\",\n    \"UserWasPolicyAdmin\" : true\n  },\n  \"UserId\" : 2,\n  \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n  \"Id\" : \"Id\",\n  \"PlatformType\" : \"Unknown\",\n  \"AssetId\" : 0,\n  \"RequestStatus\" : {\n    \"EndTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Message\" : \"Message\",\n    \"State\" : \"Unknown\",\n    \"PercentComplete\" : 2,\n    \"Cancellable\" : true,\n    \"StartTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"QueuedDuration\" : \"QueuedDuration\",\n    \"RunningDuration\" : \"RunningDuration\",\n    \"AcceptanceDuration\" : \"AcceptanceDuration\",\n    \"AcceptedTime\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"TotalDuration\" : \"TotalDuration\"\n  }\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ServiceDiscoveryLog>(exampleJson)
                        : default(ServiceDiscoveryLog);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Tests an asset account partition tagging rule change against partition asset accounts
        /// </summary>
        /// <param name="id">Unique ID of the partition</param>
        /// <param name="tagId">Unique ID of the partition tag</param>
        /// <param name="body">Tagging rule to test</param>
        /// <param name="operationalOnly">Do not return no-op results</param>
        /// <param name="limit">Limit response to this number of results</param>
        /// <response code="200">Success</response>
        /// <response code="201">Tested</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">The partition or partition tag does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/Tags/{tagId}/TestAssetAccountRule")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsTestTagAssetAccountRuleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DynamicTaggingRuleTestResult>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsTestTagAssetAccountRuleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? tagId, [FromBody]TaggingGroupingRule body, [FromQuery]bool? operationalOnly, [FromQuery]int? limit)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DynamicTaggingRuleTestResult>));

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"ObjectId\" : 0,\n  \"TaggingRuleAction\" : \"AddTag\",\n  \"DomainName\" : \"DomainName\",\n  \"AssetId\" : 6,\n  \"AssetName\" : \"AssetName\",\n  \"ObjectName\" : \"ObjectName\"\n}, {\n  \"ObjectId\" : 0,\n  \"TaggingRuleAction\" : \"AddTag\",\n  \"DomainName\" : \"DomainName\",\n  \"AssetId\" : 6,\n  \"AssetName\" : \"AssetName\",\n  \"ObjectName\" : \"ObjectName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DynamicTaggingRuleTestResult>>(exampleJson)
                        : default(List<DynamicTaggingRuleTestResult>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Tests an asset partition tagging rule change against partition assets
        /// </summary>
        /// <param name="id">Unique ID of the partition</param>
        /// <param name="tagId">Unique ID of the partition tag</param>
        /// <param name="body">Tagging rule to test</param>
        /// <param name="operationalOnly">Do not return no-op results</param>
        /// <param name="limit">Limit response to this number of results</param>
        /// <response code="200">Success</response>
        /// <response code="201">Tested</response>
        /// <response code="400">Bad Request</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">The partition or partition tag does not exist</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/Tags/{tagId}/TestAssetRule")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsTestTagAssetRuleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DynamicTaggingRuleTestResult>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsTestTagAssetRuleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? tagId, [FromBody]TaggingGroupingRule body, [FromQuery]bool? operationalOnly, [FromQuery]int? limit)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DynamicTaggingRuleTestResult>));

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"ObjectId\" : 0,\n  \"TaggingRuleAction\" : \"AddTag\",\n  \"DomainName\" : \"DomainName\",\n  \"AssetId\" : 6,\n  \"AssetName\" : \"AssetName\",\n  \"ObjectName\" : \"ObjectName\"\n}, {\n  \"ObjectId\" : 0,\n  \"TaggingRuleAction\" : \"AddTag\",\n  \"DomainName\" : \"DomainName\",\n  \"AssetId\" : 6,\n  \"AssetName\" : \"AssetName\",\n  \"ObjectName\" : \"ObjectName\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DynamicTaggingRuleTestResult>>(exampleJson)
                        : default(List<DynamicTaggingRuleTestResult>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates an existing PartitionProfileAccountDiscoverySchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the PartitionProfileAccountDiscoverySchedule</param>
        /// <param name="body">Updated PartitionProfileAccountDiscoverySchedule</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">PartitionProfileAccountDiscoverySchedule does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/AccountDiscoverySchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateAccountDiscoveryAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AccountDiscoverySchedule), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateAccountDiscoveryAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromBody]AccountDiscoverySchedule body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AccountDiscoverySchedule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 21,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 22,\n  \"DiscoveryType\" : \"Directory\",\n  \"DirectoryName\" : \"DirectoryName\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"AutoConfigureDependentSystems\" : true,\n  \"DirectoryId\" : 6,\n  \"AccountDiscoveryRules\" : [ {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  }, {\n    \"UnixAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"AutoManageDiscoveredAccounts\" : true,\n    \"DirectoryAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"SearchName\" : \"SearchName\",\n      \"Groups\" : [ \"Groups\", \"Groups\" ],\n      \"SearchScope\" : \"OneLevel\",\n      \"SearchBase\" : \"SearchBase\",\n      \"SearchNameType\" : \"StartsWith\",\n      \"RuleType\" : \"Name\",\n      \"LdapFilter\" : \"LdapFilter\"\n    },\n    \"StarlingConnectAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"GroupFilter\" : \"GroupFilter\",\n        \"RoleFilter\" : \"RoleFilter\"\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"WindowsAccountDiscoveryProperties\" : {\n      \"PropertyConstraintProperties\" : {\n        \"NameFilter\" : \"NameFilter\",\n        \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n        \"GroupFilter\" : \"GroupFilter\",\n        \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n      },\n      \"RuleType\" : \"PropertyConstraint\"\n    },\n    \"Name\" : \"Name\",\n    \"AccountTemplate\" : {\n      \"ProfileId\" : 0,\n      \"SshKeyProfileName\" : \"SshKeyProfileName\",\n      \"InitialPassword\" : \"InitialPassword\",\n      \"SshKeySyncGroupPriority\" : 2,\n      \"Description\" : \"Description\",\n      \"AllowSessionRelease\" : true,\n      \"SshKeySyncGroupId\" : 5,\n      \"SyncGroupName\" : \"SyncGroupName\",\n      \"InitialSshKey\" : {\n        \"Comment\" : \"Comment\",\n        \"Fingerprint\" : \"Fingerprint\",\n        \"PrivateKey\" : \"PrivateKey\",\n        \"FingerprintSha256\" : \"FingerprintSha256\",\n        \"KeyType\" : \"Unknown\",\n        \"PublicKey\" : \"PublicKey\",\n        \"Passphrase\" : \"Passphrase\",\n        \"KeyLength\" : 4884\n      },\n      \"ProfileName\" : \"ProfileName\",\n      \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n      \"SharedServiceAccount\" : false,\n      \"SshKeyProfileId\" : 6,\n      \"AllowPasswordRelease\" : true,\n      \"HasInitialPassword\" : true,\n      \"AllowSshKeyRelease\" : true,\n      \"SyncGroupId\" : 1,\n      \"SetInitialSshKey\" : true,\n      \"SetInitialPassword\" : true,\n      \"SyncGroupPriority\" : 5,\n      \"HasInitialSshKey\" : true,\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    }\n  } ],\n  \"AssetsCount\" : 1,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"ScheduleDiscoverServices\" : true,\n  \"RepeatInterval\" : 494379917\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AccountDiscoverySchedule>(exampleJson)
                        : default(AccountDiscoverySchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Sets an existing profile schedule&#x27;s rules
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the profile schedule</param>
        /// <param name="body">rules to assign to the profile schedule</param>
        /// <response code="200">Success</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Updated rules not found</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/AccountDiscoverySchedules/{scheduleId}/Rules")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateAccountDiscoveryRulesAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AccountDiscoveryRule>), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateAccountDiscoveryRulesAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromBody]List<AccountDiscoveryRule> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<AccountDiscoveryRule>));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"UnixAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"GroupFilter\" : \"GroupFilter\",\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n      \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"AutoManageDiscoveredAccounts\" : true,\n  \"DirectoryAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n      \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n      \"GroupFilter\" : \"GroupFilter\",\n      \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n    },\n    \"SearchName\" : \"SearchName\",\n    \"Groups\" : [ \"Groups\", \"Groups\" ],\n    \"SearchScope\" : \"OneLevel\",\n    \"SearchBase\" : \"SearchBase\",\n    \"SearchNameType\" : \"StartsWith\",\n    \"RuleType\" : \"Name\",\n    \"LdapFilter\" : \"LdapFilter\"\n  },\n  \"StarlingConnectAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"GroupFilter\" : \"GroupFilter\",\n      \"RoleFilter\" : \"RoleFilter\"\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"WindowsAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n      \"GroupFilter\" : \"GroupFilter\",\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"Name\" : \"Name\",\n  \"AccountTemplate\" : {\n    \"ProfileId\" : 0,\n    \"SshKeyProfileName\" : \"SshKeyProfileName\",\n    \"InitialPassword\" : \"InitialPassword\",\n    \"SshKeySyncGroupPriority\" : 2,\n    \"Description\" : \"Description\",\n    \"AllowSessionRelease\" : true,\n    \"SshKeySyncGroupId\" : 5,\n    \"SyncGroupName\" : \"SyncGroupName\",\n    \"InitialSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ProfileName\" : \"ProfileName\",\n    \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n    \"SharedServiceAccount\" : false,\n    \"SshKeyProfileId\" : 6,\n    \"AllowPasswordRelease\" : true,\n    \"HasInitialPassword\" : true,\n    \"AllowSshKeyRelease\" : true,\n    \"SyncGroupId\" : 1,\n    \"SetInitialSshKey\" : true,\n    \"SetInitialPassword\" : true,\n    \"SyncGroupPriority\" : 5,\n    \"HasInitialSshKey\" : true,\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ]\n  }\n}, {\n  \"UnixAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"GroupFilter\" : \"GroupFilter\",\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ],\n      \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ]\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"AutoManageDiscoveredAccounts\" : true,\n  \"DirectoryAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"PrimaryGidFilter\" : [ \"PrimaryGidFilter\", \"PrimaryGidFilter\" ],\n      \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n      \"GroupFilter\" : \"GroupFilter\",\n      \"UidFilter\" : [ \"UidFilter\", \"UidFilter\" ],\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n    },\n    \"SearchName\" : \"SearchName\",\n    \"Groups\" : [ \"Groups\", \"Groups\" ],\n    \"SearchScope\" : \"OneLevel\",\n    \"SearchBase\" : \"SearchBase\",\n    \"SearchNameType\" : \"StartsWith\",\n    \"RuleType\" : \"Name\",\n    \"LdapFilter\" : \"LdapFilter\"\n  },\n  \"StarlingConnectAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"GroupFilter\" : \"GroupFilter\",\n      \"RoleFilter\" : \"RoleFilter\"\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"WindowsAccountDiscoveryProperties\" : {\n    \"PropertyConstraintProperties\" : {\n      \"NameFilter\" : \"NameFilter\",\n      \"RidFilter\" : [ \"RidFilter\", \"RidFilter\" ],\n      \"GroupFilter\" : \"GroupFilter\",\n      \"GidFilter\" : [ \"GidFilter\", \"GidFilter\" ]\n    },\n    \"RuleType\" : \"PropertyConstraint\"\n  },\n  \"Name\" : \"Name\",\n  \"AccountTemplate\" : {\n    \"ProfileId\" : 0,\n    \"SshKeyProfileName\" : \"SshKeyProfileName\",\n    \"InitialPassword\" : \"InitialPassword\",\n    \"SshKeySyncGroupPriority\" : 2,\n    \"Description\" : \"Description\",\n    \"AllowSessionRelease\" : true,\n    \"SshKeySyncGroupId\" : 5,\n    \"SyncGroupName\" : \"SyncGroupName\",\n    \"InitialSshKey\" : {\n      \"Comment\" : \"Comment\",\n      \"Fingerprint\" : \"Fingerprint\",\n      \"PrivateKey\" : \"PrivateKey\",\n      \"FingerprintSha256\" : \"FingerprintSha256\",\n      \"KeyType\" : \"Unknown\",\n      \"PublicKey\" : \"PublicKey\",\n      \"Passphrase\" : \"Passphrase\",\n      \"KeyLength\" : 4884\n    },\n    \"ProfileName\" : \"ProfileName\",\n    \"SshKeySyncGroupName\" : \"SshKeySyncGroupName\",\n    \"SharedServiceAccount\" : false,\n    \"SshKeyProfileId\" : 6,\n    \"AllowPasswordRelease\" : true,\n    \"HasInitialPassword\" : true,\n    \"AllowSshKeyRelease\" : true,\n    \"SyncGroupId\" : 1,\n    \"SetInitialSshKey\" : true,\n    \"SetInitialPassword\" : true,\n    \"SyncGroupPriority\" : 5,\n    \"HasInitialSshKey\" : true,\n    \"Tags\" : [ {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    }, {\n      \"Description\" : \"Description\",\n      \"AdminAssigned\" : true,\n      \"Id\" : 1,\n      \"Name\" : \"Name\"\n    } ]\n  }\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<AccountDiscoveryRule>>(exampleJson)
                        : default(List<AccountDiscoveryRule>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates an AssetPartition
        /// </summary>
        /// <param name="id">Unique identifier of the AssetPartition to update</param>
        /// <param name="body">Updated AssetPartition</param>
        /// <response code="200">Success</response>
        /// <response code="400">60245 - AssetPartition was null</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">AssetPartition does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateAssetPartitionAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetPartition), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60245 - AssetPartition was null")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateAssetPartitionAsync([FromRoute][Required]int? id, [FromBody]AssetPartition body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetPartition));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"CreatedByUserId\" : 6,\n  \"Description\" : \"Description\",\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"DefaultProfileName\" : \"DefaultProfileName\",\n  \"DefaultSshKeyProfileId\" : 5,\n  \"DefaultSshKeyProfileName\" : \"DefaultSshKeyProfileName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"DefaultProfileId\" : 1,\n  \"Id\" : 0,\n  \"Name\" : \"Name\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetPartition>(exampleJson)
                        : default(AssetPartition);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates a PartitionProfileChangeSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the PartitionProfileChangeSchedule to update</param>
        /// <param name="body">Updated PartitionProfileChangeSchedule</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">PartitionProfileChangeSchedule does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/ChangeSchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateChangeScheduleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordChangeSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateChangeScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromBody]PasswordChangeSchedule body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordChangeSchedule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"RescheduleForUnscheduledPasswordUpdate\" : true,\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"UpdateComPlusOnPasswordChange\" : true,\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"RequireCurrentPassword\" : true,\n  \"UpdateIisPoolsOnPasswordChange\" : true,\n  \"UpdateWindowsServiceOnPasswordChange\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 41,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"UpdateWindowsTasksOnPasswordChange\" : true,\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"RestartWindowsServiceOnPasswordChange\" : true,\n  \"NotifyOwnersOnly\" : true,\n  \"AllowPasswordChangeWhenReleased\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordChangeSchedule>(exampleJson)
                        : default(PasswordChangeSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates a PartitionProfileCheckSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the PartitionProfileCheckSchedule to update</param>
        /// <param name="body">Updated PartitionProfileCheckSchedule</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">PartitionProfileCheckSchedule does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/CheckSchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateCheckScheduleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordCheckSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateCheckScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromBody]PasswordCheckSchedule body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordCheckSchedule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"ResetPasswordOnMismatch\" : true,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordCheckSchedule>(exampleJson)
                        : default(PasswordCheckSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates an asset discovery job
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="jobId">Unique identifier of the AssetDiscoveryJob</param>
        /// <param name="body">Updated AssetDiscoveryJob</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">AccountGroup does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/DiscoveryJobs/{jobId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateDiscoveryJobAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AssetDiscoveryJob), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateDiscoveryJobAsync([FromRoute][Required]int? id, [FromRoute][Required]int? jobId, [FromBody]AssetDiscoveryJob body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AssetDiscoveryJob));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"DirectoryDiscoveryProperties\" : {\n    \"DirectoryId\" : 5,\n    \"DirectoryPlatformDisplayName\" : \"DirectoryPlatformDisplayName\",\n    \"DirectoryPlatformType\" : \"Unknown\",\n    \"DirectoryPlatformId\" : 5,\n    \"DirectoryNetworkAddress\" : \"DirectoryNetworkAddress\",\n    \"DirectoryName\" : \"DirectoryName\"\n  },\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"TaskProperties\" : {\n    \"FailedAssetDiscoveryAttempts\" : 6,\n    \"NextAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"HasTaskFailure\" : true,\n    \"LastSuccessAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastFailureAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"LastAssetDiscoveryTaskId\" : \"LastAssetDiscoveryTaskId\",\n    \"LastAssetDiscoveryDate\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"DiscoveryType\" : \"Directory\",\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"NetworkDiscoveryProperties\" : {\n    \"ScanOptions\" : {\n      \"ScanTimeout\" : 2,\n      \"OsFingerPrint\" : false\n    },\n    \"ScanRules\" : [ {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    }, {\n      \"StartIp\" : \"StartIp\",\n      \"EndIp\" : \"EndIp\",\n      \"ExcludeIps\" : [ \"ExcludeIps\", \"ExcludeIps\" ]\n    } ]\n  },\n  \"Rules\" : [ {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  }, {\n    \"AssetTemplate\" : {\n      \"AccountDiscoveryScheduleId\" : 0,\n      \"ManagedNetworkName\" : \"ManagedNetworkName\",\n      \"ConnectionProperties\" : {\n        \"EffectiveServiceAccountName\" : \"EffectiveServiceAccountName\",\n        \"ServiceAccountSshKeyProfileId\" : 1,\n        \"ServiceAccountHasSshKey\" : true,\n        \"RegisteredConnectorId\" : 1,\n        \"ServiceAccountSshKeyProfileName\" : \"ServiceAccountSshKeyProfileName\",\n        \"UseNamedPipeForServiceAccountConnection\" : true,\n        \"Instance\" : \"Instance\",\n        \"PrivilegeElevationCommand\" : \"PrivilegeElevationCommand\",\n        \"Port\" : 48874,\n        \"ServiceAccountSshKey\" : {\n          \"Comment\" : \"Comment\",\n          \"Fingerprint\" : \"Fingerprint\",\n          \"PrivateKey\" : \"PrivateKey\",\n          \"FingerprintSha256\" : \"FingerprintSha256\",\n          \"KeyType\" : \"Unknown\",\n          \"PublicKey\" : \"PublicKey\",\n          \"Passphrase\" : \"Passphrase\",\n          \"KeyLength\" : 4884\n        },\n        \"ServiceAccountId\" : 6,\n        \"ServiceAccountAssetName\" : \"ServiceAccountAssetName\",\n        \"HasSecretKey\" : true,\n        \"TacacsSecret\" : \"TacacsSecret\",\n        \"ServiceAccountSecurityId\" : \"ServiceAccountSecurityId\",\n        \"CommandTimeout\" : 13584,\n        \"ServiceAccountNetbiosName\" : \"ServiceAccountNetbiosName\",\n        \"EnablePassword\" : \"EnablePassword\",\n        \"WorkstationId\" : \"WorkstationId\",\n        \"SslThumbprint\" : \"SslThumbprint\",\n        \"EnableHasPassword\" : true,\n        \"ClientId\" : 737,\n        \"ServiceAccountDistinguishedName\" : \"ServiceAccountDistinguishedName\",\n        \"ServiceAccountPassword\" : \"ServiceAccountPassword\",\n        \"ServiceAccountCredentialType\" : \"None\",\n        \"ServiceAccountUniqueObjectId\" : \"ServiceAccountUniqueObjectId\",\n        \"ServiceAccountHasPassword\" : true,\n        \"ServiceAccountDomainName\" : \"ServiceAccountDomainName\",\n        \"UseSslEncryption\" : true,\n        \"ServiceAccountProfileName\" : \"ServiceAccountProfileName\",\n        \"HasTacacsSecret\" : true,\n        \"UseTopSecretInterval\" : true,\n        \"ServiceAccountName\" : \"ServiceAccountName\",\n        \"VerifySslCertificate\" : true,\n        \"OraclePrivileges\" : \"OraclePrivileges\",\n        \"SecretKey\" : \"SecretKey\",\n        \"ServiceAccountAssetPlatformId\" : 4,\n        \"ServiceAccountProfileId\" : 1,\n        \"ServiceName\" : \"ServiceName\",\n        \"AccessKeyId\" : \"AccessKeyId\",\n        \"ServiceAccountAssetId\" : 1,\n        \"EffectiveServiceAccountDistinguishedName\" : \"EffectiveServiceAccountDistinguishedName\",\n        \"ServiceAccountAssetPlatformDisplayName\" : \"ServiceAccountAssetPlatformDisplayName\"\n      },\n      \"SessionAccessProperties\" : {\n        \"RemoteDesktopSessionPort\" : 21975,\n        \"AllowSessionRequests\" : true,\n        \"TelnetSessionPort\" : 20275,\n        \"SshSessionPort\" : 43935\n      },\n      \"PasswordProfile\" : {\n        \"Id\" : 8,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 9,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformDisplayName\" : \"PlatformDisplayName\",\n      \"ManagedNetworkId\" : 6,\n      \"AccountDiscoveryScheduleName\" : \"AccountDiscoveryScheduleName\",\n      \"PlatformFamily\" : \"None\",\n      \"SshKeyProfile\" : {\n        \"Id\" : 6,\n        \"EffectiveName\" : \"EffectiveName\",\n        \"EffectiveId\" : 3,\n        \"Name\" : \"Name\"\n      },\n      \"PlatformId\" : 1,\n      \"PlatformType\" : \"Unknown\",\n      \"Tags\" : [ {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      }, {\n        \"Description\" : \"Description\",\n        \"AdminAssigned\" : true,\n        \"Id\" : 1,\n        \"Name\" : \"Name\"\n      } ]\n    },\n    \"Conditions\" : [ {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    }, {\n      \"SearchScope\" : \"OneLevel\",\n      \"AdGroups\" : [ \"AdGroups\", \"AdGroups\" ],\n      \"SearchBase\" : \"SearchBase\",\n      \"ConditionType\" : \"FindAll\",\n      \"PropertyConstraints\" : [ {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      }, {\n        \"Operator\" : \"Equals\",\n        \"PropertyName\" : \"Name\",\n        \"Value\" : \"Value\"\n      } ],\n      \"LdapFilter\" : \"LdapFilter\"\n    } ],\n    \"Name\" : \"Name\"\n  } ],\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1210617418\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AssetDiscoveryJob>(exampleJson)
                        : default(AssetDiscoveryJob);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates an existing password rule
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="ruleId">Unique identifier of the AccountPasswordRule to update</param>
        /// <param name="body">Updated AccountPasswordRule</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">AccountPasswordRule does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/PasswordRules/{ruleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdatePasswordRuleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(AccountPasswordRule), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdatePasswordRuleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? ruleId, [FromBody]AccountPasswordRule body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AccountPasswordRule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AllowedFirstCharacterType\" : \"All\",\n  \"Description\" : \"Description\",\n  \"AllowLowercaseCharacters\" : true,\n  \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n  \"NonAlphaNumericRestrictionType\" : \"Include\",\n  \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n  \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n  \"MinNumericCharacters\" : 51,\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n  \"CreatedByUserId\" : 1,\n  \"MaxConsecutiveUppercaseCharacters\" : 180,\n  \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n  \"AssetPartitionId\" : 6,\n  \"MaxConsecutiveLowercaseCharacters\" : 92,\n  \"MaxConsecutiveAlphabeticCharacters\" : 27,\n  \"MaxConsecutiveNumericCharacters\" : 106,\n  \"MinCharacters\" : 145,\n  \"MinLowercaseCharacters\" : 237,\n  \"AllowNonAlphaNumericCharacters\" : false,\n  \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n  \"AllowNumericCharacters\" : true,\n  \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n  \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n  \"AllowUppercaseCharacters\" : true,\n  \"MinUppercaseCharacters\" : 58,\n  \"MaxCharacters\" : 153,\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 0,\n  \"MinNonAlphaNumericCharacters\" : 188,\n  \"IsSystemOwned\" : true\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<AccountPasswordRule>(exampleJson)
                        : default(AccountPasswordRule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates an existing application asset configuration profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the PartitionProfile</param>
        /// <param name="body">Updated PartitionProfile</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateProfileAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordProfile), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateProfileAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromBody]PasswordProfile body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordProfile));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"AccountPasswordRule\" : {\n    \"AllowedFirstCharacterType\" : \"All\",\n    \"Description\" : \"Description\",\n    \"AllowLowercaseCharacters\" : true,\n    \"MaxConsecutiveNonAlphaNumericCharacters\" : 32,\n    \"NonAlphaNumericRestrictionType\" : \"Include\",\n    \"InvalidNumericCharacters\" : [ \"InvalidNumericCharacters\", \"InvalidNumericCharacters\" ],\n    \"InvalidLowercaseCharacters\" : [ \"InvalidLowercaseCharacters\", \"InvalidLowercaseCharacters\" ],\n    \"MinNumericCharacters\" : 51,\n    \"Name\" : \"Name\",\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"InvalidUppercaseCharacters\" : [ \"InvalidUppercaseCharacters\", \"InvalidUppercaseCharacters\" ],\n    \"CreatedByUserId\" : 1,\n    \"MaxConsecutiveUppercaseCharacters\" : 180,\n    \"AllowedNonAlphaNumericCharacters\" : [ \"AllowedNonAlphaNumericCharacters\", \"AllowedNonAlphaNumericCharacters\" ],\n    \"AssetPartitionId\" : 6,\n    \"MaxConsecutiveLowercaseCharacters\" : 92,\n    \"MaxConsecutiveAlphabeticCharacters\" : 27,\n    \"MaxConsecutiveNumericCharacters\" : 106,\n    \"MinCharacters\" : 145,\n    \"MinLowercaseCharacters\" : 237,\n    \"AllowNonAlphaNumericCharacters\" : false,\n    \"InvalidNonAlphaNumericCharacters\" : [ \"InvalidNonAlphaNumericCharacters\", \"InvalidNonAlphaNumericCharacters\" ],\n    \"AllowNumericCharacters\" : true,\n    \"MaxConsecutiveAlphaNumericCharacters\" : 38,\n    \"RepeatedCharacterRestriction\" : \"NotSpecified\",\n    \"AllowUppercaseCharacters\" : true,\n    \"MinUppercaseCharacters\" : 58,\n    \"MaxCharacters\" : 153,\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 0,\n    \"MinNonAlphaNumericCharacters\" : 188,\n    \"IsSystemOwned\" : true\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"AccountPasswordRuleName\" : \"AccountPasswordRuleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"ResetPasswordOnMismatch\" : true,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"RescheduleForUnscheduledPasswordUpdate\" : true,\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"UpdateComPlusOnPasswordChange\" : true,\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"RequireCurrentPassword\" : true,\n    \"UpdateIisPoolsOnPasswordChange\" : true,\n    \"UpdateWindowsServiceOnPasswordChange\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 41,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"UpdateWindowsTasksOnPasswordChange\" : true,\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"RestartWindowsServiceOnPasswordChange\" : true,\n    \"NotifyOwnersOnly\" : true,\n    \"AllowPasswordChangeWhenReleased\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"CheckScheduleId\" : 5,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0,\n  \"AccountPasswordRuleId\" : 1\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordProfile>(exampleJson)
                        : default(PasswordProfile);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates a SshKeyChangeSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the SshKeyChangeSchedule to update</param>
        /// <param name="body">Updated SshKeyChangeSchedule</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">SshKeyChangeSchedule does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyChangeSchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateSshKeyChangeScheduleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyChangeSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateSshKeyChangeScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromBody]SshKeyChangeSchedule body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyChangeSchedule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ScheduleType\" : \"Never\",\n  \"Description\" : \"Description\",\n  \"StartHour\" : 16,\n  \"GeneratedKeyLength\" : 6,\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"RepeatDayOfMonth\" : 7,\n  \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n  \"SuspendAccountWhenCheckedIn\" : true,\n  \"AssetPartitionId\" : 0,\n  \"StartMinute\" : 54,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"GeneratedKeyType\" : \"Unknown\",\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"NotifyOwnersOnly\" : true,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 1,\n  \"TimeOfDayType\" : \"Instant\",\n  \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"AllowSshKeyChangeWhenReleased\" : true,\n  \"RepeatInterval\" : 1210617418\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyChangeSchedule>(exampleJson)
                        : default(SshKeyChangeSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates a SshKeyCheckSchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the SshKeyCheckSchedule to update</param>
        /// <param name="body">Updated SshKeyCheckSchedule</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">SshKeyCheckSchedule does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyCheckSchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateSshKeyCheckScheduleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyCheckSchedule), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateSshKeyCheckScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromBody]SshKeyCheckSchedule body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyCheckSchedule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 41,\n  \"Description\" : \"Description\",\n  \"StartHour\" : 5,\n  \"ResetSshKeyOnMismatch\" : true,\n  \"NotifyOwnersOnMismatch\" : true,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 1,\n  \"RepeatDayOfMonth\" : 17,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 6,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 1280358509\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyCheckSchedule>(exampleJson)
                        : default(SshKeyCheckSchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates a SshKeyDiscoverySchedule
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="scheduleId">Unique identifier of the SshKeyDiscoverySchedule to update</param>
        /// <param name="body">Updated SshKeyDiscoverySchedule</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">SshKeyDiscoverySchedule does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyDiscoverySchedules/{scheduleId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateSshKeyDiscoveryScheduleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyDiscoverySchedule), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateSshKeyDiscoveryScheduleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? scheduleId, [FromBody]SshKeyDiscoverySchedule body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyDiscoverySchedule));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 0,\n  \"ScheduleType\" : \"Never\",\n  \"StartMinute\" : 21,\n  \"Description\" : \"Description\",\n  \"ProfilesCount\" : 6,\n  \"StartHour\" : 21,\n  \"RepeatDaysOfWeek\" : [ null, null ],\n  \"RepeatDayOfWeek\" : \"Sunday\",\n  \"RepeatWeekOfMonth\" : \"First\",\n  \"Name\" : \"Name\",\n  \"TimeOfDayIntervals\" : [ {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  }, {\n    \"StartMinute\" : 24,\n    \"StartHour\" : 4,\n    \"EndHour\" : 16,\n    \"Iterations\" : 148,\n    \"EndMinute\" : 7\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n  \"CreatedByUserId\" : 5,\n  \"AccountsCount\" : 1,\n  \"RepeatDayOfMonth\" : 22,\n  \"TimeZoneId\" : \"TimeZoneId\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"Id\" : 5,\n  \"TimeOfDayType\" : \"Instant\",\n  \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n  \"RepeatInterval\" : 494379917\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyDiscoverySchedule>(exampleJson)
                        : default(SshKeyDiscoverySchedule);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates an existing SSH key profile
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique identifier of the SshKeyProfile</param>
        /// <param name="body">Updated SshKeyProfile</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">SshKeyProfile does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateSshKeyProfileAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeyProfile), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateSshKeyProfileAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromBody]SshKeyProfile body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeyProfile));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 2,\n  \"Description\" : \"Description\",\n  \"DiscoverySchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 21,\n    \"Description\" : \"Description\",\n    \"ProfilesCount\" : 6,\n    \"StartHour\" : 21,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"AccountsCount\" : 1,\n    \"RepeatDayOfMonth\" : 22,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 5,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 494379917\n  },\n  \"ChangeScheduleName\" : \"ChangeScheduleName\",\n  \"CheckSchedule\" : {\n    \"AssetPartitionId\" : 0,\n    \"ScheduleType\" : \"Never\",\n    \"StartMinute\" : 41,\n    \"Description\" : \"Description\",\n    \"StartHour\" : 5,\n    \"ResetSshKeyOnMismatch\" : true,\n    \"NotifyOwnersOnMismatch\" : true,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 1,\n    \"RepeatDayOfMonth\" : 17,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 6,\n    \"TimeOfDayType\" : \"Instant\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"RepeatInterval\" : 1280358509\n  },\n  \"Name\" : \"Name\",\n  \"ChangeSchedule\" : {\n    \"ScheduleType\" : \"Never\",\n    \"Description\" : \"Description\",\n    \"StartHour\" : 16,\n    \"GeneratedKeyLength\" : 6,\n    \"Name\" : \"Name\",\n    \"TimeOfDayIntervals\" : [ {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    }, {\n      \"StartMinute\" : 24,\n      \"StartHour\" : 4,\n      \"EndHour\" : 16,\n      \"Iterations\" : 148,\n      \"EndMinute\" : 7\n    } ],\n    \"AssetPartitionName\" : \"AssetPartitionName\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"CreatedByUserId\" : 5,\n    \"RepeatDayOfMonth\" : 7,\n    \"RescheduleForUnscheduledSshKeyUpdate\" : true,\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AssetPartitionId\" : 0,\n    \"StartMinute\" : 54,\n    \"RepeatDaysOfWeek\" : [ null, null ],\n    \"GeneratedKeyType\" : \"Unknown\",\n    \"RepeatDayOfWeek\" : \"Sunday\",\n    \"RepeatWeekOfMonth\" : \"First\",\n    \"NotifyOwnersOnly\" : true,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"Id\" : 1,\n    \"TimeOfDayType\" : \"Instant\",\n    \"GeneratedKeyComment\" : \"GeneratedKeyComment\",\n    \"RepeatMonthlyScheduleType\" : \"DayOfMonth\",\n    \"AllowSshKeyChangeWhenReleased\" : true,\n    \"RepeatInterval\" : 1210617418\n  },\n  \"Owners\" : [ {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  }, {\n    \"LinkedAccountsCount\" : 7,\n    \"Description\" : \"Description\",\n    \"TimeZoneIanaName\" : \"TimeZoneIanaName\",\n    \"LastLoginDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CloudAssistantRecipientId\" : \"CloudAssistantRecipientId\",\n    \"PrimaryAuthenticationProvider\" : {\n      \"TypeReferenceName\" : \"Unknown\",\n      \"Id\" : 9,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"MobilePhone\" : \"MobilePhone\",\n    \"ChangePasswordAtNextLogin\" : false,\n    \"Name\" : \"Name\",\n    \"TimeZoneDisplayName\" : \"TimeZoneDisplayName\",\n    \"Locked\" : false,\n    \"AdminRoles\" : [ \"GlobalAdmin\", \"GlobalAdmin\" ],\n    \"CreatedByUserId\" : 4,\n    \"DisplayName\" : \"DisplayName\",\n    \"Base64PhotoData\" : \"Base64PhotoData\",\n    \"Disabled\" : false,\n    \"IsPartitionOwner\" : true,\n    \"WorkPhone\" : \"WorkPhone\",\n    \"DirectoryProperties\" : {\n      \"DirectoryId\" : 2,\n      \"DomainName\" : \"DomainName\",\n      \"DistinguishedName\" : \"DistinguishedName\",\n      \"ObjectSid\" : \"ObjectSid\",\n      \"ObjectGuid\" : \"ObjectGuid\",\n      \"NetbiosName\" : \"NetbiosName\",\n      \"DirectoryName\" : \"DirectoryName\"\n    },\n    \"PasswordNeverExpires\" : false,\n    \"FirstName\" : \"FirstName\",\n    \"IdentityProvider\" : {\n      \"Id\" : 2,\n      \"Name\" : \"Name\"\n    },\n    \"EmailAddress\" : \"EmailAddress\",\n    \"RequireCertificateAuthentication\" : false,\n    \"SecondaryAuthenticationProvider\" : {\n      \"Id\" : 3,\n      \"Identity\" : \"Identity\",\n      \"Name\" : \"Name\"\n    },\n    \"DirectoryRequireCertificateAuthentication\" : false,\n    \"TimeZoneId\" : \"TimeZoneId\",\n    \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n    \"CloudAssistantApproveEnabled\" : true,\n    \"Id\" : 7,\n    \"LastName\" : \"LastName\",\n    \"AllowPersonalAccounts\" : false,\n    \"IsSystemOwned\" : true\n  } ],\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"CreatedByUserId\" : 6,\n  \"DiscoveryScheduleId\" : 5,\n  \"CheckScheduleName\" : \"CheckScheduleName\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"DiscoveryScheduleName\" : \"DiscoveryScheduleName\",\n  \"CheckScheduleId\" : 1,\n  \"ChangeScheduleId\" : 5,\n  \"Id\" : 0\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeyProfile>(exampleJson)
                        : default(SshKeyProfile);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates an existing profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="body">Updated SshKeySyncGroup</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/SshKeyProfiles/{profileId}/SshKeySyncGroups/{syncGroupId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateSshKeySyncGroupAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(SshKeySyncGroup), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateSshKeySyncGroupAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromBody]SshKeySyncGroup body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SshKeySyncGroup));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailureSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSshKeyChangeTaskId\" : \"LastSshKeyChangeTaskId\",\n      \"FailedSshKeyChangeAttempts\" : 6,\n      \"NextSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastSuccessSshKeyChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SshKeySyncGroup>(exampleJson)
                        : default(SshKeySyncGroup);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates an existing profile sync group
        /// </summary>
        /// <param name="id">Unique ID of asset partition</param>
        /// <param name="profileId">Unique ID of profile</param>
        /// <param name="syncGroupId">Unique ID of sync group</param>
        /// <param name="body">Updated PasswordSyncGroup</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">PartitionProfile does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/Profiles/{profileId}/SyncGroups/{syncGroupId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateSyncGroupAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PasswordSyncGroup), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateSyncGroupAsync([FromRoute][Required]int? id, [FromRoute][Required]int? profileId, [FromRoute][Required]int? syncGroupId, [FromBody]PasswordSyncGroup body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PasswordSyncGroup));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"ProfileId\" : 6,\n  \"AssetPartitionId\" : 1,\n  \"LastSyncAccountsTaskId\" : \"LastSyncAccountsTaskId\",\n  \"Description\" : \"Description\",\n  \"IsSynchronized\" : true,\n  \"ProfileName\" : \"ProfileName\",\n  \"Name\" : \"Name\",\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"FailedSyncAccountsAttempts\" : 5,\n  \"CreatedByUserId\" : 5,\n  \"LastSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"NextSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"CreatedByUserDisplayName\" : \"CreatedByUserDisplayName\",\n  \"LastSuccessSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Id\" : 0,\n  \"Disabled\" : true,\n  \"LastFailureSyncAccountsDate\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"Accounts\" : [ {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  }, {\n    \"IsServiceAccount\" : true,\n    \"Description\" : \"Description\",\n    \"Platform\" : {\n      \"PlatformFamily\" : \"None\",\n      \"DisplayName\" : \"DisplayName\",\n      \"Id\" : 6,\n      \"IsAcctNameCaseSensitive\" : true,\n      \"PlatformType\" : \"Unknown\",\n      \"SupportsSessionManagement\" : true\n    },\n    \"IsSynchronized\" : true,\n    \"DomainName\" : \"DomainName\",\n    \"DistinguishedName\" : \"DistinguishedName\",\n    \"SyncPriority\" : 171976544,\n    \"LinkedUsersCount\" : 5,\n    \"RequestProperties\" : {\n      \"AllowPasswordRequest\" : true,\n      \"AllowSshKeyRequest\" : true,\n      \"AllowSessionRequest\" : true\n    },\n    \"AccountType\" : \"Asset\",\n    \"Name\" : \"Name\",\n    \"NotifyOwnersOnly\" : true,\n    \"HasSshKey\" : true,\n    \"TaskProperties\" : {\n      \"LastSuccessPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastFailurePasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"LastPasswordChangeTaskId\" : \"LastPasswordChangeTaskId\",\n      \"FailedPasswordChangeAttempts\" : 6,\n      \"NextPasswordChangeDate\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"SuspendAccountWhenCheckedIn\" : true,\n    \"AltLoginName\" : \"AltLoginName\",\n    \"Asset\" : {\n      \"AssetPartitionId\" : 6,\n      \"AssetPartitionName\" : \"AssetPartitionName\",\n      \"NetworkAddress\" : \"NetworkAddress\",\n      \"Id\" : 3,\n      \"Name\" : \"Name\"\n    },\n    \"NetBiosName\" : \"NetBiosName\",\n    \"Id\" : 1,\n    \"Disabled\" : true,\n    \"HasPassword\" : true\n  } ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PasswordSyncGroup>(exampleJson)
                        : default(PasswordSyncGroup);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates a partition tag
        /// </summary>
        /// <param name="id">Unique ID of the partition</param>
        /// <param name="tagId">Unique identifier of the tag</param>
        /// <param name="body">Updated Tag</param>
        /// <response code="200">Success</response>
        /// <response code="400">60102 - id value does not match the resource URI</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Tag does not exist</response>
        [HttpPut]
        [Route("/service/core/v4/AssetPartitions/{id}/Tags/{tagId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsUpdateTagAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(PartitionTag), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiError), description: "60102 - id value does not match the resource URI")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsUpdateTagAsync([FromRoute][Required]int? id, [FromRoute][Required]int? tagId, [FromBody]PartitionTag body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PartitionTag));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"AssetPartitionId\" : 5,\n  \"AssetPartitionName\" : \"AssetPartitionName\",\n  \"Description\" : \"Description\",\n  \"AssetTaggingRule\" : {\n    \"RuleConditionGroup\" : {\n      \"Children\" : [ {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      }, {\n        \"TaggingGroupingCondition\" : {\n          \"CompareValue\" : \"CompareValue\",\n          \"CompareType\" : \"EqualTo\",\n          \"ObjectAttribute\" : \"Name\"\n        }\n      } ],\n      \"LogicalJoinType\" : \"And\"\n    },\n    \"Description\" : \"Description\",\n    \"Enabled\" : true\n  },\n  \"ManagedBy\" : [ {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  }, {\n    \"IdentityProviderId\" : 4,\n    \"FullDisplayName\" : \"FullDisplayName\",\n    \"DomainName\" : \"DomainName\",\n    \"DisplayName\" : \"DisplayName\",\n    \"IdentityProviderName\" : \"IdentityProviderName\",\n    \"Id\" : 0,\n    \"EmailAddress\" : \"EmailAddress\",\n    \"IsSystemOwned\" : true,\n    \"Name\" : \"Name\"\n  } ],\n  \"Id\" : 1,\n  \"Name\" : \"Name\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PartitionTag>(exampleJson)
                        : default(PartitionTag);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Validates a proposed password against the given rule
        /// </summary>
        /// <param name="id">Unique ID of an AssetPartition</param>
        /// <param name="ruleId">Unique identifier of the PartitionAccountPasswordRule to update</param>
        /// <param name="body">Password to validate against this rule</param>
        /// <response code="200">Success</response>
        /// <response code="400">Password was not valid</response>
        /// <response code="403">Must have AssetAdmin or PartitionAdmin permission</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/service/core/v4/AssetPartitions/{id}/PasswordRules/{ruleId}/ValidatePassword")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AssetPartitionsValidateAccountPasswordByRuleAsync")]
        [SwaggerResponse(statusCode: 200, type: typeof(bool?), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(ApiError), description: "Must have AssetAdmin or PartitionAdmin permission")]
        public virtual IActionResult AssetPartitionsValidateAccountPasswordByRuleAsync([FromRoute][Required]int? id, [FromRoute][Required]int? ruleId, [FromBody]string body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(bool?));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ApiError));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "true";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<bool?>(exampleJson)
                        : default(bool?);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
